{"version":3,"sources":["assets/images/discord-brands.svg","connectors/injected-tron-connector/tronlink-abis.ts","connectors/injected-tron-connector/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/blockchain.ts","constants/addresses.ts","constants/index.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","hooks/index.ts","components/Web3Status/index.tsx","components/Header/index.tsx","state/application/actions.ts","assets/images/item/ban1.jpg","assets/images/item/ban2.jpg","pages/Home/components/Banner/index.tsx","pages/Home/components/Jackpot/index.tsx","pages/Home/components/Role/index.tsx","pages/Home/components/Winner/index.tsx","store/slices/messages-slice.ts","helpers/metamask-error-wrap.ts","store/slices/pending-txns-slice.ts","helpers/set-all.ts","store/slices/play-slice.ts","store/slices/NFt-slice.ts","store/slices/game-slice.ts","pages/Home/components/CurrentBattle/index.tsx","pages/Home/components/FinishedBattle/index.tsx","pages/Home/index.tsx","store/slices/staking-slice.ts","pages/Stake/components/MeowToken/index.tsx","pages/Stake/components/ChestInfo/index.tsx","pages/Stake/index.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/actions.ts","state/user/reducer.ts","state/transactions/actions.ts","state/transactions/reducer.ts","state/multicall/actions.ts","state/multicall/reducer.ts","state/index.ts","App.tsx","theme/index.tsx","utils/getLibrary.ts","hooks/useDebounce.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","constants/multicall/index.ts","utils/index.ts","hooks/useContract.ts","utils/retry.ts","state/application/hooks.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/updater.tsx","state/user/updater.tsx","reportWebVitals.ts","index.tsx"],"names":["abis","ERC20_ABI","IntercroneswapV1Router02ABI","InjectedTronConnector","Error","kwargs","provider","getParamTypes","params","map","type","components","join","signs","web3","Web3","providers","WebsocketProvider","fn","sign","eth","abi","encodeFunctionSignature","name","inputs","getFunctionSelector","err","createTronLinkProvider","network","process","tronApiUrl","functionSignatures","args","this","request","res","requestProvider","method","accounts","account","chainId","AbstractConnector","NetworkConnector","createJavaTronProvider","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","urls","Networks","supportedChainIds","DEFAULD_NETWORK","GOERLI","GOERLI_TESTNET","MEOW_ADDRESS","NFT_ADDRESS","MEOWTOKEN_ADDRESS","getAddresses","networkID","NetworkContextName","messages","switchRequest","window","ethereum","swithNetwork","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","onChainProvider","useMemo","useAddress","address","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","setAddress","uri","StaticJsonRpcProvider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","AVAX","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","Provider","value","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","Web3Status","isConnected","buttonText","clickFunc","buttonStyle","slice","backgroundColor","useEffect","className","style","onClick","ApplicationModal","menuLists","link","text","Header","history","useHistory","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","sx","Container","maxWidth","Toolbar","disableGutters","justifyContent","columnGap","Link","href","textDecoration","Typography","fontFamily","fontSize","xs","sm","md","Box","display","alignItems","Button","target","rel","variant","color","component","src","DiscordIcon","alt","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","mt","MenuItem","list","key","push","Banner","width","mr","BannerImage1","BannerImage2","Jackpot","JackpotAmount","useSelector","state","app","jackpotAmount","paddingY","py","px","textAlign","mx","flexWrap","pb","paddingX","marginTop","borderRadius","border","xl","left","bottom","Role","randomData","data","index","lineHeight","randomNumber1","randomNumber2","Winner","winnerData","Table","TableBody","TableRow","TableCell","borderBottom","padding","winCount","createMessage","severity","message","messagesSlice","createSlice","initialState","reducers","error","action","payload","info","warning","success","close","actions","metamaskErrorWrap","dispatch","indexOf","includes","split","trim","pendingTxnsSlice","fetchPendingTxns","clearPendingTxn","find","x","txnHash","splice","setAll","properties","Object","keys","forEach","EnterRoom","createAsyncThunk","tokenId","fightRoom","whichroom","url","addresses","provider1","ethers","send","signer","meowContract","Contract","meowContractABI","enterRoom","enterTx","wait","axios","post","hash","ClaimFight","meowContractRead","random1","random2","claimFight","gasLimit","room","firstrandom","secondrandom","flag","get","resultData","fighter1","fighter2","firstNFT","secondNFT","fightSlice","loading","fetchAppSuccess","extraReducers","builder","addCase","pending","fulfilled","rejected","approveNFT","createSelector","fight","nftContract","NFTContractABI","approve","loadNFTDetails","tokenIds","allowtmp","Promise","all","getApproved","allows","allow","allowances","nftSlice","loadGameDetails","nft","gameData","gamePrice","Math","pow","gameprice","toString","gameSlice","top","transform","lg","height","bgcolor","boxShadow","p","overflowY","CurrentBattle","firRandomData","secRandomData","gameLoading","allowFlg","isLoading","Datas","roomnum","firstNFt","secondNFt","firstaddress","secondaddress","fightroom","whichfight","whichFight","openState","setOpenState","claimState","setClaimState","useDispatch","nftids","setNftIds","nfturls","setNftUrls","setWhichroom","setWhichfight","decide","setDecide","socket","io","getDate","date","Date","year","getFullYear","month","getMonth","day","hour","getHours","minute","getMinutes","second","getSeconds","getIds","getUrls","getApprove","meta","requestStatus","fightRoomnum","emit","getGameData","delete","length","ml","mb","flexDirection","minWidth","disabled","undefined","my","marginRight","Modal","m","Skeleton","onEnterRoom","onClaimFight","FinishedBattle","nftUrl1","address1","nftUrl2","pt","address2","Home","stackingMeow","amount","stackamount","stake","unstackingMeow","unstackamount","unStake","stakeSlice","MeowToken","stack","stackAmount","changesStack","unstackAmount","changeUnstack","setWalletChecked","marginX","pl","opacity","TextField","required","label","size","onChange","e","ChestInfo","tp","Stake","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","createReducer","blockNumber","popupList","openModal","max","content","removeAfterMs","filter","popup","concat","nanoid","show","updateVersion","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning","currentTimestamp","getTime","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","now","transactions","from","approval","summary","claim","txs","addedTime","tx","lastCheckedBlockNumber","receipt","confirmedTime","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","calls","blocksPerFetch","listeners","callListeners","callKey","fetchingBlockNumber","current","results","store","configureStore","reducer","application","user","multicall","appReducer","fightReducer","stackReducer","nftReducer","middleware","getDefaultMiddleware","serializableCheck","preloadedState","load","states","App","walletChecked","LoadDetails","whichDetails","loadProvider","loadApp","exact","path","to","ThemeProvider","theme","createTheme","palette","mode","common","black","primary","light","main","dark","secondary","StyledEngineProvider","injectFirst","CssBaseline","getLibrary","library","pollingInterval","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","VISIBILITY_STATE_SUPPORTED","document","useIsWindowVisible","visibilityState","focused","Updater","windowVisible","setState","blockNumberCallback","getBlockNumber","catch","removeListener","debouncedState","MULTICALL_NETWORKS","ChainId","MAINNET","NILE","SHASTA","isAddress","useContract","ABI","withSignerIfPossible","AddressZero","connectUnchecked","getProviderOrSigner","getContract","waitRandom","min","ms","round","random","resolve","CancelledError","RetryableError","useBlockNumber","CALL_CHUNK_SIZE","multicallContract","chunk","minBlockNumber","debug","aggregate","obj","resultsBlockNumber","returnData","toNumber","debouncedListeners","latestBlockNumber","MULTICALL_ABI","useMulticallContract","cancellations","useRef","listeningKeys","allListeners","reduce","memo","keyListeners","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","JSON","stringify","sort","outdatedCallKeys","parse","pcs","parseCallKey","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","chunkArray","c","rejectCancelled","n","minWait","maxWait","completed","promise","reject","result","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","i","lastBlockNumber","useAddPopup","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","contractAddress","status","transactionHash","transactionIndex","txn","darkHandler","match","matches","matchMedia","addListener","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ProviderNetwork","createWeb3ReactRoot","Updaters","ReactDOM","render","getElementById"],"mappings":"2ohCAAe,MAA0B,2C,0JCK5BA,EAAI,sBAAOC,GAAS,YAAKC,MCSzBC,GARiCC,MAQZ,kDAGhC,WAAYC,GAAqC,IAAD,uBAC9C,cAAMA,IAHDC,cAAQ,EAKb,IAGMC,EAAgB,SAACC,GACrB,OAAOA,EAAOC,KAAI,YAA2D,IAAxDC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WACzB,MAAa,YAATD,EAEA,IACAC,EACGF,KAAI,YACH,OADU,EAAJC,IAER,IACCE,KAAK,KACR,MAGGF,CACT,GACF,EACMG,EAAa,CAAC,EACdC,EAAO,IAAIC,IACf,IAAIA,IAAKC,UAAUC,kBAAkB,mEAoBvC,OAlBAjB,EAAKS,KAAI,SAACS,GACR,IACE,IAAMC,EAAOL,EAAKM,IAAIC,IAAIC,wBAAwB,CAChDC,KAAML,EAAGK,KACTb,KAAMQ,EAAGR,KACTc,OAAQN,EAAGM,SAEbX,EAAMM,GA9BkB,SAACE,GAC3B,OAAOA,EAAIE,KAAO,IAAMhB,EAAcc,EAAIG,QAAU,IAAIZ,KAAK,KAAO,GACtE,CA4BkBa,CAAoBP,EAEpC,CADE,MAAOQ,GACT,CACF,IAEA,EAAKpB,SAAWqB,IAAuB,CACrCC,QAASC,UACTC,WAAYD,sCACZE,mBAAoB/B,EACpBa,UAEF,CAMF,CAmCC,OAnCA,6FAED,WAAsBmB,GAAS,iGACXC,KAAK3B,SAAS4B,QAAQF,GAAM,KAAD,EAApC,OAAHG,EAAG,yBACFA,GAAG,gDACX,mDALA,IAKA,uEAED,gHACyBF,KAAKG,gBAAgB,CAAEC,OAAQ,iBAAkB,KAAD,EAC3C,OADtBC,EAAQ,OACRC,EAAUD,EAAS,GAAE,kBACpB,CAAEhC,SAAU2B,KAAK3B,SAAUiC,YAAS,gDAC5C,kDANA,IAMA,0EAED,iHACSN,KAAK3B,UAAQ,gDACrB,kDAJA,IAIA,yEAED,8GACwB2B,KAAKG,gBAAgB,CAAEC,OAAQ,gBAAiB,KAAD,EAAxD,OAAPG,EAAO,yBACNA,GAAO,gDACf,kDALA,IAKA,yEAED,gHACyBP,KAAKG,gBAAgB,CAAEC,OAAQ,iBAAkB,KAAD,EAC3C,OADtBC,EAAQ,OACRC,EAAUD,EAAS,GAAE,kBACpBC,GAAO,gDACf,kDANA,IAMA,wBAED,WACE,OAAO,CACT,GAAC,2EAED,kHAES,GAAI,2CACZ,kDALA,MAKA,EAxF+B,CAASE,MCV9BC,EAAgB,kDAC3B,WAAYrC,GAAc,IAAD,EAKpB,OALoB,qBACvB,cAAMA,IACDC,SAAWqC,IAAuB,CACrCf,QAASC,UACTC,WAAYD,wCACX,CACL,CAkBC,OAlBA,6FAED,6HACoB,EAAAI,KAAK3B,UAAS4B,QAAO,WAAU,KAAD,EAAvC,OAAHC,EAAG,yBAEFA,GAAG,gDACX,kDANA,IAMA,uEAED,iHACS,CAAE7B,SAAU2B,KAAK3B,WAAU,gDACnC,kDAJA,IAIA,0EAED,iHACS2B,KAAK3B,UAAQ,gDACrB,kDAJA,IAIA,yEAED,iHACS,MAAI,2CACZ,kDAJA,MAIA,EAzB0B,CAASH,GCAhCyC,EAAcf,sCAEPgB,EAA2BC,SAAuC,QAA/B,EAACjB,SAA8B,EAAI,SAM5D,IAAIa,EAAiB,CAC1CK,KAAK,eAAIF,EAAmBD,KAQvB,ICnBKI,EDmBY,IAAI7C,EAAsB,CAChD8C,kBAAmB,CAAC,MAAO,MChB5B,SAJWD,OAAQ,mBAARA,IAAQ,mBAInB,CAJWA,MAAQ,KAMb,IAAME,GAAkBF,EAASG,OCNlCC,GAAiB,CACrBC,aAAc,6CACdC,YAAa,6CACbC,kBAAmB,8CAGRC,GAAe,SAACC,GAC3B,GAAIA,IAAcT,EAASG,OAAQ,OAAOC,GAE1C,MAAMhD,MAAM,wBACd,ECiBasD,GAAqB,U,kDC7BrBC,GAGY,8BAHZA,GAWW,yCAXXA,GAYW,wCAZXA,GAcM,uBAdNA,GAeU,mCAfVA,GAkBe,gCClBtBC,GAAgB,WAClB,OAAOC,OAAOC,SAAS5B,QAAQ,CAC3BG,OAAQ,6BACR7B,OAAQ,CAAC,CAAEgC,QAAS,YAE5B,EAqBauB,GAAY,iDAAG,4FACpBF,OAAOC,SAAS,CAAD,yCAELF,KAAgB,KAAD,qDAEF,OAAf,KAAMI,KAAa,2CAvBxBH,OAAOC,SAAS5B,QAAQ,CAC3BG,OAAQ,0BACR7B,OAAQ,CACJ,CACIgC,QAAS,SACTyB,UAAW,oBACXC,QAAS,CAAC,yCACVC,kBAAmB,CAAC,yCACpBC,eAAgB,CACZ7C,KAAM,OACN8C,OAAQ,OACRC,SAAU,QAcc,KAAD,oBACjBV,KAAgB,KAAD,qDAErBW,QAAQC,IAAI,EAAD,IAAQ,QAG3BD,QAAQC,IAAI,EAAD,IAAQ,gEAG9B,kBAhBwB,mC,QCEnBC,GAAcC,IAAMC,cAA+B,MAE5CC,GAAiB,WAC1B,IAAMC,EAAcC,qBAAWL,IAC/B,IAAKI,EACD,MAAM,IAAIzE,MAAM,6GAEpB,IAAQ2E,EAAoBF,EAApBE,gBACR,OAAOC,mBAAQ,WACX,OAAO,gBAAKD,EAChB,GAAG,CAACF,GACR,EAEaI,GAAa,WAEtB,OADoBL,KAAZM,OAEZ,EAEaC,GAA4D,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACxE,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA8BF,mBAASnC,IAAgB,mBAAhDsC,EAAO,KACd,GAD0B,KACoBH,mBAASnC,KAAgB,mBAAhEuC,EAAe,KAAEC,EAAkB,KAC1C,EAA8BL,mBAAS,IAAG,mBAAnCH,EAAO,KAAES,EAAU,KAE1B,EAAsBN,mBCnDf,+CDmDwC,mBAAxCO,EAAG,KACV,GADkB,KACcP,mBAA0B,IAAIQ,KAAsBD,KAAK,mBAAlFtF,EAAQ,KAAEwF,EAAW,KAE5B,EAAoBT,mBAChB,IAAIU,KAAU,CACVC,eAAe,EACfC,gBAAiB,CACbC,cAAe,CACXC,QAASC,KACTC,QAAS,CACLC,IAAI,eACCtD,EAASuD,KC9D3B,qDDsDAC,EAcN,iBAde,GAgBVC,EAAoB,WACtB,QAAKD,KACAA,EAAUE,cAEnB,EAEMC,EAAiBC,uBACnB,SAACC,GACQA,EAAYC,KAIjBD,EAAYC,GAAG,mBAAmB,kBAAMC,YAAW,kBAAMlD,OAAOmD,SAASC,QAAQ,GAAE,EAAE,IAErFJ,EAAYC,GAAG,eAAc,iDAAE,WAAOI,GAAa,2EAC/CC,EAAcD,GAAO,2CACxB,mDAF4B,IAI7BL,EAAYC,GAAG,WAAW,SAACM,EAAaC,GAC/BA,GACLxD,OAAOmD,SAASC,QACpB,IACJ,GACA,CAAC3G,IAGC6G,EAAa,iDAAG,WAAOG,GAAoB,iFACvC1F,EAAU2F,OAAOD,GAEvB5B,EAAmB9D,GAAS,2CAC/B,gBAJkB,sCAMb4F,EAAUZ,sBAAW,gCAAC,oHACEJ,EAAUgB,UAAU,KAAD,EAIiB,OAJxDX,EAAW,OAEjBF,EAAeE,GAETY,EAAoB,IAAIC,IAAab,EAAa,OAAO,EAAD,OAExCY,EAAkBE,aAAaC,MAAK,SAAAhG,GAAO,OAAI2F,OAAO3F,EAAQY,QAAQ,IAAE,KAAD,EAAhF,OAAPA,EAAO,iBACkBiF,EAAkBI,YAAYC,aAAa,KAAD,GAUtD,OAVbC,EAAgB,OAEtBpC,EAAWoC,GAEXrC,EAAmBlD,GAEfA,IAAYQ,EAASuD,MACrBT,EAAY2B,GAGhBlC,GAAa,GAAM,kBAEZkC,GAAiB,4CACzB,CAACnH,EAAUkG,EAAWlB,IAEnB0C,EAAiB,iDAAG,2FAClBvC,IAAoBvC,GAAe,gBAC+B,IAA7CW,OAAOoE,QAAQtE,IACnB,CAAD,+BACNI,KAAe,KAAD,EACpBF,OAAOmD,SAASC,SAAS,iCAEtB,GAAI,iCAGR,GAAK,2CACf,kBAXsB,mCAajBiB,EAAatB,sBAAW,gCAAC,wFAC3BJ,EAAU2B,sBACV5C,GAAa,GAEbwB,YAAW,WACPlD,OAAOmD,SAASC,QACpB,GAAG,GAAG,2CACP,CAAC3G,EAAUkG,EAAWlB,IAEnBP,EAAkBC,mBACpB,iBAAO,CACHwC,UACAU,aACAzB,oBACAnG,WACAgF,YACAJ,UACAM,UACAgB,YACAf,kBACAuC,oBACH,GACD,CAACR,EAASU,EAAYzB,EAAmBnG,EAAUgF,EAAWJ,EAASM,EAASgB,EAAWf,IAG/F,OAAO,eAAChB,GAAY2D,SAAQ,CAACC,MAAO,CAAEtD,mBAAkB,SAAEK,GAC9D,EE/JO,SAASkD,KAGd,IAAMC,EAAUC,cACVC,EAAiBD,YAA+B9E,IACtD,OAAO6E,EAAQG,OAASH,EAAUE,CACpC,C,cCLe,SAASE,KACtB,MAAqF/D,KAA7E4C,EAAO,EAAPA,QAASU,EAAU,EAAVA,WAAY5C,EAAS,EAATA,UAAWxE,EAAI,EAAJA,KAAM2E,EAAe,EAAfA,gBAAiBuC,EAAiB,EAAjBA,kBAC/D,EAAoC3C,mBAASC,GAAU,mBAAhDsD,EAAW,KAAErD,EAAY,KAC1BL,EAAUD,KAGZ4D,EAAa,iBACbC,EAAiBtB,EACjBuB,EAAc,CAAC,EAmBnB,OAjBIH,IACAC,EAAU,UAAM3D,EAAQ8D,MAAM,EAAG,GAAE,cAAM9D,EAAQ8D,MAAM,GAAI,KAC3DF,EAAYZ,GAGZU,GAAenD,IAAoBvC,KACnC2F,EAAa,gBACbE,EAAc,CAAEE,gBAAiB,oBACjCH,EAAY,WACRd,GACJ,GAGJkB,qBAAU,WACN3D,EAAaD,EACjB,GAAG,CAACxE,EAAMwE,IAGN,sBAAK6D,UAAU,iBAAiBC,MAAOL,EAAaM,QAASP,EAAU,SACnE,6BAAID,KAGd,CCjBA,ICFYS,GDENC,GAAY,CAChB,CACEC,KAAM,QACNC,KAAM,YAER,CACED,KAAM,SACNC,KAAM,iBA0JKC,GArJA,WACb,IAAMC,EAAUC,cAEhB,EAAwCvE,mBAA6B,MAAK,mBAAnEwE,EAAY,KAAEC,EAAe,KAM9BC,EAAsB,WAC1BD,EAAgB,KAClB,EAOA,OACE,eAACE,EAAA,EAAM,CACLC,SAAS,SACTd,UAAU,SACVe,GAAI,CAAEjB,gBAAiB,kBAAmB,SAE1C,eAACkB,EAAA,EAAS,CAACC,SAAS,KAAI,SACtB,gBAACC,EAAA,EAAO,CACNC,gBAAc,EACdJ,GAAI,CAAEK,eAAgB,gBAAiBC,UAAW,OAAQ,UAE1D,eAACC,EAAA,EAAI,CAACC,KAAK,IAAIvB,UAAU,OAAOe,GAAI,CAACS,eAAgB,QAAQ,SAE3D,eAACC,EAAA,EAAU,CAACC,WAAW,YAAYX,GAAI,CAACY,SAAU,CAACC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SAAS,SAAC,iBAE3F,gBAACC,EAAA,EAAG,CAAChB,GAAI,CAAEiB,QAAS,OAAQC,WAAY,SAAUZ,UAAW,OAAQ,UACnE,gBAACU,EAAA,EAAG,CACF/B,UAAU,iBACVe,GAAI,CAAEiB,QAAS,CAAEJ,GAAI,OAAQC,GAAI,SAAW,UAE5C,eAACK,EAAA,EAAM,CACLX,KAAK,qCACLY,OAAO,SACPC,IAAI,aACJpC,UAAU,gBACVqC,QAAQ,YACRtB,GAAI,CACFjB,gBAAiB,cACjB,WAAY,CACVA,gBAAiB,wBAEnB,SAEF,eAAC,IAAW,CAACiB,GAAI,CAAEuB,MAAO,YAE5B,eAACJ,EAAA,EAAM,CACLX,KAAK,8BACLY,OAAO,SACPC,IAAI,aACJpC,UAAU,gBACVqC,QAAQ,YACRC,MAAM,UACNvB,GAAI,CACFjB,gBAAiB,cACjB,WAAY,CACVA,gBAAiB,wBAEnB,SAEF,eAAC,IAAY,CAACiB,GAAI,CAAEuB,MAAO,YAE7B,eAACJ,EAAA,EAAM,CACLX,KAAK,8BACLY,OAAO,SACPC,IAAI,aACJpC,UAAU,gBACVqC,QAAQ,YACRC,MAAM,UACNvB,GAAI,CACFjB,gBAAiB,cACjB,WAAY,CACVA,gBAAiB,wBAEnB,SAEF,eAACiC,EAAA,EAAG,CAACQ,UAAU,MAAMC,IAAKC,EAAaC,IAAI,UAG/C,eAAClD,GAAU,IACX,eAAC0C,EAAA,EAAM,CACLhC,QAnFe,SAACyC,GAC1BhC,EAAgBgC,EAAMC,cACxB,EAkFY5C,UAAU,cACVqC,QAAQ,YACRC,MAAM,UACNvB,GAAI,CACFjB,gBAAiB,yBACjB,WAAY,CACVA,gBAAiB,2BAEnB,SAEF,eAAC,IAAQ,CAACiB,GAAI,CACZuB,MAAO,wBACP,WAAY,CACVA,MAAO,4BAKb,gBAACO,EAAA,EAAI,CACHC,GAAG,cACHC,SAAUrC,EACVsC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdG,KAAMC,QAAQ5C,GACd6C,QAAS3C,EACTG,GAAI,CACFyC,GAAI,QACJ,UAEF,eAACC,EAAA,EAAQ,CAAClB,UAAU,IAAIhB,KAAK,iCAC3BR,GAAI,CACFjB,gBAAiB,yBACjBwC,MAAO,yBACP,SAAC,SAGJlC,GAAU9I,KAAI,SAACoM,EAAMC,GAAG,OACvB,eAACF,EAAA,EAAQ,CACP1C,GAAI,CACFjB,gBAAiB,yBACjBwC,MAAO,yBAEXpC,QAAS,kBA7HEG,EA6HoBqD,EAAKrD,KA5HhDO,SACAJ,EAAQoD,KAAKvD,GAFS,IAACA,CA6H8B,EAAC,SACvCqD,EAAKpD,MANOqD,EAOJ,gBAQ3B,EEtLe,I,OAAA,IAA0B,kCCA1B,OAA0B,iCC6B1BE,GAxBA,WACb,OACE,qCACE,gBAAC9B,EAAA,EAAG,CAAC/B,UAAU,mBAAkB,UAC/B,eAAC+B,EAAA,EAAG,CACFQ,UAAU,MACVxB,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,SAC1BkC,GAAI,CAAEnC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAE1BU,IAAKwB,GACLtB,IAAI,iBAEN,eAACX,EAAA,EAAG,CACFQ,UAAU,MACVxB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,QAASC,GAAI,UAChCW,IAAKyB,GACLvB,IAAI,qBAKd,ECwGewB,GA9HC,WACd,IAAMC,EAAgBC,aACpB,SAACC,GAAK,OAAKA,EAAMC,IAAIC,aAAa,IAG9B/D,EAAUC,cAKhB,OACE,gBAACsB,EAAA,EAAG,CACFhB,GAAI,CACFjB,gBAAiB,yBACjB0E,SAAU,MACV1D,SAAU,YACV,UAEF,gBAACW,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFuB,MAAO,UACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B4C,GAAI,EACJC,GAAI,CAAE9C,GAAI,EAAGC,GAAI,GACjB/B,gBAAiB,sBACjBgE,MAAO,CAAElC,GAAI,QAASC,GAAI,SAC1B8C,UAAW,SACXC,GAAI,QACJ,UACH,sBACqBT,EAAc,YAEpC,gBAACpC,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,SAChByD,SAAU,OACV5C,WAAY,aACZ6C,GAAI,GACJ,UAEF,eAAC/C,EAAA,EAAG,UACF,eAACA,EAAA,EAAG,UACF,eAACG,EAAA,EAAM,CACLnB,GAAI,CACFgE,SAAU,OACVP,SAAU,MACVQ,UAAW,MACXrD,SAAU,OACVoC,GAAI,EACJzB,MAAO,sBACPxC,gBAAiB,0BACjB,SACH,gBAKL,eAACoC,EAAA,EAAM,CACLnB,GAAI,CACFgE,SAAU,OACVP,SAAU,MACVQ,UAAW,MACXrD,SAAU,OACVoC,GAAI,EACJzB,MAAO,UACPxC,gBAAiB,WACjB,SACH,aAGD,gBAACiC,EAAA,EAAG,CAAChB,GAAI,CAAEgD,GAAI,GAAI,UACjB,eAAC7B,EAAA,EAAM,CACLnB,GAAI,CACFkE,aAAc,OACdF,SAAU,OACVP,SAAU,MACVU,OAAQ,kBACR5C,MAAO,QAEPsC,GAAI,OACJjD,SAAU,OACVqD,UAAW,MACXhD,QAAS,SAEX9B,QAAS,WAhFM,IAACG,IAiFG,QAhF3BG,EAAQoD,KAAKvD,EAiFL,EAAE,SACH,iBAGD,eAACoB,EAAA,EAAU,CACTV,GAAI,CACFyD,SAAU,MACVG,UAAW,SACXhD,SAAU,OACVW,MAAO,WACP,SACH,4BAKL,eAACb,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFuB,MAAO,OACPX,SAAU,CAAEC,GAAI,OAAQuD,GAAI,QAC5BV,GAAI,EACJC,GAAI,CAAE9C,GAAI,EAAGuD,GAAI,GACjBrF,gBAAiB,sBACjBgE,MAAO,CAAElC,GAAI,QAASuD,GAAI,SAC1BR,UAAW,SACX7D,SAAU,CAAEgB,GAAI,YAChB8C,GAAI,OACJQ,KAAM,MACNC,OAAQ,OACR,SACH,wCAKP,ECxEeC,GArDF,WACX,IAAMC,EAAoBnB,aACxB,SAACC,GAAK,OAAKA,EAAMC,IAAIiB,UAAU,IAGjC,OACE,gBAACxD,EAAA,EAAG,CACFhB,GAAI,CACFjB,gBAAiB,yBACjBiF,SAAU,MACVvB,GAAI,CAAE5B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/BL,GAAI,GACJ,UAEF,eAACrD,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BS,MAAO,UACPmC,GAAI,CAAE7C,GAAI,EAAGE,GAAI,GACjB6C,UAAW,UACX,SACH,oBAGU,OAAVY,QAAU,IAAVA,OAAU,EAAVA,EAAYjO,KAAI,SAACkO,EAAMC,GAAK,OAC3B,gBAAC1D,EAAA,EAAG,WACF,eAACN,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QACxC4D,WAAY,MACZf,UAAW,UACX,SAEDa,EAAKG,gBAER,eAAClE,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QACxC4D,WAAY,MACZf,UAAW,UACX,SAEDa,EAAKI,kBAnBAH,EAqBJ,MAId,E,wCC0CeI,GAtFA,WACb,IAAMC,EAAoB1B,aACxB,SAACC,GAAK,OAAKA,EAAMC,IAAIwB,UAAU,IAGjC,OACE,gBAAC/D,EAAA,EAAG,CACFhB,GAAI,CACFjB,gBAAiB,yBACjBiF,SAAU,MACVvB,GAAI,CAAE5B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/BL,GAAI,GACJ,UAEF,eAACrD,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BS,MAAO,UACPmC,GAAI,CAAE7C,GAAI,EAAGE,GAAI,IACjB,SACH,mBAGD,eAACiE,GAAA,EAAK,UACJ,gBAACC,GAAA,EAAS,WACR,gBAACC,GAAA,EAAQ,WACP,eAACC,GAAA,EAAS,CACRnF,GAAI,CAAEoF,aAAc,OAAQC,QAAS,IAAKzB,UAAW,UAAW,SAEhE,eAAClD,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SACxC,SACH,YAIH,eAACoE,GAAA,EAAS,CACRnF,GAAI,CAAEoF,aAAc,OAAQC,QAAS,IAAKzB,UAAW,UAAW,SAEhE,eAAClD,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SACxC,SACH,kBAKM,OAAVgE,QAAU,IAAVA,OAAU,EAAVA,EAAYxO,KAAI,SAACkO,EAAMC,GAAK,OAC3B,gBAACQ,GAAA,EAAQ,WACP,eAACC,GAAA,EAAS,CACRnF,GAAI,CAAEoF,aAAc,OAAQC,QAAS,IAAKzB,UAAW,UAAW,SAEhE,eAAClD,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SACxC,SAED0D,EAAKa,aAGV,eAACH,GAAA,EAAS,CACRnF,GAAI,CAAEoF,aAAc,OAAQC,QAAS,IAAKzB,UAAW,UAAW,SAEhE,eAAClD,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,SACxC,mBAEE0D,EAAKzJ,QAAQ8D,MAAM,EAAE,GAAE,cAAM2F,EAAKzJ,QAAQ8D,OAAO,UAtB5C4F,EAyBJ,WAMvB,E,mEC9EMa,GAAgB,SAAUjC,EAAsBkC,EAAiBjG,GACnE,IAAMkG,EAAgB,cAClBD,YACGjG,GAEP+D,EAAMmC,QAAUA,CACpB,EAIMC,GAAgBC,aAAY,CAC9BtO,KAAM,WACNuO,aALgC,CAChCH,QAAS,MAKTI,SAAU,CAENC,MAAK,SAACxC,EAAOyC,GACTR,GAAcjC,EAAO,QAASyC,EAAOC,QACzC,EAEAC,KAAI,SAAC3C,EAAOyC,GACRR,GAAcjC,EAAO,OAAQyC,EAAOC,QACxC,EACAE,QAAO,SAAC5C,EAAOyC,GACXR,GAAcjC,EAAO,UAAWyC,EAAOC,QAC3C,EACAG,QAAO,SAAC7C,EAAOyC,GACXR,GAAcjC,EAAO,UAAWyC,EAAOC,QAC3C,EAEAI,MAAK,SAAC9C,GACFA,EAAMmC,QAAU,IACpB,KAID,GAAiDC,GAAcW,QAAvDP,GAAK,GAALA,MAAOG,GAAI,GAAJA,KAAaC,IAAF,GAALE,MAAc,GAAPF,SAASC,GAAO,GAAPA,QChD/BG,IDkDEZ,GAAqB,QClDH,SAAClO,EAAU+O,GACxC,IAAIhH,EAAO9F,GA0BX,OAxBIjC,EAAIsC,OAAsB,QAAdtC,EAAIsC,OACZtC,EAAIiO,QAAQe,QAAQ,0BAA4B,IAChDjH,EAAO,uGAGP/H,EAAIiN,MAAQjN,EAAIiN,KAAKgB,UACrBlG,EAAO/H,EAAIiN,KAAKgB,QAAQgB,SAAS,KAAOjP,EAAIiN,KAAKgB,QAAQiB,MAAM,KAAK,GAAGC,OAASnP,EAAIiN,KAAKA,MAAQjN,EAAIiN,KAAKgB,SAG1GjO,EAAIiN,MAAQjN,EAAIiN,KAAKgB,SAAWjO,EAAIiN,KAAKgB,QAAQgB,SAAS,oCAC1DlH,EAAO,8CAGP/H,EAAIiN,MAAQjN,EAAIiN,KAAKgB,SAAWjO,EAAIiN,KAAKgB,QAAQgB,SAAS,oBAC1DlH,EAAO,mBAIX/H,EAAIsC,MAAqB,OAAbtC,EAAIsC,MACZtC,EAAIiO,QAAQgB,SAAS,uCACrBlH,EAAO,qCAIRgH,EAAST,GAAM,CAAEvG,OAAMuG,MAAOtO,IACzC,GCtBMoP,GAAmBjB,aAAY,CACnCtO,KAAM,sBACNuO,aAJuC,GAKvCC,SAAU,CACRgB,iBAAgB,SAACvD,EAAOyC,GACtBzC,EAAMT,KAAKkD,EAAOC,QACpB,EACAc,gBAAe,SAACxD,EAAOyC,GACrB,IAAM3E,EAASkC,EAAMyD,MAAK,SAACC,GAAC,OAAKA,EAAEC,UAAYlB,EAAOC,OAAO,IACzD5E,GACFkC,EAAM4D,OAAO5D,EAAMkD,QAAQpF,GAAS,EAExC,KA6BG,GAA8CwF,GAAiBP,QAAvDQ,GAAgB,GAAhBA,iBAAkBC,GAAe,GAAfA,gB,IAElBF,GAAwB,Q,kBCrD1BO,GAAS,SAAC7D,EAAY8D,GACjBC,OAAOC,KAAKF,GACpBG,SAAQ,SAAA3E,GACVU,EAAMV,GAAOwE,EAAWxE,EAC5B,GACJ,ECwBa4E,GAAYC,aACvB,0BAAyB,iDAEzB,yHAUY,GARRlO,EAAS,EAATA,UACAnD,EAAQ,EAARA,SACAsR,EAAO,EAAPA,QACAC,EAAS,EAATA,UACAC,EAAS,EAATA,UACAC,EAAG,EAAHA,IACA7M,EAAO,EAAPA,QAEAuL,EAAQ,EAARA,SAEGnQ,EAAS,CAAD,eACiD,OAA5DmQ,EAASL,GAAQ,CAAE3G,KAAM9F,MAAmC,0BAIM,OAD9DqO,EAAYxO,GAAaC,GACzBwO,EAAY,IAAIC,UAAOlR,UAAU0G,aAAa7D,OAAOC,UAAU,EAAD,OAC9DmO,EAAUE,KAAK,sBAAuB,IAAI,KAAD,EAM9C,OALKC,EAASH,EAAUpK,YACnBwK,EAAe,IAAIH,UAAOI,SAC9BN,EAAU3O,aACVkP,KACAH,GACA,EAAD,kBAIiBC,EAAaG,UAAUZ,EAASC,EAAW,CACzDxJ,MAAO,OACN,KAAD,GAFK,OAAPoK,EAAO,iBAIDA,EAAQC,OAAO,KAAD,GAIlB,OAFFC,KAAMC,KAAK,oDAAD,OAC4Cd,EAAS,qBAAaC,EAAG,yBAAiB7M,EAAO,sBAAc2M,IACnH,+EAGKrB,GAAkB,EAAD,GAAMC,IAAS,QAItC,OAJsC,UAEnCgC,GACFhC,EAASO,GAAgByB,EAAQI,OAClC,8EAEJ,qDA/CwB,IA2DdC,GAAanB,aACxB,4BAA2B,iDAE3B,2IAUY,GARRlO,EAAS,EAATA,UACAnD,EAAQ,EAARA,SACAsR,EAAO,EAAPA,QACAC,EAAS,EAATA,UACAC,EAAS,EAATA,UACAC,EAAG,EAAHA,IACA7M,EAAO,EAAPA,QAEAuL,EAAQ,EAARA,SAEGnQ,EAAS,CAAD,eACiD,OAA5DmQ,EAASL,GAAQ,CAAE3G,KAAM9F,MAAmC,0BASM,OAN9DqO,EAAYxO,GAAaC,GACzBsP,EAAmB,IAAIb,UAAOI,SAClCN,EAAU3O,aACVkP,KACAjS,GAEI2R,EAAY,IAAIC,UAAOlR,UAAU0G,aAAa7D,OAAOC,UAAU,EAAD,QAC9DmO,EAAUE,KAAK,sBAAuB,IAAI,KAAD,GAWrB,OAVpBC,EAASH,EAAUpK,YACnBwK,EAAe,IAAIH,UAAOI,SAC9BN,EAAU3O,aACVkP,KACAH,GAEF7N,QAAQC,IAAIoN,EAASC,GAGjBmB,EAAoB,GACpBC,EAAoB,GAAG,EAAD,kBAERZ,EAAaa,WAAWtB,EAASC,EAAW,CAC1DxJ,MAAO,KACP8K,SAAU,MACT,KAAD,GAHK,OAAPV,EAAO,iBAKDA,EAAQC,OAAO,KAAD,GAIlB,OAFFC,KAAMC,KAAK,oDAAD,OAC4Cd,EAAS,sBAAcC,EAAG,0BAAkB7M,IAChG,UACe6N,EAAiBK,KAAKvB,GAAW,KAAD,GAOxB,OAPrBuB,EAAI,OACJC,EAAc9L,OAAO6L,EAAKJ,SAC1BM,EAAe/L,OAAO6L,EAAKH,SAC/BD,EAAQlB,GAAauB,EACrBJ,EAAQnB,GAAawB,EAGjBC,GAAgB,EAAM,EAAD,QAEnBZ,KACLa,IAAI,oDAAD,OAAqD3B,IACxDjK,MAAK,SAACzF,GACLsR,EAAatR,EAAIwM,IACnB,IAAG,KAAD,QAEE0E,EAAcC,GAAY,kCACtBX,KACHa,IAAI,iDAAD,OAC+CJ,EAAKM,WAEvD9L,MAAK,SAACzF,GACL8M,EAAa9M,EAAIwM,IACnB,IAAG,KAAD,gCACK0E,EAAcC,GAAY,kCAC7BX,KACHa,IAAI,iDAAD,OAC+CJ,EAAKO,WAEvD/L,MAAK,SAACzF,GACL8M,EAAa9M,EAAIwM,IACnB,IAAG,KAAD,2BAEJ4E,GAAO,EAAK,yBAGRZ,KAAMC,KAAK,yDAAD,OAC2CQ,EAAKJ,QAAO,0BAAkBI,EAAKH,QAAO,oBAAYpB,IAC/G,KAAD,OAEG5C,EAAW,CAAD,iCACN0D,KAAMC,KAAK,mDAAD,OACqC3D,EAAW/J,QAAO,qBAAa+J,EAAWO,SAAW,IACxG,KAAD,8BAEI+D,EAAK,CAAD,qBACHF,EAAcC,GAAY,kCACtBX,KAAMC,KAAK,mDAAD,OACmCQ,EAAKM,SAAQ,aAAa,IAC7E,KAAD,gCACQL,EAAcC,GAAY,kCAC7BX,KAAMC,KAAK,mDAAD,OACuCQ,EAAKO,SAAQ,aAAa,IAC7E,KAAD,oBAKDhB,KAAMC,KAAK,yDAAD,OAC2CQ,EAAKJ,QAAO,0BAAkBI,EAAKH,QAAO,oBAAYQ,EAAWG,SAAQ,oBAAYH,EAAWI,UAAS,qBAAaT,EAAKM,SAAQ,qBAAaN,EAAKO,SAAQ,oBAAY9B,IAClO,KAAD,4BAEM,CACLmB,UACAC,YACD,QAE6C,OAF7C,2BAED1O,QAAQC,IAAIgM,GAAkB,EAAD,GAAMC,IAAW,kBACvCD,GAAkB,EAAD,GAAMC,IAAS,QAItC,OAJsC,UAEnCgC,GACFhC,EAASO,GAAgByB,EAAQI,OAClC,8EAEJ,qDAzH0B,IAqIvBiB,GAAajE,aAAY,CAC7BtO,KAAM,QACNuO,aAXmB,CACnBiE,SAAS,GAWThE,SAAU,CACRiE,gBAAe,SAACxG,EAAOyC,GACrB,GAGJgE,cAAe,SAACC,GACdA,EACGC,QAAQzC,GAAU0C,SAAS,SAAC5G,EAAOyC,GAClCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQzC,GAAU2C,WAAW,SAAC7G,EAAOyC,GACpCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQzC,GAAU4C,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MACrCxC,EAAMuG,SAAU,CAClB,IACCI,QAAQrB,GAAWsB,SAAS,SAAC5G,EAAOyC,GACnCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQrB,GAAWuB,WAAW,SAAC7G,EAAOyC,GACrCoB,GAAO7D,EAAOyC,EAAOC,SACrB1C,EAAMuG,SAAU,CAClB,IACCI,QAAQrB,GAAWwB,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MACtCxC,EAAMuG,SAAU,CAClB,GACJ,IAKaD,MAAkB,QC3OpBS,ID6OsBT,GAAWvD,QAA/ByD,gBAEYQ,cANV,SAAChH,GAAgB,OAAKA,EAAMiH,KAAM,IAMC,SAACA,GAAK,OAAKA,CAAK,IC/O1C9C,aACxB,qBACA,iDACA,iHAAgE,GAAvDlO,EAAS,EAATA,UAAWnD,EAAQ,EAARA,SAAUsR,EAAO,EAAPA,QAA0BnB,EAAQ,EAARA,SACjDnQ,EAAS,CAAD,eACiD,OAA5DmQ,EAASL,GAAQ,CAAE3G,KAAM9F,MAAmC,0BAIM,OAD9DqO,EAAYxO,GAAaC,GACzBwO,EAAY,IAAIC,UAAOlR,UAAU0G,aAAa7D,OAAOC,UAAU,EAAD,OAC9DmO,EAAUE,KAAK,sBAAuB,IAAI,KAAD,EAM9C,OALKC,EAASH,EAAUpK,YACnB6M,EAAc,IAAIxC,UAAOI,SAC7BN,EAAU1O,YACVqR,KACAvC,GACA,EAAD,kBAGiBsC,EAAYE,QAC1B,6CACAhD,GACA,KAAD,GAMC,OATFa,EAAO,OAIM,UACU,YAEvBhC,EACEM,GAAiB,CAAEI,QAASsB,EAAQI,KAAMpJ,KAJ/B,UAIqC/I,KAH3B,eAIrB,UACI+R,EAAQC,OAAO,KAAD,GAGoC,OAFxDjC,EAASJ,GAAQ,CAAE5G,KAAM9F,MACzB8M,EAASN,GAAK,CAAE1G,KAAM9F,MACtB8M,EAASN,GAAK,CAAE1G,KAAM9F,MAAkC,2BAGV,OAHU,2BAGxDY,QAAQC,IAAIgM,GAAkB,EAAD,GAAMC,IAAW,kBACvCD,GAAkB,EAAD,GAAMC,IAAS,QAItC,OAJsC,UAEnCgC,GACFhC,EAASO,GAAgByB,EAAQI,OAClC,8EAEJ,qDAxCD,KAiDWgC,GAAiBlD,aAC5B,qBACA,iDACA,2GAO6B,OAPpBlO,EAAS,EAATA,UAAWnD,EAAQ,EAARA,SAAUwU,EAAQ,EAARA,SACtB9C,EAAYxO,GAAaC,GACzBiR,EAAc,IAAIxC,UAAOI,SAC7BN,EAAU1O,YACVqR,KACArU,GAEEyU,EAAqB,GAAG,EAAD,OACrBC,QAAQC,IACZH,EAASrU,IAAG,iDAAC,WAAOmR,EAAShD,GAAK,2FACR8F,EAAYQ,YAAYtD,GAAS,KAAD,EAAxDmD,EAASnG,GAAM,kDAChB,qDAFW,KAGZ,KAAD,EAIE,OAHCuG,EAAoB,GACxBJ,EAAStU,KAAI,SAAC2U,EAAOxG,GACnBuG,EAAOvG,GAAmB,+CAAVwG,CAClB,IAAG,kBACI,CACLC,WAAYF,IACb,2CACF,mDArBD,IAiCIG,GAAWzF,aAAY,CAC3BtO,KAAM,MACNuO,aAXmB,CACnBiE,SAAS,GAWThE,SAAU,CACRiE,gBAAe,SAACxG,EAAOyC,GACrBoB,GAAO7D,EAAOyC,EAAOC,QAEvB,GAEF+D,cAAe,SAACC,GACdA,EACGC,QAAQU,GAAeT,SAAS,SAAC5G,EAAOyC,GACvCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQU,GAAeR,WAAW,SAAC7G,EAAOyC,GACzCoB,GAAO7D,EAAOyC,EAAOC,SACrB1C,EAAMuG,SAAU,CAClB,IACCI,QAAQU,GAAeP,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MAC1CxC,EAAMuG,SAAU,CAClB,GACJ,IAKauB,MAAgB,QCpHlBC,IDsHsBD,GAAS/E,QAA7ByD,gBAEYQ,cANV,SAAChH,GAAgB,OAAKA,EAAMgI,GAAI,IAMG,SAACA,GAAG,OAAKA,CAAG,ICxHjC7D,aAC7B,sBACA,iDACA,iHAW4B,OAXnBlO,EAAS,EAATA,UAAWnD,EAAQ,EAARA,SACZ0R,EAAYxO,GAAaC,GACzB4O,EAAe,IAAIH,UAAOI,SAC9BN,EAAU3O,aACVkP,KACAjS,GAGEmV,EAAkB,GAClB/G,EAAoB,GACpB+E,EAAoB,GACpBxE,EAAoB,GAAG,EAAD,OAEpB0D,KAAMa,IAAI,qCAAqC5L,MAAK,SAACzF,GACzDsT,EAAWtT,EAAIwM,IACjB,IAAG,KAAD,mBACIgE,KAAMa,IAAI,oCAAoC5L,MAAK,SAACzF,GACxDuM,EAAavM,EAAIwM,IACnB,IAAG,KAAD,oBACIgE,KAAMa,IAAI,oCAAoC5L,MAAK,SAACzF,GACxDsR,EAAatR,EAAIwM,IACnB,IAAG,KAAD,oBACIgE,KAAMa,IAAI,oCAAoC5L,MAAK,SAACzF,GACxD8M,EAAa9M,EAAIwM,IACnB,IAAG,KAAD,oBAGO0D,EAAaqD,YAAW,QACvB,OADuB,iBAAIC,KAAKC,IAAI,GAAI,IAD5CC,GAAS,WAEbC,WAAW,EAAH,QAEDzD,EAAa3E,gBAAe,QACxB,OADwB,iBAAIiI,KAAKC,IAAI,GAAI,IADhDlI,GAAa,WAEjBoI,WAAQ,kBAEH,CACLD,YACAnI,gBACA+H,WACA/G,aACA+E,aACAxE,eACD,4CACF,mDA1CD,KA6DI8G,GAAYlG,aAAY,CAC5BtO,KAAM,MACNuO,aAlBmB,CACnBiE,SAAS,GAkBThE,SAAU,CACRiE,gBAAe,SAACxG,EAAOyC,GACrBoB,GAAO7D,EAAOyC,EAAOC,QAEvB,GAEF+D,cAAe,SAACC,GACdA,EACGC,QAAQoB,GAAgBnB,SAAS,SAAC5G,EAAOyC,GACxCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQoB,GAAgBlB,WAAW,SAAC7G,EAAOyC,GAC1CoB,GAAO7D,EAAOyC,EAAOC,SACrB1C,EAAMuG,SAAU,CAClB,IACCI,QAAQoB,GAAgBjB,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MAC3CxC,EAAMuG,SAAU,CAClB,GACJ,IAKagC,MAAiB,Q,IAEGA,GAAUxF,QAA9ByD,gBAEYQ,cANV,SAAChH,GAAgB,OAAKA,EAAMC,GAAI,IAMG,SAACA,GAAG,OAAKA,CAAG,I,kBClG1DrE,GAAQ,CACZa,SAAU,WACV+L,IAAK,MACLzH,KAAM,MACN0H,UAAW,wBACXhJ,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,QAASiL,GAAI,UACpDC,OAAQ,QACRC,QAAS,mBACT/H,OAAQ,iBACRgI,UAAW,GACXC,EAAG,EACHnL,QAAS,OACTZ,eAAgB,eAChByD,SAAU,OACV/E,gBAAiB,iBACjBmF,aAAc,EACdmI,UAAW,UAqsBEC,GAlsBO,WACpB,IAAMf,EAAkBlI,aACtB,SAACC,GAAK,OAAKA,EAAMC,IAAIgI,QAAQ,IAE3BgB,EAA0BlJ,aAC5B,SAACC,GAAK,OAAKA,EAAMiH,MAAMzB,OAAO,IAE5B0D,EAA0BnJ,aAC5B,SAACC,GAAK,OAAKA,EAAMiH,MAAMxB,OAAO,IAE1B0D,EAAuBpJ,aAC3B,SAACC,GAAK,OAAKA,EAAMC,IAAIsG,OAAO,IAExB6C,EAAsBrJ,aAC1B,SAACC,GAAK,OAAKA,EAAMgI,IAAIH,UAAU,IAE3BwB,EAAqBtJ,aACzB,SAACC,GAAK,OAAKA,EAAMgI,IAAIzB,OAAO,IAGxB+C,EAAQ,CACZ,CACEC,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfE,WAAY,EACZD,UAAW,GAEb,CACEL,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,GAEd,CACEN,QAAS,EACTC,SAAU,GACVC,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,WAAY,IAIhB5B,GACEA,EAAShV,KAAI,SAACkO,GACZmI,EAAMnI,EAAKoI,QAAU,GAAGC,SAAWrI,EAAKiF,SACxCkD,EAAMnI,EAAKoI,QAAU,GAAGE,UAAYtI,EAAKkF,UACzCiD,EAAMnI,EAAKoI,QAAU,GAAGG,aAAevI,EAAKuI,aAC5CJ,EAAMnI,EAAKoI,QAAU,GAAGI,cAAgBxI,EAAKwI,cAC7CL,EAAMnI,EAAKoI,QAAU,GAAGK,UAAYzI,EAAKkD,UACzCiF,EAAMnI,EAAKoI,QAAU,GAAGM,WAAa1I,EAAK2I,UAC5C,IAEF,MAAkCjS,oBAAS,GAAM,mBAA1CkS,EAAS,KAAEC,EAAY,KAC9B,EAAoCnS,oBAAS,GAAM,mBAA5CoS,EAAU,KAAEC,EAAa,KAC1BxS,EAAUD,KACVwL,EAAWkH,cACjB,EACE/S,KADetE,GAAF,EAAPkH,QAAiB,EAARlH,UAA6BkF,GAAF,EAAjBiB,kBAA0B,EAAPjB,SAE9C,GAFgE,EAATF,UAE3BD,mBAAS,KAAG,mBAAjCuS,EAAM,KAAEC,EAAS,KACxB,EAA8BxS,mBAAS,IAAG,mBAAnCyS,EAAO,KAAEC,EAAU,KAC1B,EAAkC1S,mBAAS,GAAE,mBAAtCyM,EAAS,KAAEkG,EAAY,KAC9B,EAAoC3S,mBAAS,GAAE,mBAAxCgS,EAAU,KAAEY,EAAa,KAChC,EAA4B5S,oBAAS,GAAM,mBAApC6S,EAAM,KAAEC,EAAS,KACpBC,EAASC,aAAG,yBAEVC,EAAU,WACd,IAAIC,EAAO,IAAIC,KACXC,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKD,UACXQ,EAAOP,EAAKQ,WACZC,EAAST,EAAKU,aACdC,EAASX,EAAKY,aAQlB,OANEV,EAAO9C,KAAKC,IAAI,GAAI,IACpB+C,EAAQhD,KAAKC,IAAI,GAAI,GACrBiD,EAAMlD,KAAKC,IAAI,GAAI,GACnBkD,EAAOnD,KAAKC,IAAI,GAAI,GACpBoD,EAASrD,KAAKC,IAAI,GAAI,GACtBsD,CAEJ,EAEME,EAAS,WACbzG,KAAMa,IAAI,6CAAD,OAA8CtO,IAAW0C,MAAK,SAACzF,GACtE0V,EAAU1V,EAAIwM,KAChB,GACF,EAEM0K,EAAU,WACd1G,KAAMa,IAAI,8CAAD,OAA+CtO,IAAW0C,MAAK,SAACzF,GACvE4V,EAAW5V,EAAIwM,MACf2K,GACF,GACF,EAG0B,aAOzB,OAPyB,kCAA1B,wGACQ7I,EACJ8E,GAAgB,CACd9R,UAAW+B,EACXlF,cAEF,KAAD,uCACF,+BAEcgZ,IAAU,8CAQxB,OARwB,mCAAzB,wGACQ7I,EACJoE,GAAe,CACbpR,UAAW+B,EACXlF,WACAwU,SAAU8C,KAEZ,KAAD,uCACF,+BAEchD,GAAQ,GAAD,8CAWrB,OAXqB,mCAAtB,WAAuB3I,GAAU,2FACRwE,EACrB8D,GAAW,CACT9Q,UAAW+B,EACXlF,WACAsR,QAAS3F,KAEX,KAAD,EACqC,cAPxB,OAOCsN,KAAKC,eAClBF,IACD,4CACF,sBAEyB,cAgBzB,OAhByB,mCAA1B,WAA2B1K,GAAa,iFACV,OAAxB6K,EAAenB,IAAU,EAAD,OACL7H,EACrBiB,GAAU,CACRjO,UAAW+B,EACXlF,WACAsR,QAASgG,EAAOhJ,GAChBiD,UAAW4H,EACX3H,UAAWA,EAAY,EACvBC,IAAK+F,EAAQlJ,GACb1J,aAEF,KAAD,EACqC,cAXxB,OAWCqU,KAAKC,eAClBvS,KACD,4CACF,sBAE0B,cAe1B,OAf0B,mCAA3B,WAA4B2H,GAAa,2FAChB6B,EACrBqC,GAAW,CACTrP,UAAW+B,EACXlF,WACAsR,QAASgG,EAAOhJ,GAChBiD,UAAWwF,EACXvF,UAAWA,EAAY,EACvBC,IAAK+F,EAAQlJ,GACb1J,aAEF,KAAD,EACqC,cAXxB,OAWCqU,KAAKC,eAClBvS,KACD,4CACF,sBAcD,SAASA,KACPmR,EAAOsB,KAAK,QACd,CAdAxQ,qBAAU,WACJ2N,GACFyC,GAEJ,GAAG,CAACzC,IAEJ3N,qBAAU,WACJyN,GACF1P,IAEJ,GAAG,CAAC0P,IAMJzN,qBAAU,WACRkP,EAAOtR,GAAG,WAAW,YAvFrB,WAGwB,wBAqFtB6S,EACF,GACF,GAAG,IAEHzQ,qBAAU,WACJwN,IACFyB,GAAU,GACVpR,YAAW,WACT4L,KAAMiH,OAAO,4CAAD,OACkClD,EAAcmD,OAAS,IAErE5S,KACAkR,GAAU,EACZ,GAAG,KAEP,GAAG,CAACzB,IAGJ,OACE,gBAACxL,EAAA,EAAG,CACFhB,GAAI,CACFjB,gBAAiB,yBACjBiF,SAAU,MACVvB,GAAI,CAAE5B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/BL,GAAI,CAAElD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC/B,UAEF,eAAC1D,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BS,MAAO,QACPqC,UAAW,SACXF,GAAI,CAAE7C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC/B,SACH,oCAGD,eAACpD,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,eAChByD,SAAU,QACV,SAED8I,EAAMrW,KAAI,SAACkO,EAAMC,GAAW,IAAD,IAC1B,KAAIA,EAAQ,GACZ,OACE,gBAAC1D,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,aAChB2C,GAAI,CAAEnC,GAAI,EAAGC,GAAI,GACjB8O,GAAI,CAAE/O,GAAI,EAAGC,GAAI,GACjB+O,GAAI,CAAEhP,GAAI,EAAGC,GAAI,IACjB,UAGF,gBAACE,EAAA,EAAG,CACFhB,GAAI,CACFgD,GAAI,CAAEnC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAAQqD,GAAI,QAC5CnD,QAAS,OACT6O,cAAe,UACf,UAEiB,KAAlBrL,EAAKqI,SACJ,eAAC9L,EAAA,EAAG,CACFQ,UAAU,MACVC,IAAKgD,EAAKqI,SACV9M,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAIhD,eAACC,EAAA,EAAG,CACFhB,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAIlD,eAACI,EAAA,EAAM,CACLnB,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BqD,OAAQ,kBACRpB,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvChC,gBAAiB,sBACjBiF,SAAU,IACVJ,UAAW,SACXmM,SAAU,OACVtM,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAC3B2B,GAAI,CAAE5B,GAAI,EAAGC,GAAI,GACjBS,MAA+B,WAEjCpC,QAAS,WACP+P,IACAC,IACA7B,GAAa,GACbQ,EAAapJ,EACf,EACAsL,SAA4B,KAAlBvL,EAAKqI,SAA+B,SAE7CP,GACDyB,QAE+BiC,IAA7B1D,EAAc7H,EAAQ,IACO,IAA7B6H,EAAc7H,EAAQ,GAEpB6H,EAAc7H,EAAQ,GAAK8H,EAAc9H,EAAQ,GAC/C,SACA6H,EAAc7H,EAAQ,IAAM8H,EAAc9H,EAAQ,GAClD,OACA,QACqB,KAAvBD,EAAKwI,oBACkBgD,IAAvBxL,EAAKwI,cACiB,KAAtBxI,EAAKuI,aACH,QAAO,UACa,QADb,EACJvI,EAAKuI,oBAAY,aAAjB,EAAmBlO,MACpB,EACA,GACD,cAAuB,QAAvB,EAAM2F,EAAKuI,oBAAY,aAAjB,EAAmBlO,OAAO,IACnC,mBAGR,gBAACkC,EAAA,EAAG,CAAChB,GAAI,CAAEiB,QAAS,OAAQ6O,cAAe,UAAW,UAChC,KAAnBrL,EAAKsI,UACJ,eAAC/L,EAAA,EAAG,CACFQ,UAAU,MACVC,IAAKgD,EAAKsI,UACV/M,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAIhD,eAACC,EAAA,EAAG,CACFhB,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAIlD,eAACI,EAAA,EAAM,CACL6O,SACqB,KAAnBvL,EAAKsI,gBAA2CkD,IAAvBxL,EAAKwI,cAIhC9N,QAAS,WACP+P,IACAC,IACA3B,GAAc,GACdM,EAAapJ,GACbqJ,EAActJ,EAAKyI,UACrB,EACAlN,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BqD,OAAQ,kBACRpB,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvChC,gBAAiB,sBACjBiF,SAAU,IACVJ,UAAW,SACXmM,SAAU,OACVtM,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAC3BoP,GAAI,CAAErP,GAAI,EAAGC,GAAI,GACjB,+DACE,CAAES,MAAO,YACX,SAEDiL,GACDwB,QAE+BiC,IAA7BzD,EAAc9H,EAAQ,IACO,IAA7B8H,EAAc9H,EAAQ,GAEpB6H,EAAc7H,EAAQ,GAAK8H,EAAc9H,EAAQ,GAC/C,QACA6H,EAAc7H,EAAQ,IAAM8H,EAAc9H,EAAQ,GAClD,OACA,SACqB,KAAvBD,EAAKwI,oBACkBgD,IAAvBxL,EAAKwI,cACL,QACA,qBAxIHvI,EA6IX,MAEF,eAAChE,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BS,MAAO,QACPqC,UAAW,SACXF,GAAI,CAAE7C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC/B,SACH,wCAGD,eAACpD,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,eAChByD,SAAU,QACV,SAED8I,EAAMrW,KAAI,SAACkO,EAAMC,GAAW,IAAD,IAC1B,KAAIA,EAAQ,GACZ,OACE,gBAAC1D,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,aAChB2C,GAAI,CAAEnC,GAAI,EAAGC,GAAI,GACjB+O,GAAI,CAAEhP,GAAI,EAAGC,GAAI,IACjB,UAGF,gBAACE,EAAA,EAAG,CACFhB,GAAI,CACFmQ,YAAa,CAAEtP,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAAQqD,GAAI,QACrDyL,GAAI,GACJ,UAEF,eAAC7O,EAAA,EAAG,CACFhB,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAGhD,eAACI,EAAA,EAAM,CACLnB,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BqD,OAAQ,kBACRpB,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvChC,gBAAiB,sBACjBiF,SAAU,IACVJ,UAAW,SACXmM,SAAU,OACVtM,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAC3B2B,GAAI,CAAE5B,GAAI,EAAGC,GAAI,GACjBS,MAA+B,WAEjCpC,QAAS,WACP+P,IACAC,IACA7B,GAAa,GACbQ,EAAapJ,EACf,EACAsL,SAA4B,KAAlBvL,EAAKqI,SAA+B,SAEtB,KAAvBrI,EAAKwI,oBAA+CgD,IAAvBxL,EAAKwI,cACT,KAAtBxI,EAAKuI,aACH,QAAO,UACa,QADb,EACJvI,EAAKuI,oBAAY,aAAjB,EAAmBlO,MACpB,EACA,GACD,cAAuB,QAAvB,EAAM2F,EAAKuI,oBAAY,aAAjB,EAAmBlO,OAAO,IACnC,mBAGR,gBAACkC,EAAA,EAAG,WACF,eAACA,EAAA,EAAG,CACFhB,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,SACxCoD,OAAQ,oBACRD,aAAc,CAAErD,GAAI,OAAQC,GAAI,OAAQC,GAAI,WAGhD,eAACI,EAAA,EAAM,CACLnB,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BqD,OAAQ,kBACRpB,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvChC,gBAAiB,sBACjBiF,SAAU,IACVJ,UAAW,SACXmM,SAAU,OACVtM,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAC3B2B,GAAI,CAAE5B,GAAI,EAAGC,GAAI,GACjBS,MAA+B,WAEjCpC,QAAS,WACP+P,IACAC,IACA3B,GAAc,GACdM,EAAapJ,GACbqJ,EAActJ,EAAKyI,UACrB,EACA8C,SACoB,KAAlBvL,EAAKqI,eAA0CmD,IAAvBxL,EAAKwI,cAG9B,SAEuB,KAAvBxI,EAAKwI,oBAA+CgD,IAAvBxL,EAAKwI,cAC/B,QACA,qBApFHvI,EAyFX,MAEF,eAAC0L,GAAA,EAAK,CACJ9N,KAAM+K,EACN7K,QAAS,WACP8K,GAAa,EACf,EACA,kBAAgB,oBAChB,mBAAiB,0BAAyB,SAE1C,eAACtM,EAAA,EAAG,CAAChB,GAAId,GAAM,SACN,OAANwO,QAAM,IAANA,OAAM,EAANA,EAAQnX,KAAI,SAACwL,EAAY2C,GACxB,OACE,gBAAC1D,EAAA,EAAG,CACFhB,GAAI,CAAEqQ,EAAG,EAAGpP,QAAS,OAAQ6O,cAAe,UAAW,UAGvD,eAAC9O,EAAA,EAAG,CAAChB,GAAI,CAAE6P,GAAI,EAAG5O,QAAS,OAAQ6O,cAAe,UAAW,SAC1DlC,EACC,eAAC5M,EAAA,EAAG,CACFQ,UAAU,MACVC,IAAY,OAAPmM,QAAO,IAAPA,OAAO,EAAPA,EAAUlJ,GACf/C,IAAI,aACJ3B,GAAI,CACF+C,MAAO,CACL/C,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,SAENC,OAAQ,OACR/H,aAAc,UAIlB,eAACoM,GAAA,EAAQ,CACPtQ,GAAI,CACF+C,MAAO,CACL/C,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,SAENC,OAAQ,CACNjM,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,cAMbW,EACC,eAAC2D,GAAA,EAAQ,CAACrE,OAAO,SAEjB,eAAC9K,EAAA,EAAM,CACLG,QAAQ,YACRC,MAAM,UACNpC,QACU,OAARuN,QAAQ,IAARA,KAAWhI,GACP,YAhbvB,SAE0B,GAAD,yBA+aA6L,CAAY7L,GACZ4I,GAAa,EACf,EACA,kBAAM5C,GAAQ3I,EAAG,EACtB,SAEQ,OAAR2K,QAAQ,IAARA,KAAWhI,GAAS,QAAU,cArD9BA,EA0DX,QAGJ,eAAC0L,GAAA,EAAK,CACJ9N,KAAMiL,EACN/K,QAAS,WACPgL,GAAc,GACdO,EAAc,EAChB,EACA,kBAAgB,oBAChB,mBAAiB,0BAAyB,SAE1C,eAAC/M,EAAA,EAAG,CAAChB,GAAId,GAAM,SACN,OAANwO,QAAM,IAANA,OAAM,EAANA,EAAQnX,KAAI,SAACwL,EAAY2C,GACxB,OACE,gBAAC1D,EAAA,EAAG,CACFhB,GAAI,CAAEqQ,EAAG,EAAGpP,QAAS,OAAQ6O,cAAe,UAAW,UAGvD,eAAC9O,EAAA,EAAG,CAAChB,GAAI,CAAE6P,GAAI,EAAG5O,QAAS,OAAQ6O,cAAe,UAAW,SAC1DlC,EACC,eAAC5M,EAAA,EAAG,CACFQ,UAAU,MACVC,IAAY,OAAPmM,QAAO,IAAPA,OAAO,EAAPA,EAAUlJ,GACf/C,IAAI,aACJ3B,GAAI,CACF+C,MAAO,CACL/C,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,SAENC,OAAQ,OACR/H,aAAc,UAIlB,eAACoM,GAAA,EAAQ,CACPtQ,GAAI,CACF+C,MAAO,CACL/C,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,SAENC,OAAQ,CACNjM,GAAI,OACJc,GAAI,QACJC,GAAI,QACJiL,GAAI,cAMbW,EACC,eAAC2D,GAAA,EAAQ,CAACrE,OAAO,SAEjB,eAAC9K,EAAA,EAAM,CACLG,QAAQ,YACRC,MAAM,UACNpC,QACU,OAARuN,QAAQ,IAARA,KAAWhI,GACP,YAzevB,SAE2B,GAAD,yBAweD8L,CAAa9L,GACb8I,GAAc,EAChB,EACA,kBAAM9C,GAAQ3I,EAAG,EACtB,SAEQ,OAAR2K,QAAQ,IAARA,KAAWhI,GAAS,QAAU,cArD9BA,EA0DX,UAKV,E,qBCrjBe+L,GAtKQ,WACrB,IAAMlH,EAAoBlG,aACxB,SAACC,GAAK,OAAKA,EAAMC,IAAIgG,UAAU,IAGjC,OACE,gBAACvI,EAAA,EAAG,CACFhB,GAAI,CACFjB,gBAAiB,yBACjBiF,SAAU,MACVvB,GAAI,CAAE5B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/BL,GAAI,CAAElD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC/B,UAEF,eAAC1D,EAAA,EAAU,CACTC,WAAW,YACXX,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5BS,MAAO,QACPqC,UAAW,SACXF,GAAI,CAAE7C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/ByL,GAAI,CAAEhP,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC/B,SACH,8BAGD,eAACpD,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,eAChByD,SAAU,QACV,SAES,OAAVyF,QAAU,IAAVA,OAAU,EAAVA,EAAYhT,KAAI,SAACkO,EAAMC,GACtB,OACE,gBAAC1D,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgB,aAChB2C,GAAI,CAAEnC,GAAI,EAAGC,GAAI,GACjB+O,GAAI,CAAEhP,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGiL,GAAI,IAC/B,UAGF,gBAAChL,EAAA,EAAG,CACFhB,GAAI,CACFmQ,YAAa,CAAEtP,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAAQqD,GAAI,SACrD,UAEF,eAAC1D,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B+O,GAAI,EACJjM,UAAW,UACX,SAEDa,EAAKG,gBAEPH,EAAKiM,QACJ,eAAC1P,EAAA,EAAG,CACFQ,UAAU,MACVxB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,UAC7CU,IAAKgD,EAAKiM,QACV/O,IAAI,iBAGN,eAAC2O,GAAA,EAAQ,CACPtQ,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,YAI9C,gBAACC,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgBoE,EAAKG,cAAgBH,EAAKI,cAAgB,gBAAkB,SAC5E3D,WAAY,UACZ,UAEF,eAACR,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B2B,GAAI,EACJmB,UAAW,UACX,mBAEEa,EAAKkM,SAAS7R,MAAM,EAAG,GAAE,cAAM2F,EAAKkM,SAAS7R,OAC9C,MAGJ2F,EAAKG,cAAgBH,EAAKI,cACzB,eAAC,KAAW,CACV7E,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,WAG9B,WAGR,gBAACE,EAAA,EAAG,WACF,eAACN,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B+O,GAAI,EACJjM,UAAW,UACX,SAEDa,EAAKI,gBAEPJ,EAAKmM,QACJ,eAAC5P,EAAA,EAAG,CACFQ,UAAU,MACVxB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,UAC7CU,IAAKgD,EAAKmM,QACVjP,IAAI,iBAGN,eAAC2O,GAAA,EAAQ,CACPtQ,GAAI,CACF+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCkL,OAAQ,CAAEpL,GAAI,QAASC,GAAI,QAASC,GAAI,YAI9C,gBAACC,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACTZ,eAAgBoE,EAAKG,cAAgBH,EAAKI,cAAgB,gBAAkB,SAC5E3D,WAAY,SACZ2P,GAAI,GACJ,UAEF,eAACnQ,EAAA,EAAU,CACTV,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B8C,UAAW,UACX,mBAEEa,EAAKqM,SAAShS,MAAM,EAAG,GAAE,cAAM2F,EAAKqM,SAAShS,OAC9C,MAGJ2F,EAAKG,cAAgBH,EAAKI,cACzB,eAAC,KAAW,CACV7E,GAAI,CACFuB,MAAO,QACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,WAG9B,aAjHH4D,EAsHX,QAIR,ECvHeqM,GAzCF,WACX,OACE,gBAAC/P,EAAA,EAAG,CAAChB,GAAI,CAAEjB,gBAAiB,uBAAwB,UAClD,eAAC,GAAM,IACP,eAAC2B,EAAA,EAAU,CACTY,QAAQ,KACRsC,UAAU,SACVjD,WAAW,YACXY,MAAM,QACNvB,GAAI,CACFY,SAAU,CAAEC,GAAI,OAAQE,GAAI,OAAQqD,GAAI,QACxC3B,GAAI,OACJoN,GAAI,QACJ,SACH,0BAGD,eAAC,GAAO,IACR,gBAAC7O,EAAA,EAAG,CACFhB,GAAI,CACFiB,QAAS,OACT6O,cAAe,CAAEjP,GAAI,SAAUE,GAAI,OACnCV,eAAgB,eAChB6P,GAAI,CAAErP,GAAI,EAAGC,GAAI,IACjB,UAEF,eAACE,EAAA,EAAG,CAAChB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,OAAQE,GAAI,QAAU,SAC5C,eAAC,GAAI,MAEP,gBAACC,EAAA,EAAG,CAAChB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,OAAQE,GAAI,QAAU,UAC5C,eAAC,GAAa,IACd,eAAC,GAAc,OAEjB,eAACC,EAAA,EAAG,CAAChB,GAAI,CAAE+C,MAAO,CAAElC,GAAI,OAAQE,GAAI,QAAU,SAC5C,eAAC,GAAM,WAKjB,E,UCvBaiQ,GAAevJ,aAC1B,wBAAuB,iDAEvB,mHAAiE,GAAxDlO,EAAS,EAATA,UAAWnD,EAAQ,EAARA,SAAU6a,EAAM,EAANA,OAA2B1K,EAAQ,EAARA,SAClDnQ,EAAS,CAAD,eACiD,OAA5DmQ,EAASL,GAAQ,CAAE3G,KAAM9F,MAAmC,0BAIM,OAD9DqO,EAAYxO,GAAaC,GACzBwO,EAAY,IAAIC,UAAOlR,UAAU0G,aAAa7D,OAAOC,UAAU,EAAD,OAC9DmO,EAAUE,KAAK,sBAAuB,IAAI,KAAD,EAQb,OAP5BC,EAASH,EAAUpK,YACnBwK,EAAe,IAAIH,UAAOI,SAC9BN,EAAU3O,aACVkP,KACAH,GAGEgJ,EAActY,SAASqY,GAAQ,EAAD,kBAEhB9I,EAAagJ,MAAMD,GAAa,KAAD,GAM7C,OANF3I,EAAO,OACM,YACU,WAEvBhC,EACEM,GAAiB,CAAEI,QAASsB,EAAQI,KAAMpJ,KAJ/B,YAIqC/I,KAH3B,cAIrB,UACI+R,EAAQC,OAAO,KAAD,GAGoC,OAFxDjC,EAASJ,GAAQ,CAAE5G,KAAM9F,MACzB8M,EAASN,GAAK,CAAE1G,KAAM9F,MACtB8M,EAASN,GAAK,CAAE1G,KAAM9F,MAAkC,+EAGjD6M,GAAkB,EAAD,GAAMC,IAAS,QAItC,OAJsC,UAEnCgC,GACFhC,EAASO,GAAgByB,EAAQI,OAClC,8EAEJ,qDAtCsB,IA+CZyI,GAAiB3J,aAC5B,4BAA2B,iDAE3B,mHAAmE,GAA1DlO,EAAS,EAATA,UAAWnD,EAAQ,EAARA,SAAU6a,EAAM,EAANA,OAA6B1K,EAAQ,EAARA,SACpDnQ,EAAS,CAAD,eACiD,OAA5DmQ,EAASL,GAAQ,CAAE3G,KAAM9F,MAAmC,0BAIM,OAD9DqO,EAAYxO,GAAaC,GACzBwO,EAAY,IAAIC,UAAOlR,UAAU0G,aAAa7D,OAAOC,UAAU,EAAD,OAC9DmO,EAAUE,KAAK,sBAAuB,IAAI,KAAD,EASX,OAR9BC,EAASH,EAAUpK,YACnBwK,EAAe,IAAIH,UAAOI,SAC9BN,EAAU3O,aACVkP,KACAH,GAIEmJ,EAAgBzY,SAASqY,GAAQ,EAAD,kBAElB9I,EAAamJ,QAAQD,GAAe,KAAD,GAOjD,OAPF9I,EAAO,OAEM,YACU,WAEvBhC,EACEM,GAAiB,CAAEI,QAASsB,EAAQI,KAAMpJ,KAJ/B,YAIqC/I,KAH3B,cAIrB,UACI+R,EAAQC,OAAO,KAAD,GAGoC,OAFxDjC,EAASJ,GAAQ,CAAE5G,KAAM9F,MACzB8M,EAASN,GAAK,CAAE1G,KAAM9F,MACtB8M,EAASN,GAAK,CAAE1G,KAAM9F,MAAkC,+EAGjD6M,GAAkB,EAAD,GAAMC,IAAS,QAItC,OAJsC,UAEnCgC,GACFhC,EAASO,GAAgByB,EAAQI,OAClC,8EAEJ,qDAxC0B,IAiDvB4I,GAAa5L,aAAY,CAC7BtO,KAAM,QACNuO,aARmB,CACnBiE,SAAS,GAQThE,SAAU,CACRiE,gBAAe,SAACxG,EAAOyC,GACrBoB,GAAO7D,EAAOyC,EAAOC,QAEvB,GAEF+D,cAAe,SAACC,GACdA,EACGC,QAAQ+G,GAAa9G,SAAS,SAAC5G,EAAOyC,GACrCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQ+G,GAAa7G,WAAW,SAAC7G,EAAOyC,GACvCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQ+G,GAAa5G,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MACxCxC,EAAMuG,SAAU,CAClB,IACCI,QAAQmH,GAAelH,SAAS,SAAC5G,EAAOyC,GACvCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQmH,GAAejH,WAAW,SAAC7G,EAAOyC,GACzCzC,EAAMuG,SAAU,CAClB,IACCI,QAAQmH,GAAehH,UAAU,SAAC9G,EAAM,GAAQ,EAALwC,MAC1CxC,EAAMuG,SAAU,CAClB,GACJ,IAKa0H,MAAkB,QCyBlBC,IDvBoBD,GAAWlL,QAA/ByD,gBAEYQ,cANV,SAAChH,GAAgB,OAAKA,EAAMmO,KAAM,IAMC,SAACA,GAAK,OAAKA,CAAK,ICzJlD,WACjB,MAAoCtW,mBAAS,IAAG,mBAAzCuW,EAAW,KAAEC,EAAY,KAChC,EAAuCxW,mBAAS,IAAG,mBAA5CyW,EAAa,KAAEC,EAAa,KAC7BtL,EAAWkH,cACjB,EAAqE/S,KAA7D4C,EAAO,EAAPA,QAASlH,EAAQ,EAARA,SAAUmG,EAAiB,EAAjBA,kBAAmBjB,EAAO,EAAPA,QAC9C,GADgE,EAATF,UACbD,oBAAS,IAAM,mBAAnC2W,GAAF,KAAkB,MAYhB,aAMrB,OANqB,kCAAtB,wGACOvL,EAASyK,GAAa,CAC3BzX,UAAW+B,EACXlF,WACA6a,OAAQS,KACL,KAAD,uCACH,sBAEuB,aAMvB,OANuB,kCAAxB,wGACOnL,EAAS6K,GAAe,CAC7B7X,UAAW+B,EACXlF,WACA6a,OAAQW,KACL,KAAD,uCACH,sBAED,OA1BA5S,qBAAU,WACLzC,IACHe,IAAUI,MAAK,WACdoU,GAAiB,EAClB,IAEAA,GAAiB,EAEnB,GAAG,IAmBF,gBAAC9Q,EAAA,EAAG,CACHhB,GAAI,CACH+C,MAAO,CAAElC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvCgR,QAAS,QACR,UAEF,gBAAC/Q,EAAA,EAAG,CAAChB,GAAI,CACRjB,gBAAiB,UACjBgF,GAAI,CAAElD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC/BT,GAAI,GACH,UACD,eAACjD,EAAA,EAAU,CACVC,WAAW,YACXX,GACC,CACAuB,MAAO,UAAWX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQqD,GAAI,MACtEV,GAAI,EAAGC,GAAI,CAAE9C,GAAI,EAAGC,GAAI,GACxB8C,UAAW,SACXC,GAAI,OACJgM,GAAI,GACH,SACF,eAGD,eAACnP,EAAA,EAAU,CAACV,GAAI,CAAEY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAAUS,MAAO,SAAU,SAAC,gEAG1E,eAACb,EAAA,EAAU,CAACC,WAAW,YAAYX,GAAI,CACtCuB,MAAO,UACPX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAC5B4C,GAAI,CAAE7C,GAAI,GACVmR,GAAI,CAAEnR,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC9B,SAAC,iCAGH,eAAC1D,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,QAASX,SAAU,CAAEC,GAAI,OAAQC,GAAI,SAAW,SAAC,mHAM3E,gBAACE,EAAA,EAAG,CAAChB,GAAI,CACRiB,QAAS,OAAQZ,eAAgB,gBAAiByD,SAAU,OAC5D5C,WAAY,aACZwC,GAAI,CAAE7C,GAAI,EAAGC,GAAI,GAAK6C,GAAI,CAAE9C,GAAI,EAAGC,GAAI,GAAK/B,gBAAiB,WAC5D,UAaD,gBAACiC,EAAA,EAAG,WACH,eAACG,EAAA,EAAM,CACNnB,GAAI,CACHyD,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAASkD,SAAU,CAAEnD,GAAI,MAAOC,GAAI,QAC/DF,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAAUS,MAAO,QAC7CxC,gBAAiB,UAAW4B,WAAY,YACxC,WAAY,CAAE5B,gBAAiB,UAAWkT,QAAS,KAEpD9S,QArFE,WAEe,gCAmFA,SACjB,eAGD,wBACA,eAAC+S,GAAA,EAAS,CACTC,UAAQ,EACRC,MAAM,WACN9Q,QAAQ,SACR+Q,KAAK,QACLrS,GAAI,CAAEuB,MAAO,QAASwB,MAAO,QAASN,GAAI,GAC1CtE,MAAOuT,EACPY,SAAU,SAACC,GACVZ,EAAcY,EAAEnR,OAAOjD,MACxB,IAED,eAACuC,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,UAAWX,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAAU2B,GAAI,GAAI,SAAC,uBAIpF,gBAACzB,EAAA,EAAG,WACJ,eAACG,EAAA,EAAM,CAACnB,GAAI,CACXyD,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OAASkD,SAAU,CAAEnD,GAAI,MAAOC,GAAI,QAC/DF,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAAUS,MAAO,QAC7CxC,gBAAiB,QAAS4B,WAAY,YACtC,WAAY,CAAE5B,gBAAiB,QAASkT,QAAS,KAElD9S,QAxGF,WAEuB,gCAsGF,SAClB,iBAGD,wBACA,eAAC+S,GAAA,EAAS,CACTC,UAAQ,EACRC,MAAM,WACN9Q,QAAQ,SACR+Q,KAAK,QACLrS,GAAI,CAAEuB,MAAO,QAASwB,MAAO,QAASN,GAAI,GAC1CtE,MAAOyT,EACPU,SAAU,SAACC,GACVV,EAAeU,EAAEnR,OAAOjD,MACzB,UAIF,gBAAC6C,EAAA,EAAG,CAAChB,GAAI,CAAEoM,EAAG,EAAGrN,gBAAiB,WAAY,UAC7C,eAAC2B,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,QAASX,SAAU,CAAEC,GAAI,OAAQC,GAAI,SAAW,SAAC,sCAG1E,eAACJ,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,QAASX,SAAU,CAAEC,GAAI,OAAQC,GAAI,SAAW,SAAC,yCAI3E,gBAACE,EAAA,EAAG,CAAChB,GAAI,CAAE0D,GAAI,CAAE7C,GAAI,EAAGC,GAAI,GAAK/B,gBAAiB,UAAWiF,SAAU,OAAQ,UAC9E,eAACtD,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,UAAWX,SAAU,CAAEC,GAAI,OAAQC,GAAI,SAAW,SAAC,qDAG5E,eAACK,EAAA,EAAM,CAACnB,GAAI,CACXY,SAAU,CAAEC,GAAI,OAAQC,GAAI,QAAUS,MAAO,QAC7CxC,gBAAiB,QAAS0E,SAAU,CAAE5C,GAAI,MAAOC,GAAI,OACrD6C,GAAI,CAAE9C,GAAI,EAAGC,GAAI,GAAK8O,GAAI,CAAE/O,GAAI,EAAGC,GAAI,GAAKoP,GAAI,EAChD,WAAY,CAAEnR,gBAAiB,QAASkT,QAAS,KAChD,SAAC,UAGH,eAACvR,EAAA,EAAU,CAACV,GAAI,CAAEuB,MAAO,UAAWX,SAAU,CAAEC,GAAI,OAAQC,GAAI,SAAW,SAAC,mCAOhF,GC/Ge0R,GAnEG,WAChB,OACE,gBAACxR,EAAA,EAAG,CACLhB,GAAI,CACH+C,MAAO,CAAClC,GAAI,QAASC,GAAI,QAASC,GAAI,SACtC0B,GAAI,CAAC5B,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAC9B2N,QAAS,QACR,UAEF,gBAAC/Q,EAAA,EAAG,CAAChB,GAAI,CACRjB,gBAAiB,UACjBgF,GAAI,CAAClD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,GAC9BT,GAAI,GACH,UACD,eAACjD,EAAA,EAAU,CACVC,WAAW,YACXX,GACE,CACAuB,MAAO,QAASX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQqD,GAAI,MACpEV,GAAI,EAAGC,GAAI,CAAC9C,GAAI,EAAGC,GAAI,GACvB8C,UAAW,SACXC,GAAI,OACJgM,GAAI,GACH,SACH,cAGD,eAACnP,EAAA,EAAU,CAACV,GAAI,CAAEY,SAAU,CAACC,GAAI,OAAQC,GAAI,QAASS,MAAO,QAASmC,GAAI,GAAG,SAAC,2EAG9E,eAAChD,EAAA,EAAU,CAACV,GAAI,CAAEY,SAAU,CAACC,GAAI,OAAQC,GAAI,QAASS,MAAO,QAASsP,GAAI,GAAG,SAAC,uEAG9E,eAACnQ,EAAA,EAAU,CAACV,GAAI,CAAEY,SAAU,CAACC,GAAI,OAAQC,GAAI,QAASS,MAAO,QAASsP,GAAI,GAAG,SAAC,wEAG9E,eAACnQ,EAAA,EAAU,CAACV,GAAI,CAAEY,SAAU,CAACC,GAAI,OAAQC,GAAI,QAASS,MAAO,UAAWsP,GAAI,GAAG,SAAC,2DAGhF,eAACnQ,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,OAAQ+P,GAAI,IAAI,SAAC,kCAG/E,eAACnQ,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,OAAQ+P,GAAI,IAAI,SAAC,yEAG/E,eAACnQ,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,OAAQ+P,GAAI,IAAI,SAAC,kCAIhF,gBAAC7P,EAAA,EAAG,CAAChB,GAAI,CAAC0D,GAAI,CAAC7C,GAAI,EAAGC,GAAI,GAAI/B,gBAAiB,UAAW4E,GAAI,GAAG,UAChE,eAACjD,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,SAAS,SAAC,oCAGxE,eAACJ,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,QAAS2R,GAAI,GAAG,SAAC,kCAG/E,eAAC/R,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,QAAS2R,GAAI,GAAG,SAAC,0CAG/E,eAAC/R,EAAA,EAAU,CAACV,GAAI,CAACuB,MAAO,UAAWX,SAAU,CAACC,GAAI,OAAQC,GAAI,QAAS2R,GAAI,GAAG,SAAC,4DAMnF,ECxCeC,GAvBD,WACZ,OACE,gBAAC1R,EAAA,EAAG,CAAChB,GAAI,CAACjB,gBAAiB,UAAW2E,GAAI,CAAC7C,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGqD,GAAI,IAAK,UACvE,eAAC1D,EAAA,EAAU,CACbC,WAAW,YACXX,GACE,CACAuB,MAAO,UAAWX,SAAU,CAAEC,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQqD,GAAI,MACtEV,GAAI,EAAGC,GAAI,CAAC9C,GAAI,EAAGC,GAAI,GAAI/B,gBAAiB,UAC5CgE,MAAO,CAAClC,GAAI,QAASC,GAAI,QAASC,GAAI,QAASqD,GAAI,UACnDR,UAAW,SACXC,GAAI,OACEgM,GAAI,GACT,SACH,kCAGE,eAAC,GAAS,IACV,eAAC,GAAS,MAGhB,E,WpBKC,SAVWzQ,OAAgB,mBAAhBA,IAAgB,uBAAhBA,IAAgB,2BAAhBA,IAAgB,iCAAhBA,IAAgB,6BAAhBA,IAAgB,eAAhBA,IAAgB,uBAAhBA,IAAgB,uBAAhBA,IAAgB,eAU3B,CAVWA,QAAgB,KAYrB,IAAMuT,GAAoBC,aAC/B,iCAEWC,GAAeD,aAAsC,4BACrDE,GAAWF,aACtB,wBAEWG,GAAcH,aAA8B,2BqBtB1CI,gBANwB,CACrCC,YAAa,CAAC,EACdC,UAAW,GACXC,UAAW,OAG8B,SAACnJ,GAAO,OACjDA,EACGC,QAAQ0I,IAAmB,SAACrP,EAAOyC,GAClC,MAAiCA,EAAOC,QAAhC1N,EAAO,EAAPA,QAAS2a,EAAW,EAAXA,YACyB,kBAA/B3P,EAAM2P,YAAY3a,GAC3BgL,EAAM2P,YAAY3a,GAAW2a,EAE7B3P,EAAM2P,YAAY3a,GAAWmT,KAAK2H,IAAIH,EAAa3P,EAAM2P,YAAY3a,GAEzE,IACC2R,QAAQ4I,IAAc,SAACvP,EAAOyC,GAC7BzC,EAAM6P,UAAYpN,EAAOC,OAC3B,IACCiE,QAAQ6I,IAAU,SAACxP,EAAM,GAA2D,IAAD,IAAvD0C,QAAWqN,EAAO,EAAPA,QAASzQ,EAAG,EAAHA,IAAI,EAAD,EAAE0Q,qBAAa,MAAG,KAAK,EACzEhQ,EAAM4P,WAAatQ,EAAMU,EAAM4P,UAAUK,QAAO,SAACC,GAAK,OAAKA,EAAM5Q,MAAQA,CAAG,IAAIU,EAAM4P,WAAWO,OAAO,CACtG,CACE7Q,IAAKA,GAAO8Q,eACZC,MAAM,EACNN,UACAC,kBAGN,IACCrJ,QAAQ8I,IAAa,SAACzP,EAAM,GAA2B,IAAbV,EAAG,EAAdoD,QAAWpD,IACzCU,EAAM4P,UAAU3L,SAAQ,SAAC6E,GACnBA,EAAExJ,MAAQA,IACZwJ,EAAEuH,MAAO,EAEb,GACF,GAAE,IC1COC,GAAgBhB,aAAmB,wBCWnCiB,GAAwBjB,aAA2C,8BACnEkB,GAAqBlB,aAAwC,2BAC7DmB,GAAuBnB,aAA0C,6BACjEoB,GAA8BpB,aACzC,oCAEWqB,GAAqBrB,aAAuC,2BAC5DsB,GAAqBtB,aAAmD,2BACxEuB,GAAwBvB,aAAmD,8BAC3EwB,GAAoBxB,aAAiD,0BACrEyB,GAAuBzB,aAClC,6BAEW0B,GAAmB1B,aAAmB,wBCV7C2B,GAAmB,WAAH,OAAS,IAAIjG,MAAOkG,SAAU,EAkCpD,SAASC,GAAQC,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAa,YAAIC,EAC7B,CAEO,IAAM/O,GAA0B,CACrCgP,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,sBhC5BsC,GgC6BtCC,ahC3BuC,KgC4BvCC,OAAQ,CAAC,EACTC,MAAO,CAAC,EACRC,UAAWZ,KACXa,mBAAmB,GAGNpC,gBAAcpN,IAAc,SAACoE,GAAO,OACjDA,EACGC,QAAQ2J,IAAe,SAACtQ,GAGoB,kBAAhCA,EAAMyR,wBACfzR,EAAMyR,sBhC1C0B,IgC+CA,kBAAvBzR,EAAM0R,eACf1R,EAAM0R,ahC9C2B,MgCiDnC1R,EAAM+R,2BAA6Bd,IACrC,IACCtK,QAAQ6J,IAAoB,SAACxQ,EAAOyC,GACnCzC,EAAMsR,aAAe7O,EAAOC,QAAQ4O,aACpCtR,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQ4J,IAAuB,SAACvQ,EAAOyC,GACtCzC,EAAMuR,gBAAkB9O,EAAOC,QAAQ6O,gBACvCvR,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQ8J,IAAsB,SAACzQ,EAAOyC,GACrCzC,EAAMwR,eAAiB/O,EAAOC,QAAQ8O,eACtCxR,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQ+J,IAA6B,SAAC1Q,EAAOyC,GAC5CzC,EAAMyR,sBAAwBhP,EAAOC,QAAQ+O,sBAC7CzR,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQgK,IAAoB,SAAC3Q,EAAOyC,GACnCzC,EAAM0R,aAAejP,EAAOC,QAAQgP,aACpC1R,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQiK,IAAoB,SAAC5Q,EAAM,GAAuC,IAAzBgS,EAAe,EAA1BtP,QAAWsP,gBAChDhS,EAAM2R,OAAOK,EAAgBhd,SAAWgL,EAAM2R,OAAOK,EAAgBhd,UAAY,CAAC,EAClFgL,EAAM2R,OAAOK,EAAgBhd,SAASgd,EAAgBta,SAAWsa,EACjEhS,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQkK,IAAuB,SAAC7Q,EAAM,GAAwC,IAAD,IAApC0C,QAAWhL,EAAO,EAAPA,QAAS1C,EAAO,EAAPA,QAC5DgL,EAAM2R,OAAO3c,GAAWgL,EAAM2R,OAAO3c,IAAY,CAAC,SAC3CgL,EAAM2R,OAAO3c,GAAS0C,GAC7BsI,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQmK,IAAmB,SAAC9Q,EAAM,GAAsC,IAAxBiS,EAAc,EAAzBvP,QAAWuP,eAC/C,GACEA,EAAeC,OAAOld,UAAYid,EAAeE,OAAOnd,SACxDid,EAAeC,OAAOxa,UAAYua,EAAeE,OAAOza,QACxD,CACA,IAAM1C,EAAUid,EAAeC,OAAOld,QACtCgL,EAAM4R,MAAM5c,GAAWgL,EAAM4R,MAAM5c,IAAY,CAAC,EAChDgL,EAAM4R,MAAM5c,GAASmc,GAAQc,EAAeC,OAAOxa,QAASua,EAAeE,OAAOza,UAAYua,CAChG,CACAjS,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQoK,IAAsB,SAAC/Q,EAAM,GAA6D,IAAD,IAAzD0C,QAAW1N,EAAO,EAAPA,QAASod,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cACtErS,EAAM4R,MAAM5c,YAEPgL,EAAM4R,MAAM5c,GAASmc,GAAQiB,EAAeC,WAC5CrS,EAAM4R,MAAM5c,GAASmc,GAAQkB,EAAeD,KAErDpS,EAAM6R,UAAYZ,IACpB,IACCtK,QAAQqK,IAAkB,SAAChR,GAC1BA,EAAM8R,mBAAqB9R,EAAM8R,iBACnC,GAAE,IC1HOQ,GAAiBhD,aAO3B,+BACUiD,GAAuBjD,aAAmC,qCAC1DkD,GAAsBlD,aAIhC,oCACUmD,GAAqBnD,aAI/B,mCCvBGoD,GAAM,WAAH,OAAS,IAAI1H,MAAOkG,SAAU,EAsBxBxB,gBAF+B,CAAC,GAEJ,SAAChJ,GAAO,OACjDA,EACGC,QAAQ2L,IAAgB,SAACK,EAAa,GAAqE,IAAD,QAAjEjQ,QAAW1N,EAAO,EAAPA,QAAS4d,EAAI,EAAJA,KAAMvN,EAAI,EAAJA,KAAMwN,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC3F,GAAyB,QAAzB,EAAIJ,EAAa3d,UAAQ,OAArB,EAAwBqQ,GAC1B,MAAMzS,MAAM,0CAEd,IAAMogB,EAA2B,QAAxB,EAAGL,EAAa3d,UAAQ,QAAI,CAAC,EACtCge,EAAI3N,GAAQ,CAAEA,OAAMwN,WAAUC,UAASC,QAAOH,OAAMK,UAAWP,MAC/DC,EAAa3d,GAAWge,CAC1B,IACCrM,QAAQ4L,IAAsB,SAACI,EAAa,GAA+B,IAAjB3d,EAAO,EAAlB0N,QAAW1N,QACpD2d,EAAa3d,KAClB2d,EAAa3d,GAAW,CAAC,EAC3B,IACC2R,QAAQ8L,IAAoB,SAACE,EAAa,GAAkD,IAAD,MAA9CjQ,QAAW1N,EAAO,EAAPA,QAASqQ,EAAI,EAAJA,KAAMsK,EAAW,EAAXA,YAChEuD,EAA0B,QAAxB,EAAGP,EAAa3d,UAAQ,aAArB,EAAwBqQ,GAC9B6N,IAGAA,EAAGC,uBAGND,EAAGC,uBAAyBhL,KAAK2H,IAAIH,EAAauD,EAAGC,wBAFrDD,EAAGC,uBAAyBxD,EAIhC,IACChJ,QAAQ6L,IAAqB,SAACG,EAAa,GAA8C,IAAD,MAA1CjQ,QAAW2C,EAAI,EAAJA,KAAMrQ,EAAO,EAAPA,QAASoe,EAAO,EAAPA,QACjEF,EAA0B,QAAxB,EAAGP,EAAa3d,UAAQ,aAArB,EAAwBqQ,GAC9B6N,IAGLA,EAAGE,QAAUA,EACbF,EAAGG,cAAgBX,KACrB,GAAE,ICxDAY,GAAgB,sBAChBC,GAAkB,gBACjB,SAASC,GAAUC,GACxB,IAAKH,GAAcI,KAAKD,EAAK/b,SAC3B,MAAM,IAAI9E,MAAM,oBAAD,OAAqB6gB,EAAK/b,UAE3C,IAAK6b,GAAgBG,KAAKD,EAAKE,UAC7B,MAAM,IAAI/gB,MAAM,gBAAD,OAAiB6gB,EAAKE,WAEvC,MAAM,GAAN,OAAUF,EAAK/b,QAAO,YAAI+b,EAAKE,SACjC,CAkBO,IAAMC,GAAwBtE,aACnC,mCAEWuE,GAA2BvE,aACtC,sCAEWwE,GAA2BxE,aACtC,sCAEWyE,GAAgCzE,aAI1C,2CACU0E,GAAyB1E,aAMnC,oCClBYI,gBAJsB,CACnCuE,YAAa,CAAC,IAG2B,SAACvN,GAAO,OACjDA,EACGC,QAAQiN,IAAuB,SAAC5T,EAAM,GAA4E,IAAD,MAAxE0C,QAAWwR,EAAK,EAALA,MAAOlf,EAAO,EAAPA,QAAQ,EAAD,EAAE6D,QAAoC,QAA7B,MAA2B,CAAC,EAAC,GAAzBsb,sBAAc,MAAG,EAAC,EAC1FC,EAA6CpU,EAAMqU,cACrDrU,EAAMqU,cACLrU,EAAMqU,cAAgB,CAAC,EAC5BD,EAAUpf,GAA6B,QAArB,EAAGof,EAAUpf,UAAQ,QAAI,CAAC,EAC5Ckf,EAAMjQ,SAAQ,SAACwP,GAAU,IAAD,IAChBa,EAAUd,GAAUC,GAC1BW,EAAUpf,GAASsf,GAAsC,QAA9B,EAAGF,EAAUpf,GAASsf,UAAQ,QAAI,CAAC,EAC9DF,EAAUpf,GAASsf,GAASH,IAA8D,QAA5C,EAACC,EAAUpf,GAASsf,GAASH,UAAe,QAAI,GAAK,CACrG,GACF,IACCxN,QACCkN,IACA,SAAC7T,EAAM,GAA4E,IAAD,IAAxE0C,QAAW1N,EAAO,EAAPA,QAASkf,EAAK,EAALA,MAAM,EAAD,EAAErb,QAAoC,QAA7B,MAA2B,CAAC,EAAC,GAAzBsb,sBAAc,MAAG,EAAC,EAC1DC,EAA6CpU,EAAMqU,cACrDrU,EAAMqU,cACLrU,EAAMqU,cAAgB,CAAC,EAEvBD,EAAUpf,IACfkf,EAAMjQ,SAAQ,SAACwP,GACb,IAAMa,EAAUd,GAAUC,GACrBW,EAAUpf,GAASsf,IACnBF,EAAUpf,GAASsf,GAASH,KAEmB,IAAhDC,EAAUpf,GAASsf,GAASH,UACvBC,EAAUpf,GAASsf,GAASH,GAEnCC,EAAUpf,GAASsf,GAASH,KAEhC,GACF,IAEDxN,QAAQmN,IAA0B,SAAC9T,EAAM,GAA2D,IAAD,MAAvD0C,QAAW1N,EAAO,EAAPA,QAASuf,EAAmB,EAAnBA,oBAAqBL,EAAK,EAALA,MACpFlU,EAAMiU,YAAYjf,GAAqC,QAA7B,EAAGgL,EAAMiU,YAAYjf,UAAQ,QAAI,CAAC,EAC5Dkf,EAAMjQ,SAAQ,SAACwP,GACb,IAAMa,EAAUd,GAAUC,GACpBe,EAAUxU,EAAMiU,YAAYjf,GAASsf,GAC3C,GAAKE,EAIE,CAAC,IAAD,EACL,IAAgC,QAA5B,EAACA,EAAQD,2BAAmB,QAAI,IAAMA,EAAqB,OAC/DvU,EAAMiU,YAAYjf,GAASsf,GAASC,oBAAsBA,CAC5D,MANEvU,EAAMiU,YAAYjf,GAASsf,GAAW,CACpCC,sBAMN,GACF,IACC5N,QAAQoN,IAA+B,SAAC/T,EAAM,GAA2D,IAAD,MAAvD0C,QAAW6R,EAAmB,EAAnBA,oBAAqBvf,EAAO,EAAPA,QAASkf,EAAK,EAALA,MACzFlU,EAAMiU,YAAYjf,GAAqC,QAA7B,EAAGgL,EAAMiU,YAAYjf,UAAQ,QAAI,CAAC,EAC5Dkf,EAAMjQ,SAAQ,SAACwP,GACb,IAAMa,EAAUd,GAAUC,GACpBe,EAAUxU,EAAMiU,YAAYjf,GAASsf,GACtCE,GACDA,EAAQD,sBAAwBA,WAC3BC,EAAQD,oBACfC,EAAQrT,KAAO,KACfqT,EAAQ7E,YAAc4E,EAE1B,GACF,IACC5N,QAAQqN,IAAwB,SAAChU,EAAM,GAAqD,IAAD,MAAjD0C,QAAW1N,EAAO,EAAPA,QAASyf,EAAO,EAAPA,QAAS9E,EAAW,EAAXA,YACtE3P,EAAMiU,YAAYjf,GAAqC,QAA7B,EAAGgL,EAAMiU,YAAYjf,UAAQ,QAAI,CAAC,EAC5D+O,OAAOC,KAAKyQ,GAASxQ,SAAQ,SAACqQ,GAAa,IAAD,EAClCE,EAAUxU,EAAMiU,YAAYjf,GAASsf,IAClB,QAArB,EAAQ,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAS7E,mBAAW,QAAI,GAAKA,IAClC3P,EAAMiU,YAAYjf,GAASsf,GAAW,CACpCnT,KAAMsT,EAAQH,GACd3E,eAEJ,GACF,GAAE,IC7FA+E,GAAQC,aAAe,CAC3BC,QAAS,CACPC,eACAC,QACAnC,gBACAoC,aACA9U,IAAK+U,GACL/N,MAAOgO,GACP9G,MAAO+G,GACPlN,IAAKmN,IAEPC,WAAY,SAAAC,GAAoB,OAAIA,EAAqB,CAAEC,mBAAmB,GAAQ,EACtFC,eAAgBC,gBAAK,CAAEC,OAdQ,CAAC,OAAQ,eAAgB,aAiB1Df,GAAMzR,SAASqN,MAEAoE,UCsCAgB,OAzDf,WACE,IAAMzS,EAAWkH,cACjB,EAAqE/S,KAA7D4C,EAAO,EAAPA,QAASlH,EAAQ,EAARA,SAAUmG,EAAiB,EAAjBA,kBAAmBjB,EAAO,EAAPA,QAASF,EAAS,EAATA,UACvD,EAA0CD,oBAAS,GAAM,mBAAlD8d,EAAa,KAAEnH,EAAgB,KAAoB,SAE3CoH,EAAY,GAAD,4CAMzB,OANyB,kCAA1B,WAA2BC,GAAoB,iFACzCC,EAAehjB,EAEE,QAAjB+iB,GACFE,EAAQD,GACT,4CACF,sBAED,IAAMC,EAAU3c,uBACd,SAAA0c,GACE7S,EAAS8E,GAAgB,CAAE9R,UAAW+B,EAASlF,SAAUgjB,IAC3D,GACA,CAAChe,IAwBH,OAtBA4D,qBAAU,WACJzC,IACFe,IAAUI,MAAK,WACboU,GAAiB,EACnB,IAEAA,GAAiB,EAErB,GAAG,IAEH9S,qBAAU,WACJ5D,GACF8d,EAAY,MAEhB,GAAG,CAAC9d,IAEJ4D,qBAAU,WACJia,GACFC,EAAY,MAEhB,GAAG,CAACD,IAGF,qCACE,gBAAC,IAAQ,CAACjB,MAAOA,GAAM,UACrB,eAAC,GAAM,IACP,gBAAC,IAAM,WACL,eAAC,IAAK,CAACsB,OAAK,EAACC,KAAK,IAAI/X,UAAWuP,KACjC,eAAC,IAAK,CAACuI,OAAK,EAACC,KAAK,SAAS/X,UAAWkR,KACtC,eAAC,IAAK,CAAC6G,KAAK,IAAG,SACb,eAAC,IAAQ,CAACC,GAAG,eAMzB,E,wCCzDe,SAASC,GAAc,GAIlC,IAHFve,EAAQ,EAARA,SAIMwe,EAAQC,aAAY,CACxBC,QAAS,CACPC,KAAM,QACNC,OAAQ,CACNC,MAAO,WAETC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,WAERC,UAAW,CACTH,MAAO,UACPC,KAAM,UACNC,KAAM,cAKZ,OACE,eAACE,GAAA,EAAoB,CAACC,aAAW,WAC/B,gBAAC,KAAgB,CAACZ,MAAOA,EAAM,UAC7B,eAACa,GAAA,EAAW,IACXrf,MAIT,CC3Ce,SAASsf,GAAWpkB,GACjC,IAAMqkB,EAAU,IAAIjd,IAAapH,GAEjC,OADAqkB,EAAQC,gBAAkB,KACnBD,CACT,CCFe,SAASE,GAAexc,EAAUyc,GAC/C,MAA4Czf,mBAAYgD,GAAM,mBAAvD0c,EAAc,KAAEC,EAAiB,KAgBxC,OAdA9b,qBAAU,WAER,IAAM+b,EAAUle,YAAW,WACzBie,EAAkB3c,EACpB,GAAGyc,GAKH,OAAO,WACLI,aAAaD,EACf,CACF,GAAG,CAAC5c,EAAOyc,IAEJC,CACT,CCnBA,IAAMI,GAA6B,oBAAqBC,SASzC,SAASC,KACtB,MAA8BhgB,oBAPtB8f,IAA2D,WAA7BC,SAASE,iBAOmB,mBAA3DC,EAAO,KAAY,KAc1B,OAAOA,CACT,CCpBe,SAASC,KACtB,MAA6Bld,KAArBqc,EAAO,EAAPA,QAASniB,EAAO,EAAPA,QACXiO,EAAWkH,cAEX8N,EAAgBJ,KAEtB,EAA0BhgB,mBAAsE,CAC9F7C,UACA2a,YAAa,OACb,mBAHK3P,EAAK,KAAEkY,EAAQ,KAKhBC,EAAsB/e,uBAC1B,SAACuW,GACCuI,GAAS,SAAClY,GACR,OAAIhL,IAAYgL,EAAMhL,QACa,kBAAtBgL,EAAM2P,YAAiC,CAAE3a,UAAS2a,eACzDA,EAAc3P,EAAM2P,aAAe,GAC9B,CAAE3a,UAAS2a,YAAa3P,EAAM2P,aAEhC,CAAE3a,UAAS2a,YAAaxH,KAAK2H,IAAIH,EAAa3P,EAAM2P,cAEtD3P,CACT,GACF,GACA,CAAChL,EAASkjB,IAIZxc,qBAAU,WACR,GAAKyb,GAAYniB,GAAYijB,EAU7B,OARAC,EAAS,CAAEljB,UAAS2a,YAAa,OAEjCwH,EACGiB,iBACAhe,KAAK+d,GACLE,OAAM,SAAC7V,GAAK,OAAKzL,QAAQyL,MAAM,2CAAD,OAA4CxN,GAAWwN,EAAM,IAE9F2U,EAAQ7d,GAAG,QAAS6e,GACb,WACLhB,EAAQmB,eAAe,QAASH,EAClC,CACF,GAAG,CAAClV,EAAUjO,EAASmiB,EAASgB,EAAqBF,IAErD,IAAMM,EAAiBlB,GAAYrX,EAAO,KAO1C,OALAtE,qBAAU,WACH6c,EAAevjB,SAAYujB,EAAe5I,aAAgBsI,GAC/DhV,EAASoM,GAAkB,CAAEra,QAASujB,EAAevjB,QAAS2a,YAAa4I,EAAe5I,cAC5F,GAAG,CAACsI,EAAehV,EAAUsV,EAAe5I,YAAa4I,EAAevjB,UAEjE,IACT,C,2CCxDMwjB,IAAoD,qBAEvDC,KAAQC,QAAU,8CAA4C,eAC9DD,KAAQE,KAAO,8CAA4C,eAC3DF,KAAQG,OAAS,8CAA4C,I,8BCCzD,SAASC,GAAUhe,GACxB,IACE,OAAOP,sBAAWO,EAGpB,CAFE,SACA,OAAO,CACT,CACF,CCJA,SAASie,GACPphB,EACAqhB,GAEkB,IADlBC,IAAoB,yDAEpB,EAA6Ble,KAArBqc,EAAO,EAAPA,QAASpiB,EAAO,EAAPA,QAEjB,OAAOyC,mBAAQ,WACb,IAAKE,IAAYqhB,IAAQ5B,EAAS,OAAO,KACzC,IACE,ODoDC,SACLzf,EACAqhB,EACA5B,EACApiB,GAEA,IAAK8jB,GAAUnhB,IAAYA,IAAYuhB,KACrC,MAAMrmB,MAAM,gCAAD,OAAiC8E,EAAO,OAErD,OAAO,IAAIoN,KACTpN,EACAqhB,EApBG,SACL5B,EACApiB,GAGA,OAAOA,EAbF,SACLoiB,EACApiB,GAEA,OAAOoiB,EAAQ9c,UAAUtF,GAASmkB,kBACpC,CAQmB7e,CAAU8c,EAASpiB,GAAWoiB,CACjD,CAeIgC,CAAoBhC,EAASpiB,GAEjC,CClEaqkB,CACL1hB,EACAqhB,EACA5B,EACA6B,GAAwBjkB,EAAUA,OAAU4X,EAKhD,CAHE,MAAOnK,GAEP,OADAzL,QAAQyL,MAAM,yBAA0BA,GACjC,IACT,CACF,GAAG,CAAC9K,EAASqhB,EAAK5B,EAAS6B,EAAsBjkB,GACnD,CC3BA,SAASskB,GAAWC,EAAaxJ,GAC/B,OALYyJ,EAKAD,EAAMnR,KAAKqR,MAAMrR,KAAKsR,SAAWtR,KAAK2H,IAAI,EAAGA,EAAMwJ,IAJxD,IAAI9R,SAAQ,SAACkS,GAAO,OAAKngB,WAAWmgB,EAASH,EAAG,IADzD,IAAcA,CAMd,CAKO,IAAMI,GAAc,kDACzB,aAAe,uCACP,YACR,CAAC,sBAHwB,CAGxB,YAHiC/mB,QASvBgnB,GAAc,qJAAShnB,QCd7B,SAASinB,KACd,IAAQ7kB,EAAY8F,KAAZ9F,QAER,OAAO+K,aAAY,SAACC,GAAe,OAAKA,EAAM6U,YAAYlF,YAAmB,OAAP3a,QAAO,IAAPA,KAAY,EAAE,GACtF,CCSA,IAAM8kB,GAAkB,GA+BxB,cAFC,OAED,mCAvBA,WACEC,EACAC,EACAC,GAAsB,uFAEoD,OAA1EljB,QAAQmjB,MAAM,iBAAkBH,EAAmBC,EAAOC,GAAgB,kBAI/BF,EAAkBI,UACzDH,EAAM/mB,KAAI,SAACmnB,GAAG,MAAK,CAACA,EAAI1iB,QAAS0iB,EAAIzG,SAAS,KAC9C,KAAD,8BAFA0G,EAAkB,KAAEC,EAAU,6BAI4B,MAJ5B,0BAI/BvjB,QAAQmjB,MAAM,qCAAqC,EAAD,IAAS,kBAGzDG,EAAmBE,WAAaN,GAAc,iBAC8D,MAA9GljB,QAAQmjB,MAAM,yCAAD,OAA0CG,EAAmB/R,WAAU,gBAAQ2R,IACtF,IAAIL,GAAe,gCAAgC,KAAD,4BAEnD,CAAEnF,QAAS6F,EAAY3K,YAAa0K,EAAmBE,aAAY,2DAC3E,sBAmEc,SAASvC,KACtB,IAAM/U,EAAWkH,cACXnK,EAAQD,aAA6C,SAACC,GAAK,OAAKA,EAAM+U,SAAS,IAE/EyF,EAAqBnD,GAAYrX,EAAMqU,cAAe,KACtDoG,EAAoBZ,KAClB7kB,EAAY8F,KAAZ9F,QACF+kB,EH9DD,WACL,IAAQ/kB,EAAY8F,KAAZ9F,QACR,OAAO8jB,GACL9jB,GAAWwjB,GAAmBxjB,GAC9B0lB,IACA,EAEJ,CGuD4BC,GACpBC,EAAgBC,mBAEhBC,EAA+CtjB,mBAAQ,WAC3D,OAtEG,SACLujB,EACA/lB,GAEA,IAAK+lB,IAAiB/lB,EAAS,MAAO,CAAC,EACvC,IAAMof,EAAY2G,EAAa/lB,GAC/B,OAAKof,EAEErQ,OAAOC,KAAKoQ,GAAW4G,QAAsC,SAACC,EAAM3G,GACzE,IAAM4G,EAAe9G,EAAUE,GAW/B,OATA2G,EAAK3G,GAAWvQ,OAAOC,KAAKkX,GACzBjL,QAAO,SAAC3Q,GACP,IAAM6U,EAAiB7e,SAASgK,GAChC,QAAI6U,GAAkB,IACf+G,EAAa/G,GAAkB,CACxC,IACC6G,QAAO,SAACG,EAAa3G,GACpB,OAAOrM,KAAKmR,IAAI6B,EAAa7lB,SAASkf,GACxC,GAAG4G,KACEH,CACT,GAAG,CAAC,GAfmB,CAAC,CAgB1B,CAgDWI,CAAoBb,EAAoBxlB,EACjD,GAAG,CAACwlB,EAAoBxlB,IAElBsmB,EAA+B9jB,mBAAQ,WAC3C,OA3CG,SACLyc,EACA6G,EACA9lB,EACAylB,GAEA,OAAKzlB,GAAYylB,EACDxG,EAAYjf,GAIrB+O,OAAOC,KAAK8W,GAAe7K,QAAO,SAACqE,GACxC,IAAMH,EAAiB2G,EAAcxG,GAE/BnT,EAAO8S,EAAYjf,GAASsf,GAElC,IAAKnT,EAAM,OAAO,EAElB,IAAMoa,EAAqBd,GAAqBtG,EAAiB,GAGjE,QAAIhT,EAAKoT,qBAAuBpT,EAAKoT,qBAAuBgH,MAGpDpa,EAAKwO,aAAexO,EAAKwO,YAAc4L,EACjD,IAhBqBxX,OAAOC,KAAK8W,GAHU,EAoB7C,CAiBWU,CAAsBxb,EAAMiU,YAAa6G,EAAe9lB,EAASylB,EAC1E,GAAG,CAACzlB,EAASgL,EAAMiU,YAAa6G,EAAeL,IAEzCgB,EAA6BjkB,mBACjC,kBAAMkkB,KAAKC,UAAUL,EAA6BM,OAAO,GACzD,CAACN,IA0EH,OAvEA5f,qBAAU,WAAO,IAAD,EACd,GAAK+e,GAAsBzlB,GAAY+kB,EAAvC,CAEA,IAAM8B,EAA6BH,KAAKI,MAAML,GAC9C,GAAgC,IAA5BI,EAAiBxP,OAArB,CACA,IAI8D,IAJxD6H,EAAQ2H,EAAiB5oB,KAAI,SAACqM,GAAG,Od5HpC,SAAsBgV,GAC3B,IAAMyH,EAAMzH,EAAQlR,MAAM,KAC1B,GAAmB,IAAf2Y,EAAI1P,OACN,MAAM,IAAIzZ,MAAM,qBAAD,OAAsB0hB,IAEvC,MAAO,CACL5c,QAASqkB,EAAI,GACbpI,SAAUoI,EAAI,GAElB,CcmHgDC,CAAa1c,EAAI,IAEvD2c,EC/IK,SAAuBC,EAAYC,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAIvpB,MAAM,8BACtC,GAAIspB,EAAM7P,QAAU8P,EAAc,MAAO,CAACD,GAE1C,IAAME,EAAoBjU,KAAKkU,KAAKH,EAAM7P,OAAS8P,GAC7CG,EAAYnU,KAAKkU,KAAKH,EAAM7P,OAAS+P,GAE3C,OAAO,YAAIG,MAAMH,GAAWpY,QAAQ/Q,KAAI,SAACupB,GAAE,OAAKN,EAAM1gB,MAAMghB,EAAKF,EAAWE,EAAKF,EAAYA,EAAU,GACzG,CDuIyBG,CAAWvI,EAAO4F,IAEvC,IAAyB,QAArB,EAAAc,EAAcpG,eAAO,aAArB,EAAuB7E,eAAgB8K,EACpB,QAArB,EAAAG,EAAcpG,eAAO,OAAe,QAAf,EAArB,EAAuBoG,qBAAa,OAApC,EAAsC3W,SAAQ,SAACyY,GAAC,OAAKA,GAAG,IAG1DzZ,EACE6Q,GAAyB,CACvBI,QACAlf,UACAuf,oBAAqBkG,KAIzBG,EAAcpG,QAAU,CACtB7E,YAAa8K,EACbG,cAAeqB,EAAahpB,KAAI,SAAC+mB,EAAO5Y,GACtC,MFrID,SACL1N,EAAqB,GAEyB,IAE1CipB,EAHFC,EAAC,EAADA,EAAGC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAEVC,GAAY,EAEVC,EAAU,IAAIxV,QAAO,iDAAI,WAAOkS,EAASuD,GAAM,iFACnDN,EAAkBM,EAAO,OAEV,OAATC,OAAS,oBAEIxpB,IAAK,KAAD,EAIlB,OAJDwpB,EAAM,OACDH,IACHrD,EAAQwD,GACRH,GAAY,GACb,2DAGGA,EAAU,CAAD,yDAGTH,GAAK,IAAO,gBAAiBhD,GAAe,iBAE7B,OADjBqD,EAAO,EAAD,IACNF,GAAY,EAAK,6BAGnBH,IAAI,yBAEAvD,GAAWwD,EAASC,GAAS,KAAD,4EAErC,qDAxB0B,IAyB3B,MAAO,CACLE,UACAG,OAAQ,WACFJ,IACJA,GAAY,EACZJ,EAAgB,IAAIhD,IACtB,EAEJ,CE8FoCyD,EAAM,kBA7I1C,SAM0B,EAAD,qCAuIuBC,CAAWtD,EAAmBC,EAAOS,EAAkB,GAAE,CAC/FmC,EAAG,EACHC,QAAS,KACTC,QAAS,OAHHK,EAAM,EAANA,OA0CR,OA1CuB,EAAPH,QAMb5iB,MAAK,YAA6D,IAAjDkgB,EAAU,EAAnB7F,QAAkC6I,EAAgB,EAA7B3N,YAC5BiL,EAAcpG,QAAU,CAAEoG,cAAe,GAAIjL,YAAa8K,GAG1D,IAAM8C,EAAoBtB,EACvBzgB,MAAM,EAAG4F,GACT4Z,QAAe,SAACC,EAAMuC,GAAI,OAAKvC,EAAOuC,EAAKnR,MAAM,GAAE,GAChDoR,EAAmBF,EAAoBjD,EAAWjO,OAExDpJ,EACE+Q,GAAuB,CACrBhf,UACAyf,QAASoH,EACNrgB,MAAM+hB,EAAmBE,GACzBzC,QAA6C,SAACC,EAAM3G,EAASoJ,GAAO,IAAD,EAElE,OADAzC,EAAK3G,GAAwB,QAAhB,EAAGgG,EAAWoD,UAAE,QAAI,KAC1BzC,CACT,GAAG,CAAC,GACNtL,YAAa2N,IAGnB,IACCjF,OAAM,SAAC7V,GACFA,aAAiBmX,GACnB5iB,QAAQmjB,MAAM,kCAAmCO,IAGnD1jB,QAAQyL,MAAM,kCAAmCwX,EAAOhlB,EAASwN,GACjES,EACE8Q,GAA8B,CAC5BG,MAAO8F,EACPhlB,UACAuf,oBAAqBkG,KAG3B,IACK0C,CACT,IA/DuC,CAHuB,CAoElE,GAAG,CAACnoB,EAAS+kB,EAAmB9W,EAAUwY,EAA4BhB,IAE/D,IACT,CEtLe,SAASzC,KAAiB,IAAD,EACtC,EAA6Bld,KAArB9F,EAAO,EAAPA,QAASmiB,EAAO,EAAPA,QAEXwG,EAAkB9D,KAElB5W,EAAWkH,cACXnK,EAAQD,aAAgD,SAACC,GAAK,OAAKA,EAAM2S,YAAY,IAErFA,EAAe3d,GAAwB,QAAjB,EAAGgL,EAAMhL,UAAQ,QAAS,CAAC,EAGjDwa,EHuBD,WACL,IAAMvM,EAAWkH,cAEjB,OAAO/Q,uBACL,SAAC2W,EAAuBzQ,GACtB2D,EAASuM,GAAS,CAAEO,UAASzQ,QAC/B,GACA,CAAC2D,GAEL,CGhCmB2a,GAiDjB,OA/CAliB,qBAAU,WACH1G,GAAYmiB,GAAYwG,GAE7B5Z,OAAOC,KAAK2O,GACT1C,QAAO,SAAC5K,GAAI,OAtCZ,SACLsY,EACAzK,GAEA,GAAIA,EAAGE,QAAS,OAAO,EACvB,IAAKF,EAAGC,uBAAwB,OAAO,EACvC,IAAM0K,EAAmBF,EAAkBzK,EAAGC,uBAC9C,GAAI0K,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAI9S,MAAOkG,UAAYgC,EAAGD,WAAa,IAAO,GACtE,OAAI6K,EAAiB,GAEZD,EAAmB,IACjBC,EAAiB,IAEnBD,EAAmB,CAK9B,CAmBwBE,CAAYJ,EAAiBhL,EAAatN,GAAM,IACjEpB,SAAQ,SAACoB,GACR8R,EACG6G,sBAAsB3Y,GACtBjL,MAAK,SAACgZ,GACS,IAAD,EAATA,GACFnQ,EACEuP,GAAoB,CAClBxd,UACAqQ,OACA+N,QAAS,CACP6K,UAAW7K,EAAQ6K,UACnBtO,YAAayD,EAAQzD,YACrBuO,gBAAiB9K,EAAQ8K,gBACzBtL,KAAMQ,EAAQR,KACduL,OAAQ/K,EAAQ+K,OAChBjI,GAAI9C,EAAQ8C,GACZkI,gBAAiBhL,EAAQgL,gBACzBC,iBAAkBjL,EAAQiL,qBAKhC7O,EACE,CACE8O,IAAK,CACHjZ,OACAxC,QAA4B,IAAnBuQ,EAAQ+K,OACjBrL,QAA2B,QAApB,EAAEH,EAAatN,UAAK,aAAlB,EAAoByN,UAGjCzN,IAGFpC,EAASwP,GAAmB,CAAEzd,UAASqQ,OAAMsK,YAAagO,IAE9D,IACCtF,OAAM,SAAC7V,GACNzL,QAAQyL,MAAM,qCAAD,OAAsC6C,GAAQ7C,EAC7D,GACJ,GACJ,GAAG,CAACxN,EAASmiB,EAASxE,EAAcgL,EAAiB1a,EAAUuM,IAExD,IACT,CCpFe,SAASwI,KACtB,IAAM/U,EAAWkH,cA0BjB,OAvBAzO,qBAAU,WAAO,IAAD,EACR6iB,EAAc,SAACC,GACnBvb,EAASsN,GAAsB,CAAEgB,gBAAiBiN,EAAMC,UAC1D,EAEMD,EAAc,QAAT,EAAGnoB,cAAM,aAAN,EAAQqoB,WAAW,gCASjC,OARAzb,EAASsN,GAAsB,CAAEgB,gBAAiBiN,EAAMC,WAE/C,OAALD,QAAK,IAALA,KAAOG,YACJ,OAALH,QAAK,IAALA,KAAOG,YAAYJ,GACL,OAALC,QAAK,IAALA,KAAOI,mBACX,OAALJ,QAAK,IAALA,KAAOI,iBAAiB,SAAUL,IAG7B,WACI,OAALC,QAAK,IAALA,KAAOlG,eACJ,OAALkG,QAAK,IAALA,KAAOlG,eAAeiG,GACR,OAALC,QAAK,IAALA,KAAOK,sBACX,OAALL,QAAK,IAALA,KAAOK,oBAAoB,SAAUN,GAEzC,CACF,GAAG,CAACtb,IAEG,IACT,CC/BA,IAYe6b,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5kB,MAAK,YAAkD,IAA/C6kB,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,ECQMO,GAAsBC,YAAoBrpB,IAEhD,SAASspB,KACP,OACE,uCACE,eAAC,GAAW,IACZ,eAAC,GAAkB,IACnB,eAAC,GAAkB,IACnB,eAAC,GAAgB,MAGvB,CAEAC,IAASC,OACP,eAAC,IAAiB,CAACxI,WAAYA,GAAW,SACxC,eAACoI,GAAmB,CAACpI,WAAYA,GAAW,SAC1C,eAAC,IAAQ,CAACxC,MAAOA,GAAM,SACrB,eAAC,GAAa,UACZ,gBAAC,IAAU,WACT,eAAC8K,GAAQ,IACT,eAAC,GAAmB,UAClB,eAAC,GAAG,iBAOhB5H,SAAS+H,eAAe,SAM1Bb,I","file":"static/js/main.a89cd972.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/discord-brands.3e07cf0d.svg\";","// all abis...\r\nimport { abi as IntercroneswapV1Router02ABI } from \"@intercroneswap/v2-periphery/build/IIswapV1Router02.json\";\r\n\r\nimport ERC20_ABI from \"../../constants/abis/erc20.json\";\r\n\r\nexport const abis = [...ERC20_ABI, ...IntercroneswapV1Router02ABI];\r\n","import createTronLinkProvider from '@intercroneswap/tronlink-provider';\r\nimport Web3 from 'web3';\r\nimport { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { abis } from './tronlink-abis';\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super();\r\n    this.name = this.constructor.name;\r\n    this.message = 'The user rejected the request.';\r\n  }\r\n}\r\n\r\nexport class InjectedTronConnector extends AbstractConnector {\r\n  public provider: any;\r\n\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs);\r\n\r\n    const getFunctionSelector = (abi: any) => {\r\n      return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\r\n    };\r\n    const getParamTypes = (params: any) => {\r\n      return params.map(({ type, components }: { type: any; components: any }) => {\r\n        if (type === 'tuple[]') {\r\n          return (\r\n            '(' +\r\n            components\r\n              .map(({ type }: { type: any }) => {\r\n                return type;\r\n              })\r\n              .join(',') +\r\n            ')[]'\r\n          );\r\n        }\r\n        return type;\r\n      });\r\n    };\r\n    const signs: any = {};\r\n    const web3 = new Web3(\r\n      new Web3.providers.WebsocketProvider('wss://mainnet.infura.io/ws/v3/7f14d2eb070c41029d687df66b286a09'),\r\n    );\r\n    abis.map((fn: any) => {\r\n      try {\r\n        const sign = web3.eth.abi.encodeFunctionSignature({\r\n          name: fn.name,\r\n          type: fn.type,\r\n          inputs: fn.inputs,\r\n        });\r\n        signs[sign] = getFunctionSelector(fn);\r\n      } catch (err) {\r\n      }\r\n    });\r\n    // TODO(tron): should auto-use same network as one selected in tronlink!\r\n    this.provider = createTronLinkProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n      functionSignatures: abis,\r\n      signs,\r\n    });\r\n    /*\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n    */\r\n  }\r\n\r\n  async requestProvider(args: any) {\r\n    const res = await this.provider.request(args);\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return { provider: this.provider, account };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    const chainId = await this.requestProvider({ method: 'eth_chainId' });\r\n    return chainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return account;\r\n  }\r\n\r\n  public deactivate() {\r\n    return true;\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    // TODO: check if tronlink unlocked?\r\n    return true;\r\n  }\r\n}\r\n","import createJavaTronProvider from '@intercroneswap/java-tron-provider';\r\n\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nexport class NetworkConnector extends InjectedTronConnector {\r\n  constructor(kwargs: any) {\r\n    super(kwargs);\r\n    this.provider = createJavaTronProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n    });\r\n  }\r\n\r\n  async requestProvider(...args: any[]) {\r\n    const res = await this.provider.request(...args);\r\n    // TODO: wrap error with throw new NoEthereumProviderError()?\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<any> {\r\n    return { provider: this.provider };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return null;\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nimport { NetworkConnector } from './NetworkConnector';\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '11111');\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\r\n}\r\n\r\nexport const injected = new InjectedTronConnector({\r\n  supportedChainIds: [11111, 1],\r\n});\r\n","export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n  // AVAX = 43114,\r\n  AVAX = 43113, // for test\r\n  GOERLI = 5,\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.GOERLI;\r\n","import { Networks } from \"./blockchain\";\r\n\r\nconst GOERLI_TESTNET = {\r\n  MEOW_ADDRESS: \"0x9e0E637be31FaBCB390393DE1c744fb29f8F322e\", //\r\n  NFT_ADDRESS: \"0xA3D40B9be89e1074309Ed8EFf9F3215F323C8b19\",\r\n  MEOWTOKEN_ADDRESS: \"0x1DCB36B5e5b377E71375ADA75E1eE577a27167F0\",\r\n};\r\n\r\nexport const getAddresses = (networkID: number) => {\r\n  if (networkID === Networks.GOERLI) return GOERLI_TESTNET;\r\n\r\n  throw Error(\"Network don't support\");\r\n};\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\n\r\nimport { injected } from \"../connectors\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector;\r\n  name: string;\r\n  iconName: string;\r\n  description: string;\r\n  href: string | null;\r\n  color: string;\r\n  primary?: true;\r\n  mobile?: true;\r\n  mobileOnly?: true;\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  TRONLINK: {\r\n    connector: injected,\r\n    name: \"TronLink\",\r\n    iconName: \"tronlink.svg\",\r\n    description: \"Easy-to-use browser extension.\",\r\n    href: null,\r\n    color: \"#48489b\",\r\n  },\r\n};\r\n\r\nexport const NetworkContextName = \"NETWORK\";\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\r\n\r\nexport * from \"./blockchain\";\r\nexport * from \"./addresses\";","export const messages = {\r\n  please_connect:\r\n    \"Please connect your wallet to the Ether network to use Warchest.\",\r\n  please_connect_wallet: \"Please connect your wallet.\",\r\n  try_mint_more: (value: string) =>\r\n    `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} KANDY.`,\r\n  before_minting: \"Before minting, enter a value.\",\r\n  existing_mint:\r\n    \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\r\n  before_stake: \"Before staking, enter a value.\",\r\n  before_unstake: \"Before un staking, enter a value.\",\r\n  tx_successfully_send: \"Your transaction was successfully sent\",\r\n  your_balance_updated: \"Your balance was successfully updated\",\r\n  nothing_to_claim: \"You have nothing to claim\",\r\n  something_wrong: \"Something went wrong\",\r\n  switch_to_avalanche: \"Switch to the Avalanche network?\",\r\n  slippage_too_small: \"Slippage too small\",\r\n  slippage_too_big: \"Slippage too big\",\r\n  your_balance_update_soon: \"Your balance will update soon\",\r\n  before_wrap: \"Before wraping, enter a value.\",\r\n  before_unwrap: \"Before un wraping, enter a value.\",\r\n};\r\n","const switchRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0xa86a\" }],\r\n    });\r\n};\r\n\r\nconst addChainRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n            {\r\n                chainId: \"0xa86a\",\r\n                chainName: \"Avalanche Mainnet\",\r\n                rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\r\n                blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\r\n                nativeCurrency: {\r\n                    name: \"AVAX\",\r\n                    symbol: \"AVAX\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n};\r\n\r\nexport const swithNetwork = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await switchRequest();\r\n        } catch (error: any) {\r\n            if (error.code === 4902) {\r\n                try {\r\n                    await addChainRequest();\r\n                    await switchRequest();\r\n                } catch (addError) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\nimport { DEFAULD_NETWORK } from \"../../constants\";\r\nimport { Networks } from \"../../constants\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { swithNetwork } from \"../../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.AVAX]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.AVAX) {\r\n            setProvider(connectedProvider);\r\n        }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const checkWrongNetwork = async (): Promise<boolean> => {\r\n        if (providerChainID !== DEFAULD_NETWORK) {\r\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\r\n            if (shouldSwitch) {\r\n                await swithNetwork();\r\n                window.location.reload();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,\r\n            checkWrongNetwork,\r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n    return \"https://ethereum-goerli-rpc.allthatnode.com\";\r\n    return \"https://api.avax.network/ext/bc/C/rpc\";\r\n};\r\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useWeb3React as useWeb3ReactCore } from \"@web3-react/core\";\r\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\r\nimport { NetworkContextName } from \"../constants\";\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & {\r\n  chainId?: ChainId;\r\n} {\r\n  const context = useWeb3ReactCore<Web3Provider>();\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\r\n  return context.active ? context : contextNetwork;\r\n}\r\n\r\nexport * from \"./web3\";","import { useEffect, useState } from \"react\";\r\nimport { useWeb3Context, useAddress } from \"../../hooks\";\r\nimport { DEFAULD_NETWORK } from \"../../constants\";\r\n\r\nimport \"./connect-menu.scss\";\r\nimport \"./web3-status.scss\";\r\n\r\nexport default function Web3Status() {\r\n  const { connect, disconnect, connected, web3, providerChainID, checkWrongNetwork } = useWeb3Context();\r\n  const [isConnected, setConnected] = useState(connected);\r\n  const address = useAddress();\r\n\r\n\r\n  let buttonText = \"Connect Wallet\";\r\n  let clickFunc: any = connect;\r\n  let buttonStyle = {};\r\n\r\n  if (isConnected) {\r\n      buttonText = `${address.slice(0, 4)}...${address.slice(38, 42)}`;\r\n      clickFunc = disconnect;\r\n  }\r\n\r\n  if (isConnected && providerChainID !== DEFAULD_NETWORK) {\r\n      buttonText = \"Wrong network\";\r\n      buttonStyle = { backgroundColor: \"rgb(255, 67, 67)\" };\r\n      clickFunc = () => {\r\n          checkWrongNetwork();\r\n      };\r\n  }\r\n\r\n  useEffect(() => {\r\n      setConnected(connected);\r\n  }, [web3, connected]);\r\n\r\n  return (\r\n      <div className=\"connect-button\" style={buttonStyle} onClick={clickFunc}>\r\n          <p>{buttonText}</p>\r\n      </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Link,\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nimport DiscordIcon from \"assets/images/discord-brands.svg\";\r\nimport \"./header.scss\";\r\n\r\nimport Web3Status from \"components/Web3Status\";\r\n\r\nconst menuLists = [\r\n  {\r\n    link: \"/play\",\r\n    text: \"Play War\",\r\n  },\r\n  {\r\n    link: \"/stake\",\r\n    text: \"Meow Staking\",\r\n  },\r\n  \r\n];\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleClickMenu = (link: string) => {\r\n    handleCloseUserMenu();\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      className=\"appbar\"\r\n      sx={{ backgroundColor: \"rgba(9,9,10,1)\" }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar\r\n          disableGutters\r\n          sx={{ justifyContent: \"space-between\", columnGap: \"8px\" }}\r\n        >\r\n          <Link href=\"/\" className=\"logo\" sx={{textDecoration: 'none'}}>\r\n            {/* <Box component=\"img\" src={LogoImage} alt=\"logo\" /> */}\r\n            <Typography fontFamily=\"Audiowide\" sx={{fontSize: {xs: '24px', sm: '36px', md: '40px'}}}>Catz Fight</Typography>\r\n          </Link>   \r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", columnGap: \"8px\" }}>\r\n            <Box\r\n              className=\"social-buttons\"\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              <Button\r\n                href=\"https://twitter.com/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"               \r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TwitterIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://t.me/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TelegramIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://discord.gg/warchest\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <Box component=\"img\" src={DiscordIcon} alt=\"\" />\r\n              </Button>\r\n            </Box>\r\n            <Web3Status />            \r\n            <Button\r\n              onClick={handleOpenUserMenu}\r\n              className=\"menu-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{\r\n                backgroundColor: 'rgba(101,230,255,0.12)', \r\n                '&: hover': {\r\n                  backgroundColor: 'rgba(101,230,255,0.15)'                                     \r\n                }          \r\n              }} \r\n            >\r\n              <MenuIcon sx={{ \r\n                color: 'rgba(101,230,255,0.9)',\r\n                '&: hover': {\r\n                  color: 'rgba(101,230,255,1)',\r\n                }\r\n              }} \r\n              />\r\n            </Button>            \r\n            <Menu              \r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n              sx={{\r\n                mt: \"45px\"                        \r\n              }} \r\n            >\r\n              <MenuItem component=\"a\" href=\"https://www.cryptomooncatz.com\"\r\n                sx={{\r\n                  backgroundColor: 'rgba(101,230,255,0.12)',\r\n                  color: 'rgba(101,230,255,0.9)'\r\n                }}>\r\n                Home\r\n              </MenuItem>\r\n              {menuLists.map((list, key) => (\r\n                <MenuItem key={key} \r\n                  sx={{\r\n                    backgroundColor: 'rgba(101,230,255,0.12)',\r\n                    color: 'rgba(101,230,255,0.9)'\r\n                  }}\r\n                onClick={() => handleClickMenu(list.link)}>\r\n                  {list.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { TokenList } from '@intercroneswap/token-lists';\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string;\r\n        success: boolean;\r\n        summary?: string;\r\n      };\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string;\r\n        oldList: TokenList;\r\n        newList: TokenList;\r\n        auto: boolean;\r\n      };\r\n    };\r\n\r\nexport enum ApplicationModal {\r\n  WALLET,\r\n  SETTINGS,\r\n  SELF_CLAIM,\r\n  ADDRESS_CLAIM,\r\n  CLAIM_POPUP,\r\n  MENU,\r\n  LEFTMENU,\r\n  DELEGATE,\r\n  VOTE,\r\n}\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\r\n  'application/updateBlockNumber',\r\n);\r\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal');\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'application/addPopup',\r\n);\r\nexport const removePopup = createAction<{ key: string }>('application/removePopup');\r\n","export default __webpack_public_path__ + \"static/media/ban1.5cd04bdb.jpg\";","export default __webpack_public_path__ + \"static/media/ban2.ec1990ce.jpg\";","import { Box } from \"@mui/material\";\r\nimport \"./banner.scss\";\r\nimport BannerImage1 from \"assets/images/item/ban1.jpg\";\r\nimport BannerImage2 from \"assets/images/item/ban2.jpg\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <>\r\n      <Box className=\"banner-container\">\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            width: { xs: \"120px\", sm: \"150px\" },\r\n            mr: { xs: 1, sm: 2, md: 3 },\r\n          }}\r\n          src={BannerImage1}\r\n          alt=\"Banner Image\"\r\n        />\r\n        <Box\r\n          component=\"img\"\r\n          sx={{ width: { xs: \"120px\", sm: \"150px\" } }}\r\n          src={BannerImage2}\r\n          alt=\"Banner Image\"\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Jackpot = () => {\r\n  const JackpotAmount = useSelector<IReduxState, string>(\r\n    (state) => state.app.jackpotAmount\r\n  );\r\n\r\n  const history = useHistory();\r\n  const handleClickStake = (link: string) => {\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingY: \"3px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#FF1E1E\",\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          py: 1,\r\n          px: { xs: 1, sm: 3 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", sm: \"615px\" },\r\n          textAlign: \"center\",\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        War Chest Jackpot: {JackpotAmount} Ether\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"self-start\",\r\n          pb: 6,\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box>\r\n            <Button\r\n              sx={{\r\n                paddingX: \"16px\",\r\n                paddingY: \"6px\",\r\n                marginTop: \"8px\",\r\n                fontSize: \"18px\",\r\n                mr: 3,\r\n                color: \"rgba(101,230,255,1)\",\r\n                backgroundColor: \"rgba(101,230,255,0.15)\",\r\n              }}\r\n            >\r\n              Deposit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Button\r\n          sx={{\r\n            paddingX: \"16px\",\r\n            paddingY: \"6px\",\r\n            marginTop: \"8px\",\r\n            fontSize: \"18px\",\r\n            mr: 3,\r\n            color: \"#52b202\",\r\n            backgroundColor: \"#d0e7b7\",\r\n          }}\r\n        >\r\n          Withdraw\r\n        </Button>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              borderRadius: \"24px\",\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              border: \"1px solid white\",\r\n              color: \"white\",\r\n              // backgroundColor: \"rgba(38,40,42,0.64)\",\r\n              mx: \"auto\",\r\n              fontSize: \"18px\",\r\n              marginTop: \"8px\",\r\n              display: \"block\",\r\n            }}\r\n            onClick={() => {\r\n              handleClickStake(\"stake\");\r\n            }}\r\n          >\r\n            Meow Staking\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available Meow: 2\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#fff\",\r\n          fontSize: { xs: \"20px\", xl: \"24px\" },\r\n          py: 1,\r\n          px: { xs: 1, xl: 2 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", xl: \"600px\" },\r\n          textAlign: \"center\",\r\n          position: { md: \"absolute\" },\r\n          mx: \"auto\",\r\n          left: \"6px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        MEOW left to be mined: 99,999,980\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Jackpot;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Role = () => {\r\n  const randomData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.randomData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"18px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Numbers Rolled:\r\n      </Typography>\r\n      {randomData?.map((data, index) => (\r\n        <Box key={index}>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber1}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber2}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","import {\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\n\r\nconst Winner = () => {\r\n  const winnerData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.winnerData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"20px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n        }}\r\n      >\r\n        Top 10 Winners\r\n      </Typography>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Wins:\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Address:\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          {winnerData?.map((data, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {data.winCount}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {`${data.address.slice(0,4)}...${data.address.slice(-4)}`}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import { Color } from \"@material-ui/lab/Alert\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Message = IMessage & {\r\n    severity: Color;\r\n};\r\n\r\nexport interface MessagesState {\r\n    message: Message | null;\r\n}\r\n\r\ninterface IMessage {\r\n    text: string;\r\n    error?: any;\r\n}\r\n\r\n// Adds a message to the store\r\nconst createMessage = function (state: MessagesState, severity: Color, text: IMessage) {\r\n    const message: Message = {\r\n        severity,\r\n        ...text,\r\n    };\r\n    state.message = message;\r\n};\r\nconst initialState: MessagesState = {\r\n    message: null,\r\n};\r\nconst messagesSlice = createSlice({\r\n    name: \"messages\",\r\n    initialState,\r\n    reducers: {\r\n        // Creates an error message\r\n        error(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"error\", action.payload);\r\n        },\r\n        // Creates an information message\r\n        info(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"info\", action.payload);\r\n        },\r\n        warning(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"warning\", action.payload);\r\n        },\r\n        success(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"success\", action.payload);\r\n        },\r\n        // Closes a message\r\n        close(state) {\r\n            state.message = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { error, info, close, warning, success } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","import { Dispatch } from \"redux\";\r\nimport { error } from \"../store/slices/messages-slice\";\r\nimport { messages } from \"../constants/messages\";\r\n\r\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\r\n    let text = messages.something_wrong;\r\n\r\n    if (err.code && err.code === -32603) {\r\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\r\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\r\n        }\r\n\r\n        if (err.data && err.data.message) {\r\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\r\n            text = \"Insufficient balance to make a transaction\";\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\r\n            text = \"Bond too small\";\r\n        }\r\n    }\r\n\r\n    if (err.code && err.code === 4001) {\r\n        if (err.message.includes(\"User denied transaction signature\")) {\r\n            text = \"User denied transaction signature\";\r\n        }\r\n    }\r\n\r\n    return dispatch(error({ text, error: err }));\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IPendingTxn {\r\n  readonly txnHash: string;\r\n  readonly text: string;\r\n  readonly type: string;\r\n}\r\n\r\nconst initialState: Array<IPendingTxn> = [];\r\n\r\nconst pendingTxnsSlice = createSlice({\r\n  name: \"pendingTransactions\",\r\n  initialState,\r\n  reducers: {\r\n    fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\r\n      state.push(action.payload);\r\n    },\r\n    clearPendingTxn(state, action: PayloadAction<string>) {\r\n      const target = state.find((x) => x.txnHash === action.payload);\r\n      if (target) {\r\n        state.splice(state.indexOf(target), 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const getStakingTypeText = (action: string) => {\r\n  return action.toLowerCase() === \"stake\"\r\n    ? \"Staking KANDY\"\r\n    : \"Unstaking SKANDY\";\r\n};\r\n\r\nexport const getWrapingTypeText = (isWrap: boolean) => {\r\n  return isWrap ? \"Wrap SKANDY\" : \"Unwrap wSKANDY\";\r\n};\r\n\r\nexport const isPendingTxn = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string\r\n) => {\r\n  return pendingTransactions.map((x) => x.type).includes(type);\r\n};\r\n\r\nexport const txnButtonText = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string,\r\n  defaultText: string\r\n) => {\r\n  return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\r\n};\r\n\r\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\r\n\r\nexport default pendingTxnsSlice.reducer;\r\n","export const setAll = (state: any, properties: any) => {\r\n    const props = Object.keys(properties);\r\n    props.forEach(key => {\r\n        state[key] = properties[key];\r\n    });\r\n};\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses, Networks } from \"../../constants\";\r\nimport { meowContractABI } from \"../../abi\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  JsonRpcProvider,\r\n  StaticJsonRpcProvider,\r\n} from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { warning, success, info } from \"./messages-slice\";\r\nimport axios from \"axios\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\ninterface IenterRoomMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  tokenId: Number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: string;\r\n}\r\n\r\nexport const EnterRoom = createAsyncThunk(\r\n  \"enterRoom/enterRoomMeow\",\r\n\r\n  async (\r\n    {\r\n      networkID,\r\n      provider,\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      address,\r\n    }: IenterRoomMeow,\r\n    { dispatch }\r\n  ) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n\r\n    let enterTx;\r\n    try {\r\n      enterTx = await meowContract.enterRoom(tokenId, fightRoom, {\r\n        value: 5000000000000000,\r\n      });\r\n\r\n      await enterTx.wait();\r\n      \r\n      axios.post(\r\n        `http://173.249.54.208/api/betting/create?roomnum=${whichroom}&firstNFT=${url}&firstaddress=${address}&fightRoom=${fightRoom}`\r\n      );\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\ninterface IclaimFightMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: string;\r\n}\r\n\r\nexport const ClaimFight = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async (\r\n    {\r\n      networkID,\r\n      provider,\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      address,\r\n    }: IclaimFightMeow,\r\n    { dispatch }\r\n  ) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const meowContractRead = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      provider\r\n    );\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n    console.log(tokenId, fightRoom);\r\n\r\n    let enterTx;\r\n    let random1: number[] = [];\r\n    let random2: number[] = [];\r\n    try {\r\n      enterTx = await meowContract.claimFight(tokenId, fightRoom, {\r\n        value: 5000000000000000,\r\n        gasLimit: 3000000,\r\n      });\r\n\r\n      await enterTx.wait();\r\n\r\n      axios.post(\r\n        `http://173.249.54.208/api/betting/update?roomnum=${whichroom}&secondNFT=${url}&secondaddress=${address}`\r\n      );\r\n      let room = await meowContractRead.room(fightRoom);\r\n      let firstrandom = Number(room.random1);\r\n      let secondrandom = Number(room.random2);\r\n      random1[whichroom] = firstrandom;\r\n      random2[whichroom] = secondrandom;\r\n\r\n      let winnerData: any;\r\n      let flag: boolean = false;\r\n      let resultData: any;\r\n      await axios\r\n      .get(`http://173.249.54.208/api/betting/find?fightRoom=${fightRoom}`)\r\n      .then((res) => {\r\n        resultData = res.data;\r\n      });\r\n\r\n      if (firstrandom > secondrandom) {\r\n        await axios\r\n          .get(\r\n            `http://173.249.54.208/api/winner/find?address=${room.fighter1}`\r\n          )\r\n          .then((res) => {\r\n            winnerData = res.data;\r\n          });\r\n      } else if (firstrandom < secondrandom) {\r\n        await axios\r\n          .get(\r\n            `http://173.249.54.208/api/winner/find?address=${room.fighter2}`\r\n          )\r\n          .then((res) => {\r\n            winnerData = res.data;\r\n          });\r\n      } else {\r\n        flag = true;\r\n      }\r\n\r\n      await axios.post(\r\n        `http://173.249.54.208/api/random/create?randomNumber1=${room.random1}&randomNumber2=${room.random2}&roomnum=${fightRoom}`\r\n      );\r\n\r\n      if (winnerData) {\r\n        await axios.post(\r\n          `http://173.249.54.208/api/winner/update?address=${winnerData.address}&winCount=${winnerData.winCount + 1}`\r\n        );\r\n      } else {\r\n        if (!flag) {\r\n          if (firstrandom > secondrandom) {\r\n            await axios.post(\r\n            `http://173.249.54.208/api/winner/create?address=${room.fighter1}&winCount=${1}`\r\n          );\r\n        } else if (firstrandom < secondrandom) {\r\n          await axios.post(\r\n              `http://173.249.54.208/api/winner/create?address=${room.fighter2}&winCount=${1}`\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      await axios.post(\r\n        `http://173.249.54.208/api/result/create?randomNumber1=${room.random1}&randomNumber2=${room.random2}&nftUrl1=${resultData.firstNFT}&nftUrl2=${resultData.secondNFT}&address1=${room.fighter1}&address2=${room.fighter2}&roomnum=${fightRoom}`\r\n      );\r\n  \r\n      return {\r\n        random1,\r\n        random2,\r\n      };\r\n    } catch (err: any) {\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IWinSlice {\r\n  random1: number[];\r\n  random2: number[];\r\n}\r\n\r\nconst fightSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(EnterRoom.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(EnterRoom.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(EnterRoom.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(ClaimFight.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.fight;\r\n\r\nexport default fightSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = fightSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (fight) => fight);\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses } from \"../../constants\";\r\nimport { NFTContractABI } from \"../../abi\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { warning, success, info } from \"./messages-slice\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\n\r\ninterface IapproveNFT {\r\n  networkID: number;\r\n  provider: JsonRpcProvider;\r\n  tokenId: Number;\r\n}\r\n\r\nexport const approveNFT = createAsyncThunk(\r\n  \"NFT/loadMFTDetails\",\r\n  //@ts-ignore\r\n  async ({ networkID, provider, tokenId }: IapproveNFT, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const nftContract = new ethers.Contract(\r\n      addresses.NFT_ADDRESS,\r\n      NFTContractABI,\r\n      signer\r\n    );\r\n    let enterTx;\r\n    try {\r\n      enterTx = await nftContract.approve(\r\n        \"0x9e0E637be31FaBCB390393DE1c744fb29f8F322e\",\r\n        tokenId\r\n      );\r\n      const text = \"Approve\";\r\n      const pendingTxnType = \"Approving\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface ILoadNFTDetails {\r\n  networkID: number;\r\n  provider: JsonRpcProvider;\r\n  tokenIds: Number[];\r\n}\r\n\r\nexport const loadNFTDetails = createAsyncThunk(\r\n  \"app/loadNFTDetails\",\r\n  //@ts-ignore\r\n  async ({ networkID, provider, tokenIds }: ILoadNFTDetails) => {\r\n    const addresses = getAddresses(networkID);\r\n    const nftContract = new ethers.Contract(\r\n      addresses.NFT_ADDRESS,\r\n      NFTContractABI,\r\n      provider\r\n    );\r\n    let allowtmp: String[] = [];\r\n    await Promise.all(\r\n      tokenIds.map(async (tokenId, index) => {\r\n        allowtmp[index] = await nftContract.getApproved(tokenId);\r\n      })\r\n    );\r\n    let allows: boolean[] = [];\r\n    allowtmp.map((allow, index) => {\r\n      allows[index] = allow === \"0x9e0E637be31FaBCB390393DE1c744fb29f8F322e\";\r\n    });\r\n    return {\r\n      allowances: allows,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface INFTSlice {\r\n  allowances: boolean[];\r\n  loading: boolean;\r\n}\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadNFTDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadNFTDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadNFTDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nft;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nft) => nft);\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses } from \"../../constants\";\r\nimport { meowContractABI } from \"../../abi\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\n\r\ninterface ILoadGameDetails {\r\n  networkID: number;\r\n  provider: JsonRpcProvider;\r\n}\r\n\r\nexport const loadGameDetails = createAsyncThunk(\r\n  \"app/loadGameDetails\",\r\n  //@ts-ignore\r\n  async ({ networkID, provider }: ILoadGameDetails) => {\r\n    const addresses = getAddresses(networkID);\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      provider\r\n    );\r\n    \r\n    let gameData: any[] = [];\r\n    let randomData: any[] = [];\r\n    let resultData: any[] = [];\r\n    let winnerData: any[] = [];\r\n\r\n    await axios.get(`http://173.249.54.208/api/betting`).then((res) => {\r\n      gameData = res.data;\r\n    });\r\n    await axios.get(`http://173.249.54.208/api/random`).then((res) => {\r\n      randomData = res.data;\r\n    });\r\n    await axios.get(`http://173.249.54.208/api/result`).then((res) => {\r\n      resultData = res.data;\r\n    });\r\n    await axios.get(`http://173.249.54.208/api/winner`).then((res) => {\r\n      winnerData = res.data;\r\n    });\r\n\r\n    const gameprice = (\r\n      (await meowContract.gamePrice()) / Math.pow(10, 18)\r\n    ).toString();\r\n    const jackpotAmount = (\r\n      (await meowContract.jackpotAmount()) / Math.pow(10, 18)\r\n    ).toString();\r\n\r\n    return {\r\n      gameprice,\r\n      jackpotAmount,\r\n      gameData,\r\n      randomData,\r\n      resultData,\r\n      winnerData,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {\r\n  gameprice: string;\r\n  jackpotAmount: string;\r\n  gameData: any[];\r\n  allowflg: boolean;\r\n  currentData: any;\r\n  loading: boolean;\r\n  randomData: any[];\r\n  resultData: any[];\r\n  winnerData: any[];\r\n}\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadGameDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadGameDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadGameDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.app;\r\n\r\nexport default gameSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = gameSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (app) => app);\r\n","import { Box, Typography, Button, Skeleton } from \"@mui/material\";\r\nimport { useWeb3Context, useAddress } from \"../../../../hooks\";\r\nimport { ClaimFight, EnterRoom } from \"store/slices/play-slice\";\r\nimport { approveNFT, loadNFTDetails } from \"store/slices/NFt-slice\";\r\nimport { loadGameDetails } from \"store/slices/game-slice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport axios from \"axios\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport io from 'socket.io-client';\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"400px\", sm: \"500px\", md: \"700px\", lg: \"1000px\" },\r\n  height: '600px',\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  flexWrap: \"wrap\",\r\n  backgroundColor: \"rgba(38,40,42)\",\r\n  borderRadius: 8,\r\n  overflowY: \"scroll\",\r\n};\r\n\r\nconst CurrentBattle = () => {\r\n  const gameData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.gameData\r\n  );\r\n  let firRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random1\r\n  );\r\n  let secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const gameLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.app.loading\r\n  );\r\n  const allowFlg: boolean[] = useSelector<IReduxState, boolean[]>(\r\n    (state) => state.nft.allowances\r\n  );\r\n  const isLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.nft.loading\r\n  );\r\n\r\n  const Datas = [\r\n    {\r\n      roomnum: 1,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 2,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 3,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      whichfight: 0,\r\n      fightroom: 0,\r\n    },\r\n    {\r\n      roomnum: 4,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 5,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 6,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 7,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 8,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n  ];\r\n\r\n  gameData &&\r\n    gameData.map((data) => {\r\n      Datas[data.roomnum - 1].firstNFt = data.firstNFT;\r\n      Datas[data.roomnum - 1].secondNFt = data.secondNFT;\r\n      Datas[data.roomnum - 1].firstaddress = data.firstaddress;\r\n      Datas[data.roomnum - 1].secondaddress = data.secondaddress;\r\n      Datas[data.roomnum - 1].fightroom = data.fightRoom;\r\n      Datas[data.roomnum - 1].whichfight = data.whichFight;\r\n    });\r\n\r\n  const [openState, setOpenState] = useState(false);\r\n  const [claimState, setClaimState] = useState(false);\r\n  const address = useAddress();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { connect, provider, hasCachedProvider, chainID, connected } =\r\n    useWeb3Context();\r\n  const [nftids, setNftIds] = useState([]);\r\n  const [nfturls, setNftUrls] = useState([]);\r\n  const [whichroom, setWhichroom] = useState(0);\r\n  const [whichfight, setWhichfight] = useState(0);\r\n  const [decide, setDecide] = useState(false);\r\n  var socket = io('http://173.249.54.208');\r\n\r\n  const getDate = () => {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let number =\r\n      year * Math.pow(10, 10) +\r\n      month * Math.pow(10, 8) +\r\n      day * Math.pow(10, 6) +\r\n      hour * Math.pow(10, 4) +\r\n      minute * Math.pow(10, 2) +\r\n      second;\r\n    return number;\r\n  };\r\n\r\n  const getIds = () => {\r\n    axios.get(`http://173.249.54.208/api/nft/ids?address=${address}`).then((res) => {\r\n      setNftIds(res.data);\r\n    });\r\n  };\r\n\r\n  const getUrls = () => {\r\n    axios.get(`http://173.249.54.208/api/nft/urls?address=${address}`).then((res) => {\r\n      setNftUrls(res.data);\r\n      getApprove();\r\n    });\r\n  };\r\n\r\n\r\n  async function getGameData() {\r\n    await dispatch(\r\n      loadGameDetails({\r\n        networkID: chainID,\r\n        provider,\r\n      })\r\n    );\r\n  }\r\n\r\n  async function getApprove() {\r\n    await dispatch(\r\n      loadNFTDetails({\r\n        networkID: chainID,\r\n        provider,\r\n        tokenIds: nftids,\r\n      })\r\n    );\r\n  }\r\n\r\n  async function approve(id: Number) {\r\n    let approveTmp = await dispatch(\r\n      approveNFT({\r\n        networkID: chainID,\r\n        provider,\r\n        tokenId: id,\r\n      })\r\n    );\r\n    if (approveTmp.meta.requestStatus === \"fulfilled\") {\r\n      getApprove();\r\n    }\r\n  }\r\n\r\n  async function onEnterRoom(index: number) {\r\n    let fightRoomnum = getDate();\r\n    let enterState = await dispatch(\r\n      EnterRoom({\r\n        networkID: chainID,\r\n        provider,\r\n        tokenId: nftids[index],\r\n        fightRoom: fightRoomnum,\r\n        whichroom: whichroom + 1,\r\n        url: nfturls[index],\r\n        address,\r\n      })\r\n    );\r\n    if (enterState.meta.requestStatus === \"fulfilled\") {\r\n      reload();\r\n    }\r\n  }\r\n\r\n  async function onClaimFight(index: number) {\r\n    let fightState = await dispatch(\r\n      ClaimFight({\r\n        networkID: chainID,\r\n        provider,\r\n        tokenId: nftids[index],\r\n        fightRoom: whichfight,\r\n        whichroom: whichroom + 1,\r\n        url: nfturls[index],\r\n        address,\r\n      })\r\n    );\r\n    if (fightState.meta.requestStatus === \"fulfilled\") {\r\n      reload();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getApprove();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (gameLoading) {\r\n      reload();\r\n    }\r\n  }, [gameLoading]);\r\n\r\n  function reload() {\r\n    socket.emit('enter');\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('entered', () => {\r\n      getGameData();\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (secRandomData) {\r\n      setDecide(true);\r\n      setTimeout(() => {\r\n        axios.delete(\r\n          `http://173.249.54.208/api/betting/delete/${secRandomData.length - 1}`\r\n        );\r\n        reload();\r\n        setDecide(false);\r\n      }, 4000);\r\n    }\r\n  }, [secRandomData]);\r\n\r\n  let isFightable = false;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        10 TRX Battle (1 Roll & 1 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas.map((data, index) => {\r\n          if (index > 3) return;\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 1, sm: 2 },\r\n                ml: { xs: 1, sm: 2 },\r\n                mb: { xs: 1, sm: 2 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mr: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {data.firstNFt !== \"\" ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={data.firstNFt}\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Button\r\n                  sx={{\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    border: \"2px solid white\",\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                    paddingX: \"0\",\r\n                    textAlign: \"center\",\r\n                    minWidth: \"60px\",\r\n                    paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                    mt: { xs: 1, sm: 2 },\r\n                    color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                  }}\r\n                  onClick={() => {\r\n                    getIds();\r\n                    getUrls();\r\n                    setOpenState(true);\r\n                    setWhichroom(index);\r\n                  }}\r\n                  disabled={data.firstNFt !== \"\" ? true : false}\r\n                >\r\n                  {firRandomData &&\r\n                  decide &&\r\n                  !(\r\n                    firRandomData[index + 1] === undefined ||\r\n                    firRandomData[index + 1] === 0\r\n                  )\r\n                    ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                      ? \"Winner\"\r\n                      : firRandomData[index + 1] == secRandomData[index + 1]\r\n                      ? \"Draw\"\r\n                      : \"Loser\"\r\n                    : data.secondaddress === \"\" ||\r\n                      data.secondaddress === undefined\r\n                    ? data.firstaddress === \"\"\r\n                      ? \"Fight\"\r\n                      : `${data.firstaddress?.slice(\r\n                          0,\r\n                          4\r\n                        )}...${data.firstaddress?.slice(-4)}`\r\n                    : \"Fighting...\"}\r\n                </Button>\r\n              </Box>\r\n              <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                {data.secondNFt !== \"\" ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={data.secondNFt}\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Button\r\n                  disabled={\r\n                    data.secondNFt !== \"\" && data.secondaddress !== undefined\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  onClick={() => {\r\n                    getIds();\r\n                    getUrls();\r\n                    setClaimState(true);\r\n                    setWhichroom(index);\r\n                    setWhichfight(data.fightroom);\r\n                  }}\r\n                  sx={{\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    border: \"2px solid white\",\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                    paddingX: \"0\",\r\n                    textAlign: \"center\",\r\n                    minWidth: \"60px\",\r\n                    paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                    my: { xs: 1, sm: 2 },\r\n                    \"& .css-2pgj13-MuiButtonBase-root-MuiButton-root.Mui-disabled\":\r\n                      { color: \"#FF1E1E\" },\r\n                  }}\r\n                >\r\n                  {secRandomData &&\r\n                  decide &&\r\n                  !(\r\n                    secRandomData[index + 1] === undefined ||\r\n                    secRandomData[index + 1] === 0\r\n                  )\r\n                    ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                      ? \"Loser\"\r\n                      : firRandomData[index + 1] == secRandomData[index + 1]\r\n                      ? \"Draw\"\r\n                      : \"Winner\"\r\n                    : data.secondaddress === \"\" ||\r\n                      data.secondaddress === undefined\r\n                    ? \"Fight\"\r\n                    : \"Fighting...\"}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 2, sm: 3, md: 4, xl: 5 },\r\n        }}\r\n      >\r\n        100 TRX Battle (10 Rolls & 10 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas.map((data, index) => {\r\n          if (index < 4) return;\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 2, sm: 3 },\r\n                mb: { xs: 1, sm: 2 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  marginRight: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                  mb: 1,\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    border: \"4px solid #F39B33\",\r\n                    borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                  }}\r\n                />\r\n                <Button\r\n                  sx={{\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    border: \"2px solid white\",\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                    paddingX: \"0\",\r\n                    textAlign: \"center\",\r\n                    minWidth: \"60px\",\r\n                    paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                    mt: { xs: 1, sm: 2 },\r\n                    color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                  }}\r\n                  onClick={() => {\r\n                    getIds();\r\n                    getUrls();\r\n                    setOpenState(true);\r\n                    setWhichroom(index);\r\n                  }}\r\n                  disabled={data.firstNFt !== \"\" ? true : false}\r\n                >\r\n                  {data.secondaddress === \"\" || data.secondaddress === undefined\r\n                    ? data.firstaddress === \"\"\r\n                      ? \"Fight\"\r\n                      : `${data.firstaddress?.slice(\r\n                          0,\r\n                          4\r\n                        )}...${data.firstaddress?.slice(-4)}`\r\n                    : \"Fighting...\"}\r\n                </Button>\r\n              </Box>\r\n              <Box>\r\n                <Box\r\n                  sx={{\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    border: \"4px solid #F39B33\",\r\n                    borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                  }}\r\n                />\r\n                <Button\r\n                  sx={{\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    border: \"2px solid white\",\r\n                    width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                    paddingX: \"0\",\r\n                    textAlign: \"center\",\r\n                    minWidth: \"60px\",\r\n                    paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                    mt: { xs: 1, sm: 2 },\r\n                    color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                  }}\r\n                  onClick={() => {\r\n                    getIds();\r\n                    getUrls();\r\n                    setClaimState(true);\r\n                    setWhichroom(index);\r\n                    setWhichfight(data.fightroom);\r\n                  }}\r\n                  disabled={\r\n                    data.firstNFt !== \"\" && data.secondaddress !== undefined\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  {data.secondaddress === \"\" || data.secondaddress === undefined\r\n                    ? \"Fight\"\r\n                    : \"Fighting...\"}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      <Modal\r\n        open={openState}\r\n        onClose={() => {\r\n          setOpenState(false);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids?.map((id: Number, index) => {\r\n            return (\r\n              <Box\r\n                sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                key={index}\r\n              >\r\n                <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                  {nfturls ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={nfturls?.[index]}\r\n                      alt=\"NFT_avatar\"\r\n                      sx={{\r\n                        width: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                        height: \"100%\",\r\n                        borderRadius: \"12px\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton\r\n                      sx={{\r\n                        width: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                        height: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n                {isLoading ? (\r\n                  <Skeleton height=\"36px\" />\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={\r\n                      allowFlg?.[index]\r\n                        ? () => {\r\n                            onEnterRoom(index);\r\n                            setOpenState(false);\r\n                          }\r\n                        : () => approve(id)\r\n                    }\r\n                  >\r\n                    {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={claimState}\r\n        onClose={() => {\r\n          setClaimState(false);\r\n          setWhichfight(0);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids?.map((id: Number, index) => {\r\n            return (\r\n              <Box\r\n                sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                key={index}\r\n              >\r\n                <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                  {nfturls ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={nfturls?.[index]}\r\n                      alt=\"NFT_avatar\"\r\n                      sx={{\r\n                        width: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                        height: \"100%\",\r\n                        borderRadius: \"12px\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Skeleton\r\n                      sx={{\r\n                        width: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                        height: {\r\n                          sx: \"60px\",\r\n                          sm: \"100px\",\r\n                          md: \"150px\",\r\n                          lg: \"230px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n                {isLoading ? (\r\n                  <Skeleton height=\"36px\" />\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={\r\n                      allowFlg?.[index]\r\n                        ? () => {\r\n                            onClaimFight(index);\r\n                            setClaimState(false);\r\n                          }\r\n                        : () => approve(id)\r\n                    }\r\n                  >\r\n                    {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentBattle;\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FinishedBattle = () => {\r\n  const resultData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.resultData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n          mb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        Last 100 Finished Battles\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {resultData?.map((data, index) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 2, sm: 3 },\r\n                mb: { xs: 1, sm: 2, md: 3, lg: 4 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  marginRight: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber1}\r\n                </Typography>\r\n                {data.nftUrl1 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl1}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 > data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      mt: 1,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address1.slice(0, 4)}...${data.address1.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 > data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber2}\r\n                </Typography>\r\n                {data.nftUrl2 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl2}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 < data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                    pt: 1,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address2.slice(0, 4)}...${data.address2.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 < data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinishedBattle;\r\n","import { Box, Typography } from \"@mui/material\";\r\n// import ActionFeed from \"./components/ActionFeed\";\r\nimport Banner from \"./components/Banner\";\r\nimport Jackpot from \"./components/Jackpot\";\r\nimport Role from \"./components/Role\";\r\nimport Winner from \"./components/Winner\";\r\nimport CurrentBattle from \"./components/CurrentBattle\";\r\nimport FinishedBattle from \"./components/FinishedBattle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Box sx={{ backgroundColor: \"rgba(38,40,42,0.95)\" }}>\r\n      <Banner />\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        fontFamily=\"Audiowide\"\r\n        color=\"white\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", md: \"48px\", xl: \"60px\" },\r\n          mt: \"16px\",\r\n          mb: \"16px\",\r\n        }}\r\n      >\r\n        Crypto Moon Catz War!\r\n      </Typography>\r\n      <Jackpot />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: { xs: \"column\", md: \"row\" },\r\n          justifyContent: \"space-around\",\r\n          my: { xs: 1, sm: 2 },\r\n        }}\r\n      >\r\n        <Box sx={{ width: { xs: \"100%\", md: \"13%\" } }}>\r\n          <Role />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"66%\" } }}>\r\n          <CurrentBattle />\r\n          <FinishedBattle />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"15%\" } }}>\r\n          <Winner />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses, Networks } from \"../../constants\";\r\nimport { meowContractABI } from \"../../abi\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  JsonRpcProvider,\r\n  StaticJsonRpcProvider,\r\n} from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { warning, success, info } from \"./messages-slice\";\r\n\r\ninterface IStackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const stackingMeow = createAsyncThunk(\r\n  \"stacking/stackingMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IStackingMeow, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []);\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n    let enterTx;\r\n    let stackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.stake(stackamount);\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface IunstackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const unstackingMeow = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IunstackingMeow, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n\r\n    let enterTx;\r\n    let unstackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.unStake(unstackamount);\r\n\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {}\r\n\r\nconst stakeSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(stackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(stackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(stackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(unstackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.stack;\r\n\r\nexport default stakeSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = stakeSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (stack) => stack);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { AppDispatch } from \"state\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWeb3Context } from \"../../../../hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { stackingMeow, unstackingMeow } from \"store/slices/staking-slice\";\r\n\r\nconst MeowToken = () => {\r\n\tconst [stackAmount, changesStack] = useState(\"\");\r\n\tconst [unstackAmount, changeUnstack] = useState(\"\");\r\n\tconst dispatch = useDispatch<AppDispatch>();\r\n\tconst { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\r\n\tconst [walletChecked, setWalletChecked] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (hasCachedProvider()) {\r\n\t\t\tconnect().then(() => {\r\n\t\t\t\tsetWalletChecked(true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetWalletChecked(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tasync function onStack() {\r\n\t\tawait dispatch(stackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: stackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function onUnstack() {\r\n\t\tawait dispatch(unstackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: unstackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\twidth: { xs: \"320px\", sm: '540px', md: '640px' },\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\r\n\t\t\t\tpb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n\t\t\t\tpx: 2\r\n\t\t\t}}>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t\tcolor: '#58C4E4', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40' },\r\n\t\t\t\t\t\tpy: 1, px: { xs: 1, sm: 3 },\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\r\n\t\t\t\t\t\tmb: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tMeow Token\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: { xs: '12px', sm: '16px' }, color: 'white' }}>\r\n\t\t\t\t\tEarn Meow each battle! Win or lose you mine one meow token.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography fontFamily=\"Audiowide\" sx={{\r\n\t\t\t\t\tcolor: '#6B81FF',\r\n\t\t\t\t\tfontSize: { xs: '14px', sm: '18px' },\r\n\t\t\t\t\tpy: { xs: 1 },\r\n\t\t\t\t\tpl: { xs: 2, sm: 4, md: 6, xl: 8 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\t24 Mined of 100,000,000 MOEW\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tEvery time a war chest is opened, users with staked Meow tokens split 40% of that Jackpot!\r\n\t\t\t\t\tPassive Inclome!\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tdisplay: 'flex', justifyContent: 'space-between', flexWrap: 'wrap',\r\n\t\t\t\talignItems: 'flex-start',\r\n\t\t\t\tpy: { xs: 1, sm: 2 }, px: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64'\r\n\t\t\t}}>\r\n\t\t\t\t{/* <Box>\r\n\t\t\t\t\t<Button sx={{border: '1px solid #F39B33', borderRadius: '24px', \r\n\t\t\t\t\t\tpaddingY: {xs: '4px', sm: '6px'}, paddingX: {xs: '8px', sm: '16px'}, \r\n\t\t\t\t\t\tfontSize: {xs: '12px', sm: '16px'}, color: '#F39B33', backgroundColor: '#393D32',\r\n\t\t\t\t\t\t'&: hover': {backgroundColor: '#393D32', opacity: 0.9}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tConnect\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, mt: 1}}>\r\n\t\t\t\t\t\tAvailable Meow: 2\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box> */}\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\t\t\tbackgroundColor: '#BADA55', fontFamily: 'Audiowide',\r\n\t\t\t\t\t\t\t'&: hover': { backgroundColor: '#BADA55', opacity: 0.9 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={onStack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStake Meow\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\t\tvalue={stackAmount}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tchangesStack((e.target.value));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' }, mt: 1 }}>\r\n\t\t\t\t\t\tStaked Meow: 10\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', fontFamily: 'Audiowide',\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onUnstack}\r\n\t\t\t\t>\r\n\t\t\t\t\tUnstake Meow\r\n\t\t\t\t</Button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\tvalue={unstackAmount}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tchangeUnstack((e.target.value));\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ p: 1, backgroundColor: '#393D32' }}>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tTotal Staked Meow in contract: 20\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\t40% of current Jackpot: 1,259 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ py: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64', paddingX: '6px' }}>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tYou share if Jackpot is triggered: 50% (504 TRX)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', paddingY: { xs: '4px', sm: '6px' },\r\n\t\t\t\t\tpx: { xs: 3, sm: 5 }, ml: { xs: 2, sm: 4 }, my: 1,\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\tClaim\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tUnclaimed Earnings: 0 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MeowToken;\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nconst ChestInfo = () => {\r\n  return (\r\n    <Box\r\n\t\t\tsx={{\t\t\r\n\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '640px'},\r\n\t\t\t\tmt: {xs: 4, sm: 6, md: 8, xl: 10},\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}          \r\n    >\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\t\r\n\t\t\t\tpb: {xs: 1, sm: 2, md: 3, xl: 4},\r\n\t\t\t\tpx: 2\t\t\t\t\r\n\t\t\t}}>\r\n\t\t\t\t<Typography \r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t\t{{ \r\n\t\t\t\t\t\t\tcolor: 'white', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3},\t\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tmx: 'auto',\t\r\n\t\t\t\t\t\t\tmb: 1,            \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tWar Chest\r\n\t\t\t\t</Typography>  \r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', py: 1}}>\r\n\t\t\t\t\tBattle players for NFTs and a chance at opening the War Chest Jackpot!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 2}}>\r\n\t\t\t\t\tEach battle 2 users put up 1 Crypto Moon Catz NFT and 10 TRX each.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 1}}>\r\n\t\t\t\t\tUsers are the given a random nuber (1-100,000) Highest number wins!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: '#BADA55', pt: 2}}>\r\n\t\t\t\t\tWinner receives both NFT's and 10 TRX + (1 Meow token)\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser receives (1 Meow token)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser 8 TRX is sent to the War Chest Jackpot until 77,777 is rolled!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\t2 TRX sent to team account\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{py: {xs: 1, sm: 2}, backgroundColor: '#6A6E64', px: 2}}>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '14px', sm: '18px'}}}>\r\n\t\t\t\t\tWar Chest Jackpot distribution:\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t50% goes to who rolled 77,777\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t10% goes to other user in that battle\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t40% goes to all users that have Meow tokens staked\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n  );\r\n};\r\n\r\nexport default ChestInfo;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport MeowToken from \"./components/MeowToken\";\r\nimport ChestInfo from \"./components/ChestInfo\";\r\n\r\nconst Stake = () => {\r\n  return (\r\n    <Box sx={{backgroundColor: \"#989E90\", py: {xs: 2, sm: 4, md: 6, xl: 8}\t}}>\r\n      <Typography \r\n\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\tsx=\r\n\t\t\t\t\t{{ \r\n\t\t\t\t\t\tcolor: '#F39B33', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3}, backgroundColor: \"#393D32\",\t\t\t\t\t\t\r\n\t\t\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '800px', xl: '1000px'},\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\t\r\n            mb: 2                     \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tWar Chest Jackpot: 2,518 Tron\r\n\t\t\t</Typography>   \r\n      <MeowToken />\r\n      <ChestInfo />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal } from './actions';\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>;\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number };\r\n  readonly popupList: PopupList;\r\n  readonly openModal: ApplicationModal | null;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  openModal: null,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload;\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber;\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\r\n      }\r\n    })\r\n    .addCase(setOpenModal, (state, action) => {\r\n      state.openModal = action.payload;\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs,\r\n        },\r\n      ]);\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach((p) => {\r\n        if (p.key === key) {\r\n          p.show = false;\r\n        }\r\n      });\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SerializedToken {\r\n  chainId: number;\r\n  address: string;\r\n  decimals: number;\r\n  symbol?: string;\r\n  name?: string;\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken;\r\n  token1: SerializedToken;\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode');\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode');\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode');\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n);\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline');\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken');\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken');\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair');\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair',\r\n);\r\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning');\r\n","import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { updateVersion } from '../global/actions';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  toggleURLWarning,\r\n} from './actions';\r\n\r\nconst currentTimestamp = () => new Date().getTime();\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number;\r\n\r\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean; // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean;\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number;\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number;\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken;\r\n    };\r\n  };\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair;\r\n    };\r\n  };\r\n\r\n  timestamp: number;\r\n  URLWarningVisible: boolean;\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: true,\r\n  matchesDarkMode: true,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {};\r\n      delete state.tokens[chainId][address];\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId;\r\n        state.pairs[chainId] = state.pairs[chainId] || {};\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible;\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { ChainId } from '@intercroneswap/v2-sdk';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string;\r\n  from: string;\r\n  contractAddress: string;\r\n  transactionIndex: number;\r\n  blockHash: string;\r\n  transactionHash: string;\r\n  blockNumber: number;\r\n  status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  from: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  claim?: { recipient: string };\r\n  summary?: string;\r\n}>('transactions/addTransaction');\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions');\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n  hash: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  summary?: string;\r\n  claim?: { recipient: string };\r\n  receipt?: SerializableTransactionReceipt;\r\n  lastCheckedBlockNumber?: number;\r\n  addedTime: number;\r\n  confirmedTime?: number;\r\n  from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails;\r\n  };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.');\r\n      }\r\n      const txs = transactions[chainId] ?? {};\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() };\r\n      transactions[chainId] = txs;\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return;\r\n      transactions[chainId] = {};\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber;\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      tx.receipt = receipt;\r\n      tx.confirmedTime = now();\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Call {\r\n  address: string;\r\n  callData: string;\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/;\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`);\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`);\r\n  }\r\n  return `${call.address}-${call.callData}`;\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-');\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`);\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  };\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number;\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n);\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n);\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n);\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number;\r\n  calls: Call[];\r\n  fetchingBlockNumber: number;\r\n}>('multicall/errorFetchingMulticallResults');\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number;\r\n  blockNumber: number;\r\n  results: {\r\n    [callKey: string]: string | null;\r\n  };\r\n}>('multicall/updateMulticallResults');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number;\r\n      };\r\n    };\r\n  };\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null;\r\n        blockNumber?: number;\r\n        fetchingBlockNumber?: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {});\r\n      listeners[chainId] = listeners[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {};\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1;\r\n      });\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {});\r\n\r\n        if (!listeners[chainId]) return;\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call);\r\n          if (!listeners[chainId][callKey]) return;\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return;\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch];\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--;\r\n          }\r\n        });\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          };\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return;\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) return; // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber;\r\n          current.data = null;\r\n          current.blockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey];\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return;\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        };\r\n      });\r\n    }),\r\n);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nimport application from \"./application/reducer\";\r\nimport { updateVersion } from \"./global/actions\";\r\nimport user from \"./user/reducer\";\r\nimport transactions from \"./transactions/reducer\";\r\nimport multicall from \"./multicall/reducer\";\r\n\r\nimport appReducer from \"../store/slices/game-slice\";\r\nimport fightReducer from \"../store/slices/play-slice\";\r\nimport stackReducer from \"../store/slices/staking-slice\";\r\nimport nftReducer from \"../store/slices/NFt-slice\";\r\n  \r\nconst PERSISTED_KEYS: string[] = [\"user\", \"transactions\", \"lists\"];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    multicall,\r\n    app: appReducer,\r\n    fight: fightReducer,\r\n    stack: stackReducer,\r\n    nft: nftReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n});\r\n\r\nstore.dispatch(updateVersion());\r\n\r\nexport default store;\r\n\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"components/Header\";\r\nimport Home from \"pages/Home\";\r\nimport Stake from \"pages/Stake\";\r\nimport { Provider } from \"react-redux\";\r\nimport store, { AppDispatch} from \"./state\";\r\nimport { loadGameDetails } from \"./store/slices/game-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useWeb3Context } from \"./hooks\";\r\nimport socketIO from 'socket.io-client';\r\n\r\n// import MiningPoints from \"pages/MiningPoints\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\r\n  const [walletChecked, setWalletChecked] = useState(false);\r\n\r\n  async function LoadDetails(whichDetails: string) {\r\n    let loadProvider = provider;\r\n\r\n    if (whichDetails === \"app\") {\r\n      loadApp(loadProvider);\r\n    }\r\n  }\r\n\r\n  const loadApp = useCallback(\r\n    loadProvider => {\r\n      dispatch(loadGameDetails({ networkID: chainID, provider: loadProvider}));\r\n    },\r\n    [connected],\r\n  );\r\n  useEffect(() => {\r\n    if (hasCachedProvider()) {\r\n      connect().then(() => {\r\n        setWalletChecked(true);\r\n      });\r\n    } else {\r\n      setWalletChecked(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      LoadDetails(\"app\");\r\n    }\r\n  }, [connected]);\r\n\r\n  useEffect(() => {\r\n    if (walletChecked) {\r\n      LoadDetails(\"app\");\r\n    }\r\n  }, [walletChecked]);\r\n\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/stake\" component={Stake} />\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport {\r\n  ThemeProvider as MUIThemeProvider,\r\n  createTheme,\r\n  StyledEngineProvider,\r\n} from \"@mui/material/styles\";\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function ThemeProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n      common: {\r\n        black: \"#16151a\",\r\n      },\r\n      primary: {\r\n        light: \"#62ceec\",\r\n        main: \"#6164ff\",\r\n        dark: \"#2847EE\",\r\n      },\r\n      secondary: {\r\n        light: \"#f59b2f\",\r\n        main: \"#ff7523\",\r\n        dark: \"#3f1d3f\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider);\r\n  library.pollingInterval = 15000;\r\n  return library;\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import { useCallback, useState } from 'react';\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document;\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\r\n  // const listener = useCallback(() => {\r\n  //   setFocused(isWindowVisible());\r\n  // }, [setFocused]);\r\n\r\n  // useEffect(() => {\r\n  //   if (!VISIBILITY_STATE_SUPPORTED) return undefined;\r\n\r\n  //   document.addEventListener('visibilitychange', listener);\r\n  //   return () => {\r\n  //     document.removeEventListener('visibilitychange', listener);\r\n  //   };\r\n  // }, [listener]);\r\n\r\n  return focused;\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\r\nimport { updateBlockNumber } from './actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React();\r\n  const dispatch = useDispatch();\r\n\r\n  const windowVisible = useIsWindowVisible();\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  });\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((state) => {\r\n        if (chainId === state.chainId) {\r\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\r\n          if (blockNumber - state.blockNumber <= 10) {\r\n            return { chainId, blockNumber: state.blockNumber };\r\n          }\r\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\r\n        }\r\n        return state;\r\n      });\r\n    },\r\n    [chainId, setState],\r\n  );\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined;\r\n\r\n    setState({ chainId, blockNumber: null });\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error));\r\n\r\n    library.on('block', blockNumberCallback);\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback);\r\n    };\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\r\n\r\n  const debouncedState = useDebounce(state, 100);\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }));\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\r\n\r\n  return null;\r\n}\r\n","import { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport MULTICALL_ABI from \"./abi.json\";\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  // TODO: TRON: mainnet multicall contract address\r\n  [ChainId.MAINNET]: \"0xD3573a8728A49512A1485D63180Ed5b095e11D5C\",\r\n  [ChainId.NILE]: \"0x04A6730FC23a5f2C3d94F7C7aCb4F92Eab8282c2\",\r\n  [ChainId.SHASTA]: \"0x9037ae53c89147e009d26f7547143544be00f984\",\r\n};\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS };\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { AddressZero } from \"@ethersproject/constants\";\r\nimport { JsonRpcSigner, Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { ethAddress, remove0xPrefix } from \"@intercroneswap/java-tron-provider\";\r\nimport { getAddress } from \"ethers/lib/utils\";\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  11111: \"\",\r\n  1: \"shasta.\",\r\n  201910292: \"nile.\",\r\n};\r\n\r\nexport function getEtherscanLink(\r\n  chainId: ChainId,\r\n  data: string,\r\n  type: \"transaction\" | \"token\" | \"address\" | \"block\"\r\n): string {\r\n  const prefix = `https://${\r\n    ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[11111]\r\n  }tronscan.org`;\r\n\r\n  switch (type) {\r\n    case \"transaction\": {\r\n      return `${prefix}/#/transaction/${remove0xPrefix(data)}`;\r\n    }\r\n    case \"token\": {\r\n      return `${prefix}/#/token20/${ethAddress.toTron(data)}`;\r\n    }\r\n    case \"address\":\r\n    default: {\r\n      return `${prefix}/#/address/${ethAddress.toTron(data)}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address);\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  const tronAddress = ethAddress.toTron(parsed);\r\n  return `${tronAddress.substring(0, chars)}...${tronAddress.substr(-chars)}`;\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(\r\n  library: Web3Provider,\r\n  account: string\r\n): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(\r\n  library: Web3Provider,\r\n  account?: string\r\n): any {\r\n  // return account ? library?.trx.sign : library?.trx\r\n  return account ? getSigner(library, account) : library;\r\n}\r\n\r\n// account is optional\r\nexport function getContract(\r\n  address: string,\r\n  ABI: any,\r\n  library: Web3Provider,\r\n  account?: string\r\n): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  return new Contract(\r\n    address,\r\n    ABI,\r\n    getProviderOrSigner(library, account) as any\r\n  );\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useMemo } from \"react\";\r\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\r\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\r\nimport { getContract } from \"../utils\";\r\nimport { useActiveWeb3React } from \"./index\";\r\n\r\n// returns null on errors\r\nfunction useContract(\r\n  address: string | undefined,\r\n  ABI: any,\r\n  withSignerIfPossible = true\r\n): Contract | null {\r\n  const { library, account } = useActiveWeb3React();\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null;\r\n    try {\r\n      return getContract(\r\n        address,\r\n        ABI,\r\n        library,\r\n        withSignerIfPossible && account ? account : undefined\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to get contract\", error);\r\n      return null;\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account]);\r\n}\r\n\r\nexport function useENSRegistrarContract(\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  let address: string | undefined;\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      // TODO(tron): shasta TNS ?\r\n      case ChainId.MAINNET:\r\n        address = \"0x99fb68F0672E3E16AbB071342eF03355dfcb1797\";\r\n        break;\r\n      // TODO\r\n      case ChainId.NILE:\r\n        address = \"0xD2577ec90C6Fb23EC208B27609867E30D69bDc89\";\r\n        break;\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useENSResolverContract(\r\n  address: string | undefined,\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(\r\n    chainId && MULTICALL_NETWORKS[chainId],\r\n    MULTICALL_ABI,\r\n    false\r\n  );\r\n}\r\n","function wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)));\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled');\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false;\r\n  let rejectCancelled: (error: Error) => void;\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject;\r\n    while (true) {\r\n      let result: T;\r\n      try {\r\n        result = await fn();\r\n        if (!completed) {\r\n          resolve(result);\r\n          completed = true;\r\n        }\r\n        break;\r\n      } catch (error) {\r\n        if (completed) {\r\n          break;\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error);\r\n          completed = true;\r\n          break;\r\n        }\r\n        n--;\r\n      }\r\n      await waitRandom(minWait, maxWait);\r\n    }\r\n  });\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return;\r\n      completed = true;\r\n      rejectCancelled(new CancelledError());\r\n    },\r\n  };\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal);\r\n  return openModal === modal;\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS);\r\n}\r\n\r\nexport function useShowClaimPopup(): boolean {\r\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleShowClaimPopup(): () => void {\r\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleSelfClaimModal(): () => void {\r\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\r\n}\r\n\r\nexport function useToggleDelegateModal(): () => void {\r\n  return useToggleModal(ApplicationModal.DELEGATE);\r\n}\r\n\r\nexport function useToggleVoteModal(): () => void {\r\n  return useToggleModal(ApplicationModal.VOTE);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList);\r\n  return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n","import { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useMulticallContract } from '../../hooks/useContract';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport chunkArray from '../../utils/chunkArray';\r\nimport { CancelledError, retry, RetryableError } from '../../utils/retry';\r\nimport { useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 50;\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber);\r\n\r\n  let resultsBlockNumber, returnData;\r\n  try {\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData]),\r\n    );\r\n  } catch (error) {\r\n    console.debug('Failed to fetch chunk inside retry', error);\r\n    throw error;\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`);\r\n    throw new RetryableError('Fetched for old block number');\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() };\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {};\r\n  const listeners = allListeners[chainId];\r\n  if (!listeners) return {};\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey];\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key);\r\n        if (blocksPerFetch <= 0) return false;\r\n        return keyListeners[blocksPerFetch] > 0;\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current));\r\n      }, Infinity);\r\n    return memo;\r\n  }, {});\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param latestBlockNumber the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): string[] {\r\n  if (!chainId || !latestBlockNumber) return [];\r\n  const results = callResults[chainId];\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys);\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey];\r\n\r\n    const data = callResults[chainId][callKey];\r\n    // no data, must fetch\r\n    if (!data) return true;\r\n\r\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1);\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false;\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber;\r\n  });\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const state = useSelector<AppState, AppState['multicall']>((state) => state.multicall);\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100);\r\n  const latestBlockNumber = useBlockNumber();\r\n  const { chainId } = useActiveWeb3React();\r\n  const multicallContract = useMulticallContract();\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>();\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId);\r\n  }, [debouncedListeners, chainId]);\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber);\r\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber]);\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!latestBlockNumber || !chainId || !multicallContract) return;\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys);\r\n    if (outdatedCallKeys.length === 0) return;\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key));\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE);\r\n\r\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\r\n      cancellations.current?.cancellations?.forEach((c) => c());\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: latestBlockNumber,\r\n      }),\r\n    );\r\n\r\n    cancellations.current = {\r\n      blockNumber: latestBlockNumber,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\r\n          n: 2,\r\n          minWait: 2500,\r\n          maxWait: 7500,\r\n        });\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber };\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls\r\n              .slice(0, index)\r\n              .reduce<number>((memo, curr) => memo + curr.length, 0);\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length;\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null;\r\n                    return memo;\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            );\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber);\r\n              return;\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error);\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: latestBlockNumber,\r\n              }),\r\n            );\r\n          });\r\n        return cancel;\r\n      }),\r\n    };\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber]);\r\n\r\n  return null;\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\r\n  if (items.length <= maxChunkSize) return [items];\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize);\r\n  const chunkSize = Math.ceil(items.length / numChunks);\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize));\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { checkedTransaction, finalizeTransaction } from './actions';\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: unknown; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false;\r\n  if (!tx.lastCheckedBlockNumber) return true;\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\r\n  if (blocksSinceCheck < 1) return false;\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9;\r\n  } else if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2;\r\n  } else {\r\n    // otherwise every block\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { chainId, library } = useActiveWeb3React();\r\n\r\n  const lastBlockNumber = useBlockNumber();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  const transactions = chainId ? state[chainId] ?? {} : {};\r\n\r\n  // show popup on confirm\r\n  const addPopup = useAddPopup();\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return;\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              );\r\n\r\n              addPopup(\r\n                {\r\n                  txn: {\r\n                    hash,\r\n                    success: receipt.status === 1,\r\n                    summary: transactions[hash]?.summary,\r\n                  },\r\n                },\r\n                hash,\r\n              );\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }));\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error);\r\n          });\r\n      });\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\r\n\r\n  return null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../index';\r\nimport { updateMatchesDarkMode } from './actions';\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  // keep dark mode in sync with the system\r\n  useEffect(() => {\r\n    const darkHandler = (match: MediaQueryListEvent) => {\r\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }));\r\n    };\r\n\r\n    const match = window?.matchMedia('(prefers-color-scheme: dark)');\r\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }));\r\n\r\n    if (match?.addListener) {\r\n      match?.addListener(darkHandler);\r\n    } else if (match?.addEventListener) {\r\n      match?.addEventListener('change', darkHandler);\r\n    }\r\n\r\n    return () => {\r\n      if (match?.removeListener) {\r\n        match?.removeListener(darkHandler);\r\n      } else if (match?.removeEventListener) {\r\n        match?.removeEventListener('change', darkHandler);\r\n      }\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return null;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./state\";\r\nimport ThemeProvider from \"./theme\";\r\nimport getLibrary from \"./utils/getLibrary\";\r\nimport ApplicationUpdater from \"./state/application/updater\";\r\nimport MulticallUpdater from \"./state/multicall/updater\";\r\nimport TransactionUpdater from \"./state/transactions/updater\";\r\nimport UserUpdater from \"./state/user/updater\";\r\nimport { NetworkContextName } from \"./constants\";\r\nimport { Web3ContextProvider } from \"./hooks\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <UserUpdater />\r\n      <ApplicationUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <Web3ReactProvider getLibrary={getLibrary}>\r\n    <Web3ProviderNetwork getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeProvider>\r\n          <HashRouter>\r\n            <Updaters />\r\n            <Web3ContextProvider>\r\n              <App />\r\n            </Web3ContextProvider>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </Web3ProviderNetwork>\r\n  </Web3ReactProvider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["assets/images/discord-brands.svg","assets/images/ban1.jpg","assets/images/ban2.jpg","assets/images sync /^/.*$","assets/images/logo.png","assets/images/tronlink.svg","connectors/injected-tron-connector/tronlink-abis.ts","connectors/injected-tron-connector/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/blockchain.ts","constants/addresses.ts","constants/index.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","hooks/index.ts","state/application/actions.ts","state/application/hooks.ts","state/multicall/actions.ts","state/multicall/hooks.ts","utils/index.ts","constants/multicall/index.ts","hooks/useContract.ts","hooks/useENSName.ts","hooks/useDebounce.ts","utils/isZero.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","components/Identicon/index.tsx","components/Loader/index.tsx","components/AccountDetails/Copy.tsx","hooks/useCopyClipboard.ts","components/AccountDetails/Transaction.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/PendingView.tsx","hooks/usePrevious.ts","components/WalletModal/index.tsx","components/Web3Status/index.tsx","components/Header/index.tsx","pages/Home/components/Banner/index.tsx","store/slices/messages-slice.ts","helpers/metamask-error-wrap.ts","store/slices/pending-txns-slice.ts","helpers/set-all.ts","store/slices/play-slice.ts","store/slices/walletInfo-slice.ts","pages/Home/components/Jackpot/index.tsx","pages/Home/components/Role/index.tsx","pages/Home/components/Winner/index.tsx","store/slices/NFt-slice.ts","store/slices/Nftinfo-slice.ts","store/slices/game-slice.ts","pages/Home/components/CurrentBattle/index.tsx","pages/Home/components/FinishedBattle/index.tsx","pages/Home/index.tsx","store/slices/staking-slice.ts","pages/Stake/components/MeowToken/index.tsx","pages/Stake/components/ChestInfo/index.tsx","pages/Stake/index.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/multicall/reducer.ts","state/index.ts","App.tsx","theme/index.tsx","utils/getLibrary.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","abis","ERC20_ABI","IntercroneswapV1Router02ABI","InjectedTronConnector","kwargs","provider","getParamTypes","params","type","components","join","signs","web3","Web3","providers","WebsocketProvider","fn","sign","eth","abi","encodeFunctionSignature","name","inputs","getFunctionSelector","err","createTronLinkProvider","network","process","tronApiUrl","functionSignatures","args","this","request","res","requestProvider","method","accounts","account","chainId","AbstractConnector","NetworkConnector","createJavaTronProvider","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","urls","Networks","injected","supportedChainIds","DEFAULD_NETWORK","GOERLI","NILE_TESTNET","MEOW_ADDRESS","NFT_ADDRESS","MEOWTOKEN_ADDRESS","getAddresses","networkID","SUPPORTED_WALLETS","TRONLINK","connector","iconName","description","href","color","NetworkContextName","messages","switchRequest","window","ethereum","swithNetwork","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","onChainProvider","useMemo","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","AVAX","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","Provider","value","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","useBlockNumber","useSelector","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useDispatch","useWalletModalToggle","WALLET","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","data","useCallsData","calls","callResults","multicall","serializedCallKeys","JSON","stringify","filter","c","Boolean","sort","useEffect","callKeys","parse","length","key","callKey","pcs","split","parseCallKey","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleCallResult","contract","methodName","interface","getFunction","encodeFunctionData","isAddress","ETHERSCAN_PREFIXES","getEtherscanLink","prefix","remove0xPrefix","ethAddress","toTron","shortenAddress","chars","parsed","tronAddress","substring","substr","ChainId","MAINNET","NILE","SHASTA","useContract","ABI","withSignerIfPossible","library","AddressZero","Contract","connectUnchecked","getProviderOrSigner","getContract","useENSName","debouncedAddress","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","ensNodeArgument","namehash","toLowerCase","registrarContract","ENS_ABI","useENSRegistrarContract","resolverAddress","resolverAddressResult","resolverContract","ENS_PUBLIC_RESOLVER_ABI","useENSResolverContract","changed","ENSName","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","Identicon","ref","useRef","current","innerHTML","appendChild","Jazzicon","slice","Box","sx","height","width","borderRadius","Loader","stroke","viewBox","fill","xmlns","className","d","strokeWidth","strokeLinecap","strokeLinejoin","CopyHelper","props","timeout","isCopied","setIsCopied","staticCopy","text","didCopy","copy","hide","useCopyClipboard","setCopied","onClick","toCopy","size","Typography","component","ml","fontSize","Transaction","hash","allTransactions","summary","pending","receipt","status","Link","target","rel","display","justifyContent","alignItems","textDecoration","p","renderTransactions","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","openOptions","getStatusIcon","mr","clearAllTransactionsCallback","IconButton","k","formatConnectorName","Button","variant","lineHeight","mb","textTransform","Option","clickable","header","subheader","icon","backgroundColor","borderColor","cursor","border","mt","src","alt","PendingView","setPendingError","tryActivation","option","require","default","usePrevious","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","useWeb3React","activate","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","walletModalOpen","previousAccount","activePrevious","connectorPrevious","ReactGA","event","category","action","label","catch","UnsupportedChainIdError","Dialog","onClose","maxWidth","xs","sm","md","isMobile","mobileOnly","newTransactionsFirst","a","b","StatusIcon","Web3StatusInner","values","hasPendingTransactions","Web3Status","sortedRecentTransactions","confirmed","menuLists","link","Header","history","useHistory","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","Container","Toolbar","disableGutters","columnGap","fontFamily","DiscordIcon","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","list","push","Banner","BannerImage1","BannerImage2","createMessage","severity","message","messagesSlice","createSlice","initialState","reducers","payload","info","warning","close","actions","metamaskErrorWrap","includes","trim","pendingTxnsSlice","fetchPendingTxns","clearPendingTxn","find","txnHash","splice","setAll","properties","forEach","EnterRoom","createAsyncThunk","tokenId","fightRoom","whichroom","url","gamePrice","tronWeb","defaultAddress","base58","at","toHex","meowContract","enterRoom","send","feeLimit","callValue","enterTx","trx","getTransaction","transaction","ret","contractRet","Promise","randoms","random_tmp","toNumber","axios","post","widrawNFT","get","usersData","claimNFT","ownNfts","claimMoney","claimAmount","ClaimFight","waitingRandom","random1","random2","claimFight","firstrandom","secondrandom","flag","resultData","jackpotAmount","Math","pow","firstaddress","totalStake","stakeAmount","alert","setJackpot","winnerData","firstId","winCount","firstNFT","secondNFT","fightSlice","fetchAppSuccess","extraReducers","builder","addCase","fulfilled","rejected","walletInfo","createSelector","fight","tmpData","nftCount","trxAmount","nftSlice","Jackpot","nfts","JackpotAmount","app","meowCount","contractNFTs","wallet","widrawAmount","meta","requestStatus","getAvailableData","paddingY","py","px","textAlign","mx","flexWrap","pb","paddingX","marginTop","onWidrawNFT","onClaimMoney","xl","left","bottom","Role","randomData","index","randomNumber1","randomNumber2","Winner","Table","TableBody","TableRow","TableCell","borderBottom","padding","approveNFT","nftContract","approve","loadNftAllowance","tokenIds","allowtmp","all","getApproved","allows","allow","allowances","loadNftDetails","nft","nftids","nfturls","nfturis","tokenOwnerLength","contractNFTCount","balanceOf","nft_counts","min","tokenOfOwnerByIndex","tmptokenID","toDecimal","tokenURI","tokenOwner","loadGameDetails","TronWeb","meowTokenContract","gameData","gameprice","toString","gameSlice","style","top","transform","lg","bgcolor","boxShadow","overflowY","CurrentBattle","firRandomData","secRandomData","allowFlg","isLoading","Datas","roomnum","firstNFt","secondNFt","secondaddress","fightroom","whichfight","firstRandom","secondRandom","whichFight","openState","setOpenState","claimState","setClaimState","setWhichroom","setWhichfight","setWaitingRandom","decide","setDecide","socket","io","getDate","date","year","getFullYear","month","getMonth","day","hour","getHours","minute","getMinutes","second","getSeconds","getGameData","getApprove","fightRoomnum","emit","delete","flexDirection","minWidth","disabled","my","marginRight","Modal","m","Skeleton","onEnterRoom","onClaimFight","FinishedBattle","nftUrl1","address1","nftUrl2","pt","address2","Home","stackingMeow","amount","addresses","provider1","ethers","signer","meowContractABI","stackamount","stake","wait","unstackingMeow","unstackamount","unStake","stakeSlice","MeowToken","stack","stackAmount","changesStack","unstackAmount","changeUnstack","setWalletChecked","marginX","pl","opacity","TextField","required","onChange","ChestInfo","tp","Stake","createReducer","popupList","max","content","removeAfterMs","popup","concat","nanoid","show","updateVersion","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning","currentTimestamp","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","now","from","approval","claim","txs","lastCheckedBlockNumber","confirmedTime","blocksPerFetch","listeners","callListeners","fetchingBlockNumber","results","store","configureStore","reducer","user","appReducer","fightReducer","stackReducer","nftReducer","nftInfoReducer","walletInfoReducer","middleware","getDefaultMiddleware","serializableCheck","preloadedState","load","states","App","loadData","exact","path","to","ThemeProvider","theme","createTheme","palette","mode","common","black","primary","light","main","dark","secondary","StyledEngineProvider","injectFirst","CssBaseline","getLibrary","pollingInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ProviderNetwork","createWeb3ReactRoot","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef8218e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/discord-brands.3e07cf0d.svg\";","export default __webpack_public_path__ + \"static/media/ban1.5cd04bdb.jpg\";","export default __webpack_public_path__ + \"static/media/ban2.ec1990ce.jpg\";","var map = {\n\t\"./ban1.jpg\": 303,\n\t\"./ban2.jpg\": 304,\n\t\"./discord-brands.svg\": 297,\n\t\"./logo.png\": 913,\n\t\"./tronlink.svg\": 914\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 449;","export default __webpack_public_path__ + \"static/media/logo.2219dfc0.png\";","export default __webpack_public_path__ + \"static/media/tronlink.d4b98412.svg\";","// all abis...\r\nimport { abi as IntercroneswapV1Router02ABI } from \"@intercroneswap/v2-periphery/build/IIswapV1Router02.json\";\r\n\r\nimport ERC20_ABI from \"../../constants/abis/erc20.json\";\r\n\r\nexport const abis = [...ERC20_ABI, ...IntercroneswapV1Router02ABI];\r\n","import createTronLinkProvider from '@intercroneswap/tronlink-provider';\r\nimport Web3 from 'web3';\r\nimport { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { abis } from './tronlink-abis';\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super();\r\n    this.name = this.constructor.name;\r\n    this.message = 'The user rejected the request.';\r\n  }\r\n}\r\n\r\nexport class InjectedTronConnector extends AbstractConnector {\r\n  public provider: any;\r\n\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs);\r\n\r\n    const getFunctionSelector = (abi: any) => {\r\n      return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\r\n    };\r\n    const getParamTypes = (params: any) => {\r\n      return params.map(({ type, components }: { type: any; components: any }) => {\r\n        if (type === 'tuple[]') {\r\n          return (\r\n            '(' +\r\n            components\r\n              .map(({ type }: { type: any }) => {\r\n                return type;\r\n              })\r\n              .join(',') +\r\n            ')[]'\r\n          );\r\n        }\r\n        return type;\r\n      });\r\n    };\r\n    const signs: any = {};\r\n    const web3 = new Web3(\r\n      new Web3.providers.WebsocketProvider('wss://nile.infura.io/ws/v3/7f14d2eb070c41029d687df66b286a09'),\r\n    );\r\n    abis.map((fn: any) => {\r\n      try {\r\n        const sign = web3.eth.abi.encodeFunctionSignature({\r\n          name: fn.name,\r\n          type: fn.type,\r\n          inputs: fn.inputs,\r\n        });\r\n        signs[sign] = getFunctionSelector(fn);\r\n      } catch (err) {\r\n      }\r\n    });\r\n    // TODO(tron): should auto-use same network as one selected in tronlink!\r\n    this.provider = createTronLinkProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n      functionSignatures: abis,\r\n      signs,\r\n    });\r\n    /*\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n    */\r\n  }\r\n\r\n  async requestProvider(args: any) {\r\n    const res = await this.provider.request(args);\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return { provider: this.provider, account };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    const chainId = await this.requestProvider({ method: 'eth_chainId' });\r\n    return chainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return account;\r\n  }\r\n\r\n  public deactivate() {\r\n    return true;\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    // TODO: check if tronlink unlocked?\r\n    return true;\r\n  }\r\n}\r\n","import createJavaTronProvider from '@intercroneswap/java-tron-provider';\r\n\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nexport class NetworkConnector extends InjectedTronConnector {\r\n  constructor(kwargs: any) {\r\n    super(kwargs);\r\n    this.provider = createJavaTronProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n    });\r\n  }\r\n\r\n  async requestProvider(...args: any[]) {\r\n    const res = await this.provider.request(...args);\r\n    // TODO: wrap error with throw new NoEthereumProviderError()?\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<any> {\r\n    return { provider: this.provider };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return null;\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nimport { NetworkConnector } from './NetworkConnector';\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '11111');\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\r\n}\r\n\r\nexport const injected = new InjectedTronConnector({\r\n  supportedChainIds: [11111, 1],\r\n});\r\n","export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n  // AVAX = 43114,\r\n  AVAX = 43113, // for test\r\n  GOERLI = 5,\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.GOERLI;\r\n","import { Networks } from \"./blockchain\";\r\n\r\nexport const NILE_TESTNET = {\r\n  MEOW_ADDRESS: \"TWLq5eq5MeKSuzDagnrTSGvAujcGxSpshD\", //\r\n  NFT_ADDRESS: \"TNmfgzNsuD4Xdv9oAFs3Nk6nJQdq826WL4\",\r\n  MEOWTOKEN_ADDRESS: \"TJRyb1Rg4BAJCMd8cU5aCGfiTPxpY8FT1M\",\r\n};\r\n\r\nexport const getAddresses = (networkID: number) => {\r\n  if (networkID === Networks.GOERLI) return NILE_TESTNET;\r\n\r\n  throw Error(\"Network don't support\");\r\n};\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\n\r\nimport { injected } from \"../connectors\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector;\r\n  name: string;\r\n  iconName: string;\r\n  description: string;\r\n  href: string | null;\r\n  color: string;\r\n  primary?: true;\r\n  mobile?: true;\r\n  mobileOnly?: true;\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  TRONLINK: {\r\n    connector: injected,\r\n    name: \"TronLink\",\r\n    iconName: \"tronlink.svg\",\r\n    description: \"Easy-to-use browser extension.\",\r\n    href: null,\r\n    color: \"#48489b\",\r\n  },\r\n};\r\n\r\nexport const NetworkContextName = \"NETWORK\";\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\r\n\r\nexport * from \"./blockchain\";\r\nexport * from \"./addresses\";","export const messages = {\r\n  please_connect:\r\n    \"Please connect your wallet to the Ether network to use Warchest.\",\r\n  please_connect_wallet: \"Please connect your wallet.\",\r\n  try_mint_more: (value: string) =>\r\n    `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} KANDY.`,\r\n  before_minting: \"Before minting, enter a value.\",\r\n  existing_mint:\r\n    \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\r\n  before_stake: \"Before staking, enter a value.\",\r\n  before_unstake: \"Before un staking, enter a value.\",\r\n  tx_successfully_send: \"Your transaction was successfully sent\",\r\n  your_balance_updated: \"Your balance was successfully updated\",\r\n  nothing_to_claim: \"You have nothing to claim\",\r\n  something_wrong: \"Something went wrong\",\r\n  switch_to_avalanche: \"Switch to the Avalanche network?\",\r\n  slippage_too_small: \"Slippage too small\",\r\n  slippage_too_big: \"Slippage too big\",\r\n  your_balance_update_soon: \"Your balance will update soon\",\r\n  before_wrap: \"Before wraping, enter a value.\",\r\n  before_unwrap: \"Before un wraping, enter a value.\",\r\n};\r\n","const switchRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0xa86a\" }],\r\n    });\r\n};\r\n\r\nconst addChainRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n            {\r\n                chainId: \"0xa86a\",\r\n                chainName: \"Avalanche Mainnet\",\r\n                rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\r\n                blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\r\n                nativeCurrency: {\r\n                    name: \"AVAX\",\r\n                    symbol: \"AVAX\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n};\r\n\r\nexport const swithNetwork = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await switchRequest();\r\n        } catch (error: any) {\r\n            if (error.code === 4902) {\r\n                try {\r\n                    await addChainRequest();\r\n                    await switchRequest();\r\n                } catch (addError) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\nimport { DEFAULD_NETWORK } from \"../../constants\";\r\nimport { Networks } from \"../../constants\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { swithNetwork } from \"../../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.AVAX]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.AVAX) {\r\n            setProvider(connectedProvider);\r\n        }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const checkWrongNetwork = async (): Promise<boolean> => {\r\n        if (providerChainID !== DEFAULD_NETWORK) {\r\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\r\n            if (shouldSwitch) {\r\n                await swithNetwork();\r\n                window.location.reload();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,\r\n            checkWrongNetwork,\r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n    return \"https://ethereum-goerli-rpc.allthatnode.com\";\r\n    return \"https://api.avax.network/ext/bc/C/rpc\";\r\n};\r\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useWeb3React as useWeb3ReactCore } from \"@web3-react/core\";\r\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\r\nimport { NetworkContextName } from \"../constants\";\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & {\r\n  chainId?: ChainId;\r\n} {\r\n  const context = useWeb3ReactCore<Web3Provider>();\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\r\n  return context.active ? context : contextNetwork;\r\n}\r\n\r\nexport * from \"./web3\";","import { createAction } from '@reduxjs/toolkit';\r\nimport { TokenList } from '@intercroneswap/token-lists';\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string;\r\n        success: boolean;\r\n        summary?: string;\r\n      };\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string;\r\n        oldList: TokenList;\r\n        newList: TokenList;\r\n        auto: boolean;\r\n      };\r\n    };\r\n\r\nexport enum ApplicationModal {\r\n  WALLET,\r\n  SETTINGS,\r\n  SELF_CLAIM,\r\n  ADDRESS_CLAIM,\r\n  CLAIM_POPUP,\r\n  MENU,\r\n  LEFTMENU,\r\n  DELEGATE,\r\n  VOTE,\r\n}\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\r\n  'application/updateBlockNumber',\r\n);\r\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal');\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'application/addPopup',\r\n);\r\nexport const removePopup = createAction<{ key: string }>('application/removePopup');\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal);\r\n  return openModal === modal;\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS);\r\n}\r\n\r\nexport function useShowClaimPopup(): boolean {\r\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleShowClaimPopup(): () => void {\r\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleSelfClaimModal(): () => void {\r\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\r\n}\r\n\r\nexport function useToggleDelegateModal(): () => void {\r\n  return useToggleModal(ApplicationModal.DELEGATE);\r\n}\r\n\r\nexport function useToggleVoteModal(): () => void {\r\n  return useToggleModal(ApplicationModal.VOTE);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList);\r\n  return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Call {\r\n  address: string;\r\n  callData: string;\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/;\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`);\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`);\r\n  }\r\n  return `${call.address}-${call.callData}`;\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-');\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`);\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  };\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number;\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n);\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n);\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n);\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number;\r\n  calls: Call[];\r\n  fetchingBlockNumber: number;\r\n}>('multicall/errorFetchingMulticallResults');\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number;\r\n  blockNumber: number;\r\n  results: {\r\n    [callKey: string]: string | null;\r\n  };\r\n}>('multicall/updateMulticallResults');\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi';\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions';\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any;\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber;\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>;\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined;\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1;\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  );\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean;\r\n  readonly data: string | undefined;\r\n  readonly blockNumber: number | undefined;\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined };\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n};\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React();\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  );\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  );\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys);\r\n    if (!chainId || callKeys.length === 0) return undefined;\r\n    const calls = callKeys.map((key) => parseCallKey(key));\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    );\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      );\r\n    };\r\n  }, [chainId, dispatch, options, serializedCallKeys]);\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT;\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)];\r\n        let data;\r\n        if (result?.data && result?.data !== '0x') {\r\n          data = result.data;\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber };\r\n      }),\r\n    [callResults, calls, chainId],\r\n  );\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean;\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined;\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean;\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean;\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean;\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false };\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false };\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE;\r\n  const { valid, data, blockNumber } = callResult;\r\n  if (!valid) return INVALID_CALL_STATE;\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE;\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE;\r\n  const success = data && data.length > 2;\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber;\r\n  let result: Result | undefined = undefined;\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data);\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data);\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result: result,\r\n    error: !success,\r\n  };\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            };\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n  const latestBlockNumber = useBlockNumber();\r\n  // console.log(fragment, calls, results, latestBlockNumber, \"multicall\")\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber));\r\n  }, [fragment, contract, results, latestBlockNumber]);\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName]);\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  );\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined;\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber));\r\n  }, [fragment, results, contractInterface, latestBlockNumber]);\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : [];\r\n  }, [contract, fragment, inputs]);\r\n\r\n  const result = useCallsData(calls, options)[0];\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber);\r\n  }, [result, contract, fragment, latestBlockNumber]);\r\n}\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { AddressZero } from \"@ethersproject/constants\";\r\nimport { JsonRpcSigner, Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { ethAddress, remove0xPrefix } from \"@intercroneswap/java-tron-provider\";\r\nimport { getAddress } from \"ethers/lib/utils\";\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  11111: \"\",\r\n  1: \"shasta.\",\r\n  201910292: \"nile.\",\r\n};\r\n\r\nexport function getEtherscanLink(\r\n  chainId: ChainId,\r\n  data: string,\r\n  type: \"transaction\" | \"token\" | \"address\" | \"block\"\r\n): string {\r\n  const prefix = `https://${\r\n    ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[11111]\r\n  }tronscan.org`;\r\n\r\n  switch (type) {\r\n    case \"transaction\": {\r\n      return `${prefix}/#/transaction/${remove0xPrefix(data)}`;\r\n    }\r\n    case \"token\": {\r\n      return `${prefix}/#/token20/${ethAddress.toTron(data)}`;\r\n    }\r\n    case \"address\":\r\n    default: {\r\n      return `${prefix}/#/address/${ethAddress.toTron(data)}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address);\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  const tronAddress = ethAddress.toTron(parsed);\r\n  return `${tronAddress.substring(0, chars)}...${tronAddress.substr(-chars)}`;\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(\r\n  library: Web3Provider,\r\n  account: string\r\n): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(\r\n  library: Web3Provider,\r\n  account?: string\r\n): any {\r\n  // return account ? library?.trx.sign : library?.trx\r\n  return account ? getSigner(library, account) : library;\r\n}\r\n\r\n// account is optional\r\nexport function getContract(\r\n  address: string,\r\n  ABI: any,\r\n  library: Web3Provider,\r\n  account?: string\r\n): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  return new Contract(\r\n    address,\r\n    ABI,\r\n    getProviderOrSigner(library, account) as any\r\n  );\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n","import { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport MULTICALL_ABI from \"./abi.json\";\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  // TODO: TRON: mainnet multicall contract address\r\n  [ChainId.MAINNET]: \"0xD3573a8728A49512A1485D63180Ed5b095e11D5C\",\r\n  [ChainId.NILE]: \"0x04A6730FC23a5f2C3d94F7C7aCb4F92Eab8282c2\",\r\n  [ChainId.SHASTA]: \"0x9037ae53c89147e009d26f7547143544be00f984\",\r\n};\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS };\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useMemo } from \"react\";\r\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\r\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\r\nimport { getContract } from \"../utils\";\r\nimport { useActiveWeb3React } from \"./index\";\r\n\r\n// returns null on errors\r\nfunction useContract(\r\n  address: string | undefined,\r\n  ABI: any,\r\n  withSignerIfPossible = true\r\n): Contract | null {\r\n  const { library, account } = useActiveWeb3React();\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null;\r\n    try {\r\n      return getContract(\r\n        address,\r\n        ABI,\r\n        library,\r\n        withSignerIfPossible && account ? account : undefined\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to get contract\", error);\r\n      return null;\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account]);\r\n}\r\n\r\nexport function useENSRegistrarContract(\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  let address: string | undefined;\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      // TODO(tron): shasta TNS ?\r\n      case ChainId.MAINNET:\r\n        address = \"0x99fb68F0672E3E16AbB071342eF03355dfcb1797\";\r\n        break;\r\n      // TODO\r\n      case ChainId.NILE:\r\n        address = \"0xD2577ec90C6Fb23EC208B27609867E30D69bDc89\";\r\n        break;\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useENSResolverContract(\r\n  address: string | undefined,\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(\r\n    chainId && MULTICALL_NETWORKS[chainId],\r\n    MULTICALL_ABI,\r\n    false\r\n  );\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\nimport { isAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\r\nimport useDebounce from './useDebounce';\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200);\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined];\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n    } catch (error) {\r\n      return [undefined];\r\n    }\r\n  }, [debouncedAddress]);\r\n  const registrarContract = useENSRegistrarContract(false);\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n  const resolverAddressResult = resolverAddress.result?.[0];\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  );\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n\r\n  const changed = debouncedAddress !== address;\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  };\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { ChainId } from '@intercroneswap/v2-sdk';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string;\r\n  from: string;\r\n  contractAddress: string;\r\n  transactionIndex: number;\r\n  blockHash: string;\r\n  transactionHash: string;\r\n  blockNumber: number;\r\n  status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  from: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  claim?: { recipient: string };\r\n  summary?: string;\r\n}>('transactions/addTransaction');\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions');\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    claim?: { recipient: string };\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false;\r\n\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\n// watch for submissions to claim\r\n// return null if not done loading, return undefined if not found\r\nexport function useUserHasSubmittedClaim(account?: string): {\r\n  claimSubmitted: boolean;\r\n  claimTxn: TransactionDetails | undefined;\r\n} {\r\n  const allTransactions = useAllTransactions();\r\n\r\n  // get the txn if it has been submitted\r\n  const claimTxn = useMemo(() => {\r\n    const txnIndex = Object.keys(allTransactions).find((hash) => {\r\n      const tx = allTransactions[hash];\r\n      return tx.claim && tx.claim.recipient === account;\r\n    });\r\n    return txnIndex && allTransactions[txnIndex] ? allTransactions[txnIndex] : undefined;\r\n  }, [account, allTransactions]);\r\n\r\n  return { claimSubmitted: Boolean(claimTxn), claimTxn };\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport Jazzicon from \"jazzicon\";\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n\r\n  const { account } = useActiveWeb3React();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"16px\",\r\n        width: \"16px\",\r\n        borderRadius: \"50%\",\r\n      }}\r\n      ref={ref as any}\r\n    />\r\n  );\r\n}\r\n","import \"./loader.scss\";\r\n\r\nexport default function Loader({ stroke }: { stroke?: string }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"styled-svg\"\r\n    >\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        stroke={stroke ? stroke : \"#fff\"}\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { CheckCircle, Copy } from \"react-feather\";\r\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\r\n\r\nexport default function CopyHelper(props: {\r\n  toCopy: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [isCopied, setCopied] = useCopyClipboard();\r\n\r\n  return (\r\n    <Box className=\"copy-icon\" onClick={() => setCopied(props.toCopy)}>\r\n      {isCopied ? (\r\n        <>\r\n          <CheckCircle size={\"16\"} />\r\n          <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n            Copied\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Copy size={\"16\"} />\r\n          {props.children}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import copy from 'copy-to-clipboard';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function useCopyClipboard(timeout = 500): [boolean, (toCopy: string) => void] {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const staticCopy = useCallback((text) => {\r\n    const didCopy = copy(text);\r\n    setIsCopied(didCopy);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, timeout);\r\n\r\n      return () => {\r\n        clearTimeout(hide);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [isCopied, setIsCopied, timeout]);\r\n\r\n  return [isCopied, staticCopy];\r\n}\r\n","import { CheckCircle, Triangle } from \"react-feather\";\r\nimport { Typography, Box, Link } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { getEtherscanLink } from \"utils\";\r\nimport { useAllTransactions } from \"state/transactions/hooks\";\r\n\r\nexport default function Transaction({ hash }: { hash: string }) {\r\n  const { chainId } = useActiveWeb3React();\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const tx = allTransactions?.[hash];\r\n  const summary = tx?.summary;\r\n  const pending = !tx?.receipt;\r\n  const success =\r\n    !pending &&\r\n    tx &&\r\n    (tx.receipt?.status === 1 || typeof tx.receipt?.status === \"undefined\");\r\n\r\n  if (!chainId) return null;\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        href={getEtherscanLink(chainId, hash, \"transaction\")}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          textDecoration: \"none\",\r\n          p: \"4px 0\",\r\n          \"&:hover\": {\r\n            textDecoration: \"underline\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography color=\"primary\" fontSize=\"14px\">\r\n          {summary ?? hash} ↗\r\n        </Typography>\r\n        <Box>\r\n          {pending ? (\r\n            <Loader stroke=\"#6164ff\" />\r\n          ) : success ? (\r\n            <CheckCircle size=\"16\" color=\"#2e7d32\" />\r\n          ) : (\r\n            <Triangle size=\"16\" color=\"#d32f2f\" />\r\n          )}\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ExternalLink as LinkIcon } from \"react-feather\";\r\nimport { Box, Typography, Button, Link, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { ethAddress } from \"@intercroneswap/java-tron-provider\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Copy from \"./Copy\";\r\nimport Transaction from \"./Transaction\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport { injected } from \"connectors\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { AppDispatch } from \"state\";\r\nimport { clearAllTransactions } from \"state/transactions/actions\";\r\nimport { shortenAddress, getEtherscanLink } from \"utils\";\r\n\r\nfunction renderTransactions(transactions: string[]) {\r\n  return (\r\n    <Box>\r\n      {transactions.map((hash, i) => {\r\n        return <Transaction key={i} hash={hash} />;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n\r\ninterface AccountDetailsProps {\r\n  toggleWalletModal: () => void;\r\n  pendingTransactions: string[];\r\n  confirmedTransactions: string[];\r\n  ENSName?: string;\r\n  openOptions: () => void;\r\n}\r\n\r\nexport default function AccountDetails({\r\n  toggleWalletModal,\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n  openOptions,\r\n}: AccountDetailsProps) {\r\n  const { chainId, account, connector } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  function formatConnectorName() {\r\n    const name = Object.keys(SUPPORTED_WALLETS).map(\r\n      (k) => SUPPORTED_WALLETS[k].name\r\n    )[0];\r\n    return (\r\n      <Typography color=\"#888d9b\" fontSize=\"14px\">\r\n        Connected with {name}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  function getStatusIcon() {\r\n    if (connector === injected) {\r\n      return (\r\n        <Box mr=\"8px\">\r\n          <Identicon />\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }));\r\n  }, [dispatch, chainId]);\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <Typography p=\"16px\">Account</Typography>\r\n        <Box p=\"0 16px 24px 16px\">\r\n          <Box className=\"info-card\" p=\"16px\">\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {formatConnectorName()}\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{ fontSize: \"12px\", lineHeight: \"1.5\", p: \"4px 6px\" }}\r\n                onClick={() => {\r\n                  openOptions();\r\n                }}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {ENSName ? (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\"> {ENSName}</Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\">\r\n                      {\" \"}\r\n                      {account && shortenAddress(account)}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {account && (\r\n                  <Copy toCopy={ethAddress.toTron(account)}>\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      Copy Address\r\n                    </Typography>\r\n                  </Copy>\r\n                )}\r\n                {chainId && account && (\r\n                  <Link\r\n                    className=\"address-link\"\r\n                    href={getEtherscanLink(\r\n                      chainId,\r\n                      ENSName ? ENSName : account,\r\n                      \"address\"\r\n                    )}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <LinkIcon size={16} />\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      View on Tronscan\r\n                    </Typography>\r\n                  </Link>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\r\n        <Box p=\"16px 24px\">\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            mb=\"16px\"\r\n          >\r\n            <Typography>Recent Transactions</Typography>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              onClick={clearAllTransactionsCallback}\r\n              sx={{ textTransform: \"lowercase\" }}\r\n            >\r\n              (clear all)\r\n            </Button>\r\n          </Box>\r\n          {renderTransactions(pendingTransactions)}\r\n          {renderTransactions(confirmedTransactions)}\r\n        </Box>\r\n      ) : (\r\n        <Typography p=\"16px 24px\">\r\n          Your transactions will appear here...\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nexport default function Option({\r\n  clickable = true,\r\n  onClick = null,\r\n  color,\r\n  header,\r\n  subheader = null,\r\n  icon,\r\n  active = false,\r\n  id,\r\n}: {\r\n  clickable?: boolean;\r\n  onClick?: null | (() => void);\r\n  color: string;\r\n  header: React.ReactNode;\r\n  subheader: React.ReactNode | null;\r\n  icon: string;\r\n  active?: boolean;\r\n  id: string;\r\n}) {\r\n  const content = (\r\n    <Box\r\n      className=\"option-card-clickable\"\r\n      onClick={onClick ? onClick : () => {}}\r\n      sx={{\r\n        backgroundColor: active ? \"#EDEEF2\" : \"#ffffff\",\r\n        borderColor: active ? \"transparent\" : \"#EDEEF2\",\r\n        \"&:hover\": {\r\n          cursor: clickable ? \"pointer\" : \"\",\r\n          border: clickable ? `1px solid #6164ff` : ``,\r\n        },\r\n      }}\r\n    >\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            color,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!active && <Box className=\"green-circle\" />}\r\n          {header}\r\n        </Box>\r\n        {subheader && (\r\n          <Typography fontSize=\"12px\" mt=\"10px\">\r\n            {subheader}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        component=\"img\"\r\n        src={icon}\r\n        alt={\"Icon\"}\r\n        sx={{ width: \"24px\", height: \"24px\" }}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  return content;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport Option from \"./Option\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\n\r\nexport default function PendingView({\r\n  connector,\r\n  error = false,\r\n  setPendingError,\r\n  tryActivation,\r\n}: {\r\n  connector?: AbstractConnector;\r\n  error?: boolean;\r\n  setPendingError: (error: boolean) => void;\r\n  tryActivation: (connector: AbstractConnector) => void;\r\n}) {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        mb=\"20px\"\r\n        sx={{\r\n          borderRadius: \"12px\",\r\n          border: `1px solid ${error ? \"#FF6871\" : \"#C3C5CB\"}`,\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }} p=\"16px\">\r\n          {error ? (\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography color=\"#FF6871\">Error connecting.</Typography>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: \"#ced0d9\",\r\n                  color: \"#000000\",\r\n                  lineHeight: \"1.5\",\r\n                  ml: \"8px\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#a8abb3\",\r\n                  },\r\n                }}\r\n                onClick={() => {\r\n                  setPendingError(false);\r\n                  connector && tryActivation(connector);\r\n                }}\r\n              >\r\n                Try Again\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Loader stroke=\"#000\" />\r\n              <Typography ml=\"8px\">Initializing...</Typography>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      {Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n        const option = SUPPORTED_WALLETS[key];\r\n        if (option.connector === connector) {\r\n          return (\r\n            <Option\r\n              id={`connect-${key}`}\r\n              key={key}\r\n              clickable={false}\r\n              color={option.color}\r\n              header={option.name}\r\n              subheader={option.description}\r\n              icon={require(\"../../assets/images/\" + option.iconName).default}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// modified from https://usehooks.com/usePrevious/\r\nexport default function usePrevious<T>(value: T) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef<T>();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dialog, Typography, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport ReactGA from \"react-ga\";\r\nimport AccountDetails from \"components/AccountDetails\";\r\nimport Option from \"./Option\";\r\nimport PendingView from \"./PendingView\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport usePrevious from \"hooks/usePrevious\";\r\nimport { ApplicationModal } from \"state/application/actions\";\r\nimport { useModalOpen, useWalletModalToggle } from \"state/application/hooks\";\r\n\r\nconst WALLET_VIEWS = {\r\n  OPTIONS: \"options\",\r\n  OPTIONS_SECONDARY: \"options_secondary\",\r\n  ACCOUNT: \"account\",\r\n  PENDING: \"pending\",\r\n};\r\n\r\nexport default function WalletModal({\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n}: {\r\n  pendingTransactions: string[]; // hashes of pending\r\n  confirmedTransactions: string[]; // hashes of confirmed\r\n  ENSName?: string;\r\n}) {\r\n  // important that these are destructed from the account-specific web3-react context\r\n  const { active, account, connector, activate, error } = useWeb3React();\r\n\r\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\r\n\r\n  const [pendingWallet, setPendingWallet] = useState<\r\n    AbstractConnector | undefined\r\n  >();\r\n\r\n  const [pendingError, setPendingError] = useState<boolean>();\r\n\r\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const previousAccount = usePrevious(account);\r\n\r\n  // close on connection, when logged out before\r\n  useEffect(() => {\r\n    if (account && !previousAccount && walletModalOpen) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\r\n\r\n  // always reset to account view\r\n  useEffect(() => {\r\n    if (walletModalOpen) {\r\n      setPendingError(false);\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [walletModalOpen]);\r\n\r\n  // close modal when a connection is successful\r\n  const activePrevious = usePrevious(active);\r\n  const connectorPrevious = usePrevious(connector);\r\n  useEffect(() => {\r\n    if (\r\n      walletModalOpen &&\r\n      ((active && !activePrevious) ||\r\n        (connector && connector !== connectorPrevious && !error))\r\n    ) {\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [\r\n    setWalletView,\r\n    active,\r\n    error,\r\n    connector,\r\n    walletModalOpen,\r\n    activePrevious,\r\n    connectorPrevious,\r\n  ]);\r\n\r\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\r\n    let name = \"\";\r\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      if (connector === SUPPORTED_WALLETS[key].connector) {\r\n        return (name = SUPPORTED_WALLETS[key].name);\r\n      }\r\n      return true;\r\n    });\r\n    // log selected wallet\r\n    ReactGA.event({\r\n      category: \"Wallet\",\r\n      action: \"Change Wallet\",\r\n      label: name,\r\n    });\r\n    setPendingWallet(connector); // set wallet for pending view\r\n    setWalletView(WALLET_VIEWS.PENDING);\r\n\r\n    connector &&\r\n      activate(connector, undefined, true).catch((error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          activate(connector); // a little janky...can't use setError because the connector isn't set\r\n        } else {\r\n          console.error(error);\r\n          setPendingError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  // get wallets user can switch too, depending on device/browser\r\n  function getOptions() {\r\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      const option = SUPPORTED_WALLETS[key];\r\n      return (\r\n        !isMobile &&\r\n        !option.mobileOnly && (\r\n          <Option\r\n            id={`connect-${key}`}\r\n            onClick={() => {\r\n              option.connector === connector\r\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\r\n                : !option.href && tryActivation(option.connector);\r\n            }}\r\n            key={key}\r\n            active={option.connector === connector}\r\n            color={option.color}\r\n            header={option.name}\r\n            subheader={null} //use option.descriptio to bring back multi-line\r\n            icon={require(\"../../assets/images/\" + option.iconName).default}\r\n          />\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  function getModalContent() {\r\n    if (error) {\r\n      return (\r\n        <Box>\r\n          <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography p=\"16px\">\r\n            {error instanceof UnsupportedChainIdError\r\n              ? \"Wrong Network\"\r\n              : \"Error connecting\"}\r\n          </Typography>\r\n          {error instanceof UnsupportedChainIdError ? (\r\n            <Typography\r\n              color=\"warning.main\"\r\n              sx={{ p: { xs: \"16px\", md: \"32px\" } }}\r\n            >\r\n              Please connect to the appropriate TRON network.\r\n            </Typography>\r\n          ) : (\r\n            <Typography color=\"error\" sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n              Error connecting. Try refreshing the page.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      );\r\n    }\r\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\r\n      return (\r\n        <AccountDetails\r\n          toggleWalletModal={toggleWalletModal}\r\n          pendingTransactions={pendingTransactions}\r\n          confirmedTransactions={confirmedTransactions}\r\n          ENSName={ENSName}\r\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\r\n          <Typography\r\n            color=\"primary.main\"\r\n            p=\"16px\"\r\n            sx={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setPendingError(false);\r\n              setWalletView(WALLET_VIEWS.ACCOUNT);\r\n            }}\r\n          >\r\n            Back\r\n          </Typography>\r\n        ) : (\r\n          <Typography p=\"16px\" sx={{ cursor: \"pointer\" }}>\r\n            Connect to a wallet\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n          {walletView === WALLET_VIEWS.PENDING ? (\r\n            <PendingView\r\n              connector={pendingWallet}\r\n              error={pendingError}\r\n              setPendingError={setPendingError}\r\n              tryActivation={tryActivation}\r\n            />\r\n          ) : (\r\n            <Box>{getOptions()}</Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={walletModalOpen}\r\n      onClose={toggleWalletModal}\r\n      sx={{\r\n        \"> .MuiDialog-container\": {\r\n          \"> .MuiPaper-root\": {\r\n            maxWidth: \"420px\",\r\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\" },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {getModalContent()}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useMemo } from \"react\";\r\nimport { Activity } from \"react-feather\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { injected } from \"connectors\";\r\nimport { NetworkContextName } from \"../../constants\";\r\nimport useENSName from \"hooks/useENSName\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\nimport {\r\n  isTransactionRecent,\r\n  useAllTransactions,\r\n} from \"state/transactions/hooks\";\r\nimport { TransactionDetails } from \"state/transactions/reducer\";\r\nimport { shortenAddress } from \"utils\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Loader from \"components/Loader\";\r\nimport WalletModal from \"components/WalletModal\";\r\nimport \"./web3-status.scss\";\r\n\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime;\r\n}\r\n\r\nconst SOCK = (\r\n  <span\r\n    role=\"img\"\r\n    aria-label=\"has socks emoji\"\r\n    style={{ marginTop: -4, marginBottom: -4 }}\r\n  >\r\n    🧦\r\n  </span>\r\n);\r\n\r\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\r\n  if (connector === injected) {\r\n    return <Identicon />;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Web3StatusInner() {\r\n  const { account, connector, error } = useWeb3React();\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  const hasPendingTransactions = !!pending.length;\r\n  const hasSocks = null;\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  if (account) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n        {hasPendingTransactions ? (\r\n          <>\r\n            <Typography mr=\"8px\">{pending?.length} Pending</Typography>{\" \"}\r\n            <Loader />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {hasSocks ? SOCK : null}\r\n            <Typography mr=\"8px\" ml=\"4px\">\r\n              {ENSName || shortenAddress(account)}\r\n            </Typography>\r\n          </>\r\n        )}\r\n        {!hasPendingTransactions && connector && (\r\n          <StatusIcon connector={connector} />\r\n        )}\r\n      </Button>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"error\" onClick={toggleWalletModal}>\r\n        <Activity className=\"network-icon\" />\r\n        <Typography ml=\"4px\">\r\n          {error instanceof UnsupportedChainIdError ? \"Wrong Network\" : \"Error\"}\r\n        </Typography>\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n          Connect Wallet\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Web3Status() {\r\n  const { active, account } = useWeb3React();\r\n  const contextNetwork = useWeb3React(NetworkContextName);\r\n\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n  const confirmed = sortedRecentTransactions\r\n    .filter((tx) => tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  // if (!contextNetwork.active && !active) {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Web3StatusInner />\r\n      <WalletModal\r\n        ENSName={ENSName ?? undefined}\r\n        pendingTransactions={pending}\r\n        confirmedTransactions={confirmed}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Link,\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nimport DiscordIcon from \"assets/images/discord-brands.svg\";\r\nimport \"./header.scss\";\r\n\r\nimport Web3Status from \"components/Web3Status\";\r\n\r\nconst menuLists = [\r\n  {\r\n    link: \"/play\",\r\n    text: \"Play War\",\r\n  },\r\n  {\r\n    link: \"/stake\",\r\n    text: \"Meow Staking\",\r\n  },\r\n  \r\n];\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleClickMenu = (link: string) => {\r\n    handleCloseUserMenu();\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      className=\"appbar\"\r\n      sx={{ backgroundColor: \"rgba(9,9,10,1)\" }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar\r\n          disableGutters\r\n          sx={{ justifyContent: \"space-between\", columnGap: \"8px\" }}\r\n        >\r\n          <Link href=\"/\" className=\"logo\" sx={{textDecoration: 'none'}}>\r\n            {/* <Box component=\"img\" src={LogoImage} alt=\"logo\" /> */}\r\n            <Typography fontFamily=\"Audiowide\" sx={{fontSize: {xs: '24px', sm: '36px', md: '40px'}}}>Catz Fight</Typography>\r\n          </Link>   \r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", columnGap: \"8px\" }}>\r\n            <Box\r\n              className=\"social-buttons\"\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              <Button\r\n                href=\"https://twitter.com/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"               \r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TwitterIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://t.me/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TelegramIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://discord.gg/warchest\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <Box component=\"img\" src={DiscordIcon} alt=\"\" />\r\n              </Button>\r\n            </Box>\r\n            <Web3Status />            \r\n            <Button\r\n              onClick={handleOpenUserMenu}\r\n              className=\"menu-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{\r\n                backgroundColor: 'rgba(101,230,255,0.12)', \r\n                '&: hover': {\r\n                  backgroundColor: 'rgba(101,230,255,0.15)'                                     \r\n                }          \r\n              }} \r\n            >\r\n              <MenuIcon sx={{ \r\n                color: 'rgba(101,230,255,0.9)',\r\n                '&: hover': {\r\n                  color: 'rgba(101,230,255,1)',\r\n                }\r\n              }} \r\n              />\r\n            </Button>            \r\n            <Menu              \r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n              sx={{\r\n                mt: \"45px\"                        \r\n              }} \r\n            >\r\n              <MenuItem component=\"a\" href=\"https://www.cryptomooncatz.com\"\r\n                sx={{\r\n                  backgroundColor: 'rgba(101,230,255,0.12)',\r\n                  color: 'rgba(101,230,255,0.9)'\r\n                }}>\r\n                Home\r\n              </MenuItem>\r\n              {menuLists.map((list, key) => (\r\n                <MenuItem key={key} \r\n                  sx={{\r\n                    backgroundColor: 'rgba(101,230,255,0.12)',\r\n                    color: 'rgba(101,230,255,0.9)'\r\n                  }}\r\n                onClick={() => handleClickMenu(list.link)}>\r\n                  {list.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Box } from \"@mui/material\";\r\nimport \"./banner.scss\";\r\nimport BannerImage1 from \"assets/images/ban1.jpg\";\r\nimport BannerImage2 from \"assets/images/ban2.jpg\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <>\r\n      <Box className=\"banner-container\">\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            width: { xs: \"120px\", sm: \"150px\" },\r\n            mr: { xs: 1, sm: 2, md: 3 },\r\n          }}\r\n          src={BannerImage1}\r\n          alt=\"Banner Image\"\r\n        />\r\n        <Box\r\n          component=\"img\"\r\n          sx={{ width: { xs: \"120px\", sm: \"150px\" } }}\r\n          src={BannerImage2}\r\n          alt=\"Banner Image\"\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { Color } from \"@material-ui/lab/Alert\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Message = IMessage & {\r\n    severity: Color;\r\n};\r\n\r\nexport interface MessagesState {\r\n    message: Message | null;\r\n}\r\n\r\ninterface IMessage {\r\n    text: string;\r\n    error?: any;\r\n}\r\n\r\n// Adds a message to the store\r\nconst createMessage = function (state: MessagesState, severity: Color, text: IMessage) {\r\n    const message: Message = {\r\n        severity,\r\n        ...text,\r\n    };\r\n    state.message = message;\r\n};\r\nconst initialState: MessagesState = {\r\n    message: null,\r\n};\r\nconst messagesSlice = createSlice({\r\n    name: \"messages\",\r\n    initialState,\r\n    reducers: {\r\n        // Creates an error message\r\n        error(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"error\", action.payload);\r\n        },\r\n        // Creates an information message\r\n        info(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"info\", action.payload);\r\n        },\r\n        warning(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"warning\", action.payload);\r\n        },\r\n        success(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"success\", action.payload);\r\n        },\r\n        // Closes a message\r\n        close(state) {\r\n            state.message = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { error, info, close, warning, success } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","import { Dispatch } from \"redux\";\r\nimport { error } from \"../store/slices/messages-slice\";\r\nimport { messages } from \"../constants/messages\";\r\n\r\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\r\n    let text = messages.something_wrong;\r\n\r\n    if (err.code && err.code === -32603) {\r\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\r\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\r\n        }\r\n\r\n        if (err.data && err.data.message) {\r\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\r\n            text = \"Insufficient balance to make a transaction\";\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\r\n            text = \"Bond too small\";\r\n        }\r\n    }\r\n\r\n    if (err.code && err.code === 4001) {\r\n        if (err.message.includes(\"User denied transaction signature\")) {\r\n            text = \"User denied transaction signature\";\r\n        }\r\n    }\r\n\r\n    return dispatch(error({ text, error: err }));\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IPendingTxn {\r\n  readonly txnHash: string;\r\n  readonly text: string;\r\n  readonly type: string;\r\n}\r\n\r\nconst initialState: Array<IPendingTxn> = [];\r\n\r\nconst pendingTxnsSlice = createSlice({\r\n  name: \"pendingTransactions\",\r\n  initialState,\r\n  reducers: {\r\n    fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\r\n      state.push(action.payload);\r\n    },\r\n    clearPendingTxn(state, action: PayloadAction<string>) {\r\n      const target = state.find((x) => x.txnHash === action.payload);\r\n      if (target) {\r\n        state.splice(state.indexOf(target), 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const getStakingTypeText = (action: string) => {\r\n  return action.toLowerCase() === \"stake\"\r\n    ? \"Staking KANDY\"\r\n    : \"Unstaking SKANDY\";\r\n};\r\n\r\nexport const getWrapingTypeText = (isWrap: boolean) => {\r\n  return isWrap ? \"Wrap SKANDY\" : \"Unwrap wSKANDY\";\r\n};\r\n\r\nexport const isPendingTxn = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string\r\n) => {\r\n  return pendingTransactions.map((x) => x.type).includes(type);\r\n};\r\n\r\nexport const txnButtonText = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string,\r\n  defaultText: string\r\n) => {\r\n  return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\r\n};\r\n\r\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\r\n\r\nexport default pendingTxnsSlice.reducer;\r\n","export const setAll = (state: any, properties: any) => {\r\n    const props = Object.keys(properties);\r\n    props.forEach(key => {\r\n        state[key] = properties[key];\r\n    });\r\n};\r\n","import {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { clearPendingTxn } from \"./pending-txns-slice\";\r\nimport axios from \"axios\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { NILE_TESTNET } from \"../../constants/addresses\";\r\nimport tronWeb from \"tronweb\";\r\n\r\ninterface IenterRoomMeow {\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: any;\r\n  gamePrice: number;\r\n}\r\n\r\ndeclare var window: any;\r\n\r\nexport const EnterRoom = createAsyncThunk(\r\n  \"enterRoom/enterRoomMeow\",\r\n\r\n  async (\r\n    {\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      address,\r\n      gamePrice,\r\n    }: IenterRoomMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    try {\r\n      enterTx = await meowContract\r\n        .enterRoom(tokenId, fightRoom)\r\n        .send({ feeLimit: 100000000, callValue: gamePrice });\r\n\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n      const random_tmp = ((await meowContract.randoms(fightRoom, 0).call())).toNumber();\r\n      await axios.post(\r\n        `http://localhost:8001/api/betting/create?roomnum=${whichroom}&firstNFT=${url}&firstaddress=${address}&fightRoom=${fightRoom}&firstRandom=${random_tmp}&firstId=${tokenId}`\r\n      );\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface IWidrawNFT {\r\n  address: any\r\n}\r\n\r\nexport const widrawNFT = createAsyncThunk(\r\n  \"widrawNFT/widrawNFT\",\r\n\r\n  async ({ address }: IWidrawNFT) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    let usersData: any;\r\n    await axios\r\n      .get(`http://localhost:8001/api/userinfo/find?address=${address}`)\r\n      .then((res) => {usersData = res.data;});\r\n\r\n    try {\r\n      enterTx = await meowContract.claimNFT(usersData.ownNfts).send({ feeLimit: 100000000 });\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n      await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=${0}&claimAmount=0&ownNfts=[-1]`);\r\n      return;\r\n    } catch (err: any) {\r\n      return;\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IClaimMoney {\r\n  address: any\r\n}\r\n\r\nexport const claimMoney = createAsyncThunk(\r\n  \"claimMoney/claimMoney\",\r\n\r\n  async ({ address }: IClaimMoney) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    let usersData: any;\r\n    await axios\r\n      .get(`http://localhost:8001/api/userinfo/find?address=${address}`)\r\n      .then((res) => {usersData = res.data;});\r\n\r\n    try {\r\n      enterTx = await meowContract.claimMoney(usersData.claimAmount).send({ feeLimit: 100000000 });\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n      await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=${0}&claimAmount=-1&ownNfts=[]`);\r\n    } catch (err: any) {\r\n      return;\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IclaimFightMeow {\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  waitingRandom: number;\r\n  address: any;\r\n  gamePrice: number;\r\n}\r\n\r\nexport const ClaimFight = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async (\r\n    {\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      waitingRandom,\r\n      address,\r\n      gamePrice,\r\n    }: IclaimFightMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n\r\n    let enterTx;\r\n    let random1: number[] = [];\r\n    let random2: number[] = [];\r\n    try {\r\n      enterTx = await meowContract\r\n      .claimFight(tokenId, fightRoom)\r\n      .send({ feeLimit: 200000000, callValue: gamePrice });\r\n\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n      const random_tmp = ((await meowContract.randoms(fightRoom, 1).call())).toNumber();\r\n\r\n      axios.post(`http://localhost:8001/api/betting/update?roomnum=${whichroom}&secondNFT=${url}&secondaddress=${address}&secondRandom=${random_tmp}&secondId=${tokenId}`);\r\n      let firstrandom = waitingRandom;\r\n      let secondrandom = random_tmp;\r\n      random1[whichroom] = firstrandom;\r\n      random2[whichroom] = secondrandom;\r\n\r\n      let winnerData: any;\r\n      let flag: boolean = false;\r\n      let resultData: any;\r\n      let usersData: any;\r\n\r\n      await axios.post(`http://localhost:8001/api/random/create?randomNumber1=${firstrandom}&randomNumber2=${secondrandom}&roomnum=${fightRoom}`);\r\n      await axios\r\n        .get(`http://localhost:8001/api/betting/find?fightRoom=${fightRoom}`)\r\n        .then((res) => {resultData = res.data;});\r\n      const jackpotAmount = (await meowContract.jackpotAmount().call()).toNumber() / Math.pow(10, 6);\r\n      await axios\r\n        .get(`http://localhost:8001/api/userinfo`)\r\n        .then((res) => {usersData = res.data;});\r\n\r\n      if(firstrandom === 77777) {\r\n        if(secondrandom === 77777) {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n        } else {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 4 / 10}&ownNfts=[]`);\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 1 / 10}&ownNfts=[]`);\r\n        }\r\n        let totalStake = 0;\r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          totalStake += usersData[i].stakeAmount;\r\n        }\r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${usersData[i].address}&stakeAmount=0&claimAmount=${jackpotAmount * usersData[i].stakeAmount * 4 / totalStake / 10 }&ownNfts=[]`);\r\n        }\r\n        alert('You hit the Jackpot. Receive the award!!!!!');\r\n        await meowContract.setJackpot(jackpotAmount / 10);\r\n      }\r\n\r\n      if(secondrandom === 77777) {\r\n        if(firstrandom === 77777) {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n        } else {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 4 / 10}&ownNfts=[]`);\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 1 / 10}&ownNfts=[]`);\r\n        }\r\n        let totalStake = 0;\r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          totalStake += usersData[i].stakeAmount;\r\n        }\r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${usersData[i].address}&stakeAmount=0&claimAmount=${jackpotAmount * usersData[i].stakeAmount * 4 / totalStake / 10 }&ownNfts=[]`);\r\n        }\r\n        alert('You hit the Jackpot. Receive the award!!!!!');\r\n        await meowContract.setJackpot(jackpotAmount / 10);\r\n      }\r\n\r\n      if (firstrandom > secondrandom) {\r\n        await axios\r\n          .get(`http://localhost:8001/api/winner/find?address=${resultData.firstaddress}`)\r\n          .then((res) => {winnerData = res.data;});\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice * 6 / 5 : gamePrice * 6}&ownNfts=[${tokenId},${resultData.firstId}]`);\r\n      } else if (firstrandom < secondrandom) {\r\n        await axios\r\n          .get(`http://localhost:8001/api/winner/find?address=${address}`)\r\n          .then((res) => {winnerData = res.data;});\r\n          await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice * 6 / 5 : gamePrice * 6}&ownNfts=[${tokenId},${resultData.firstId}]`);\r\n      } else {\r\n        await axios.post(`http://localhost:8001/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice : gamePrice * 5}&ownNfts=[${resultData.firstId}]`);\r\n        await axios.post(`http://localhost:8001/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice : gamePrice * 5}&ownNfts=[${tokenId}]`);\r\n        flag = true;\r\n      }\r\n\r\n      if (winnerData) {\r\n        await axios.post(`http://localhost:8001/api/winner/update?address=${winnerData.address}&winCount=${winnerData.winCount + 1}`);\r\n      } else {\r\n        if (!flag) {\r\n          if (firstrandom > secondrandom) {\r\n            await axios.post(`http://localhost:8001/api/winner/create?address=${resultData.firstaddress}&winCount=${1}`);\r\n          } else if (firstrandom < secondrandom) {\r\n            await axios.post(`http://localhost:8001/api/winner/create?address=${address}&winCount=${1}`);\r\n          }\r\n        }\r\n      }\r\n\r\n      await axios.post(`http://localhost:8001/api/result/create?randomNumber1=${firstrandom}&randomNumber2=${secondrandom}&nftUrl1=${resultData.firstNFT}&nftUrl2=${resultData.secondNFT}&address1=${resultData.firstaddress}&address2=${address}&roomnum=${fightRoom}`);\r\n\r\n      return {\r\n        random1,\r\n        random2,\r\n      };\r\n    } catch (err: any) {\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IWinSlice {\r\n  random1: number[];\r\n  random2: number[];\r\n}\r\n\r\nconst fightSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(EnterRoom.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(EnterRoom.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(EnterRoom.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(widrawNFT.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(widrawNFT.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(widrawNFT.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(ClaimFight.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.fight;\r\n\r\nexport default fightSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = fightSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (fight) => fight);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\n\r\ninterface IwalletInfo {\r\n  account: any;\r\n}\r\n\r\nexport const walletInfo = createAsyncThunk(\r\n  'nft/walletInfo',\r\n  async ({ account }: IwalletInfo) => {\r\n    let tmpData: any;\r\n    await axios\r\n      .get(`http://localhost:8001/api/userinfo/find?address=${account}`)\r\n      .then((res) => {tmpData = res.data});\r\n\r\n    let nftCount = tmpData?.ownNfts.length;\r\n    let trxAmount = tmpData?.claimAmount / 1000000;\r\n    return {\r\n      nftCount,\r\n      trxAmount,\r\n    };\r\n  }\r\n)\r\n\r\nexport interface IWalletInfoDetail {\r\n  nftCount: number;\r\n  trxAmount: number;\r\n}\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(walletInfo.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(walletInfo.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(walletInfo.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nfts;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nfts) => nfts);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { claimMoney, widrawNFT } from \"store/slices/play-slice\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { walletInfo } from \"store/slices/walletInfo-slice\";\r\n\r\nconst Jackpot = () => {\r\n  const { account } = useWeb3React();\r\n\r\n  const JackpotAmount = useSelector<IReduxState, string>(\r\n    (state) => state.app.jackpotAmount\r\n  );\r\n  const meowCount: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.meowCount\r\n  );\r\n  let contractNFTs: number = useSelector<IReduxState, number>(\r\n    (state) => state.wallet.nftCount\r\n  );\r\n  let widrawAmount : number = useSelector<IReduxState, number>(\r\n    (state) => state.wallet.trxAmount\r\n  );\r\n\r\n  const history = useHistory();\r\n  const handleClickStake = (link: string) => {\r\n    history.push(link);\r\n  };\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  async function onWidrawNFT() {\r\n    let widrawState = await dispatch(\r\n      widrawNFT({ address: account }));\r\n    if (widrawState.meta.requestStatus === \"fulfilled\") {\r\n      getAvailableData();\r\n    }\r\n  }\r\n\r\n  async function onClaimMoney() {\r\n    let claimState = await dispatch(claimMoney({ address: account }));\r\n    if(claimState.meta.requestStatus === 'fulfilled') {\r\n      getAvailableData();\r\n    }\r\n  }\r\n\r\n  function getAvailableData() {\r\n    dispatch(walletInfo({account: account}));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(account) {\r\n      getAvailableData();\r\n    }\r\n  }, [account])\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingY: \"3px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#FF1E1E\",\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          py: 1,\r\n          px: { xs: 1, sm: 3 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", sm: \"615px\" },\r\n          textAlign: \"center\",\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        War Chest Jackpot: {JackpotAmount} TRX\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"self-start\",\r\n          pb: 6,\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box>\r\n            <Button\r\n              sx={{\r\n                paddingX: \"16px\",\r\n                paddingY: \"6px\",\r\n                marginTop: \"8px\",\r\n                fontSize: \"18px\",\r\n                mr: 3,\r\n                color: \"rgba(101,230,255,1)\",\r\n                backgroundColor: \"rgba(101,230,255,0.15)\",\r\n              }}\r\n            >\r\n              Deposit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ mr: 3, textAlign: 'center' }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n            onClick={() => { onWidrawNFT() }}\r\n          >\r\n            Withdraw NFTs\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available NFTs: {contractNFTs ? contractNFTs : 0} NFTs\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3, textAlign: 'center' }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n            onClick={() => { onClaimMoney() }}\r\n          >\r\n            Withdraw TRX\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available TRX: {widrawAmount ? widrawAmount : 0} TRX\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              borderRadius: \"24px\",\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              border: \"1px solid white\",\r\n              color: \"white\",\r\n              // backgroundColor: \"rgba(38,40,42,0.64)\",\r\n              mx: \"auto\",\r\n              fontSize: \"18px\",\r\n              marginTop: \"8px\",\r\n              display: \"block\",\r\n            }}\r\n            onClick={() => {\r\n              handleClickStake(\"stake\");\r\n            }}\r\n          >\r\n            Meow Staking\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available Meow: {meowCount}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#fff\",\r\n          fontSize: { xs: \"20px\", xl: \"24px\" },\r\n          py: 1,\r\n          px: { xs: 1, xl: 2 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", xl: \"600px\" },\r\n          textAlign: \"center\",\r\n          position: { md: \"absolute\" },\r\n          mx: \"auto\",\r\n          left: \"6px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        MEOW left to be mined: 99,999,980\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Jackpot;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Role = () => {\r\n  const randomData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.randomData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"18px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Numbers Rolled:\r\n      </Typography>\r\n      {randomData && randomData.map((data, index) => (\r\n        <Box key={index}>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber1}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber2}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","import {\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\n\r\nconst Winner = () => {\r\n  const winnerData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.winnerData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"20px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n        }}\r\n      >\r\n        Top 10 Winners\r\n      </Typography>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Wins:\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Address:\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          {winnerData && winnerData.map((data, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {data.winCount}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {`${data.address.slice(0,4)}...${data.address.slice(-4)}`}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { NILE_TESTNET } from '../../constants/addresses';\r\nimport tronWeb from 'tronweb';\r\n\r\ninterface IapproveNFT {\r\n  tokenId: Number;\r\n}\r\n\r\ndeclare var window: any\r\n\r\nexport const approveNFT = createAsyncThunk(\r\n  \"NFT/loadMFTDetails\",\r\n  //@ts-ignore\r\n  async ({ tokenId }: IapproveNFT, { dispatch }) => {\r\n    let nftContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    try {\r\n      enterTx = await nftContract.approve(\r\n        NILE_TESTNET.MEOW_ADDRESS,\r\n        tokenId\r\n      ).send({ feeLimit: 100000000 });\r\n\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n      return;\r\n    } catch (err: any) {\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IloadNftAllowance {\r\n  tokenIds: Number[];\r\n}\r\n\r\nexport const loadNftAllowance = createAsyncThunk(\r\n  \"app/loadNftAllowance\",\r\n  //@ts-ignore\r\n  async ({ tokenIds }: IloadNftAllowance) => {\r\n    let nftContract: any;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let allowtmp: String[] = [];\r\n    await Promise.all(\r\n      tokenIds.map(async (tokenId, index) => {\r\n        allowtmp[index] = await nftContract.getApproved(tokenId).call();\r\n      })\r\n    );\r\n    let allows: boolean[] = [];\r\n    allowtmp.map((allow, index) => {\r\n      allows[index] = allow === tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS);\r\n    });\r\n    return {\r\n      allowances: allows,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface INFTSlice {\r\n  allowances: boolean[];\r\n  loading: boolean;\r\n}\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(loadNftAllowance.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(loadNftAllowance.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(loadNftAllowance.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nft;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nft) => nft);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { NILE_TESTNET } from '../../constants/addresses';\r\nimport tronWeb from 'tronweb';\r\n\r\ndeclare var window: any\r\n\r\ninterface IloadNftDetails {\r\n  account: any;\r\n}\r\n\r\nexport const loadNftDetails = createAsyncThunk(\r\n  'nft/loadNftDetails',\r\n  async ({ account }: IloadNftDetails) => {\r\n    let meowContract, nftContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let nftids: any[] = [];\r\n    let nfturls: any[] = [];\r\n    let nfturis: any[] = [];\r\n    const contractNFTCount = await meowContract.tokenOwnerLength(account).call();\r\n    const nft_counts = await nftContract.balanceOf(account).call();\r\n    for (let i = 0; i < Math.min(nft_counts, 4); i++) {\r\n      let tmptokenID = await nftContract.tokenOfOwnerByIndex(account, i).call();\r\n      nftids[i] = tronWeb.toDecimal(tmptokenID);\r\n    }\r\n\r\n    for (let i = 0; i < Math.min(nft_counts, 4); i++) {\r\n      nfturls[i] = await nftContract.tokenURI(nftids[i]).call();\r\n    }\r\n\r\n    for (let i = 0; i < Math.min(nft_counts, 4); i++) {\r\n      nfturis[i] = `https://ipfs.io/ipfs/${nfturls[i].slice(7, 53)}/${\r\n        nftids[i]\r\n      }.png`;\r\n    }\r\n    let contractNFTs = 0;\r\n    for (let i = contractNFTCount - 1; i >= 0; i--) {\r\n      let tmp = await meowContract.tokenOwner(account, i).call();\r\n      if (tmp === 0) break;\r\n      contractNFTs++;\r\n    }\r\n    return {\r\n      nftids,\r\n      nfturis,\r\n      contractNFTs,\r\n    };\r\n  }\r\n)\r\n\r\nexport interface INftDetailSlice {\r\n  nftids: any[];\r\n  nfturis: any[];\r\n  contractNFTs: number;\r\n}\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(loadNftDetails.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(loadNftDetails.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(loadNftDetails.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nfts;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nfts) => nfts);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\nimport TronWeb from \"tronweb\";\r\nimport { NILE_TESTNET } from \"../../constants/addresses\";\r\n\r\ninterface ILoadGameDetails {\r\n  account: any;\r\n}\r\n\r\ndeclare var window: any;\r\n\r\nexport const loadGameDetails = createAsyncThunk(\r\n  \"app/loadGameDetails\",\r\n  async ({ account }: ILoadGameDetails ) => {\r\n    let meowContract, meowTokenContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb.contract().at(TronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n        meowTokenContract = await window.tronWeb.contract().at(TronWeb.address.toHex(NILE_TESTNET.MEOWTOKEN_ADDRESS));\r\n      }\r\n    }\r\n\r\n    let gameData: any[] = [];\r\n    let randomData: any[] = [];\r\n    let resultData: any[] = [];\r\n    let winnerData: any[] = [];\r\n\r\n    await axios.get(`http://localhost:8001/api/betting`).then((res) => {\r\n      gameData = res.data;\r\n    });\r\n    await axios.get(`http://localhost:8001/api/random`).then((res) => {\r\n      randomData = res.data;\r\n    });\r\n    await axios.get(`http://localhost:8001/api/result`).then((res) => {\r\n      resultData = res.data;\r\n    });\r\n    await axios.get(`http://localhost:8001/api/winner`).then((res) => {\r\n      winnerData = res.data;\r\n    });\r\n    const gameprice = ((await meowContract.gamePrice().call())).toString();\r\n    const jackpotAmount = ((await meowContract.jackpotAmount().call()) / Math.pow(10, 6)).toString();\r\n    const meowCount = (await meowTokenContract.balanceOf(account).call()).toString();\r\n    return {\r\n      gameprice,\r\n      jackpotAmount,\r\n      gameData,\r\n      randomData,\r\n      resultData,\r\n      winnerData,\r\n      meowCount,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {\r\n  gameprice: string;\r\n  jackpotAmount: string;\r\n  gameData: any[];\r\n  allowflg: boolean;\r\n  currentData: any;\r\n  loading: boolean;\r\n  randomData: any[];\r\n  resultData: any[];\r\n  winnerData: any[];\r\n  widrawAmount: number;\r\n  meowCount: string;\r\n}\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadGameDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadGameDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadGameDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.app;\r\n\r\nexport default gameSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = gameSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (app) => app);\r\n","import { Box, Typography, Button, Skeleton } from \"@mui/material\";\r\nimport { ClaimFight, EnterRoom } from \"store/slices/play-slice\";\r\nimport { approveNFT, loadNftAllowance } from \"store/slices/NFt-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { loadGameDetails } from \"store/slices/game-slice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport axios from \"axios\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport io from \"socket.io-client\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { walletInfo } from \"store/slices/walletInfo-slice\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"400px\", sm: \"500px\", md: \"700px\", lg: \"1000px\" },\r\n  height: \"600px\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  flexWrap: \"wrap\",\r\n  backgroundColor: \"rgba(38,40,42)\",\r\n  borderRadius: 8,\r\n  overflowY: \"scroll\",\r\n};\r\n\r\nconst CurrentBattle = () => {\r\n  const { account } = useWeb3React();\r\n\r\n  const gameData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.gameData\r\n  );\r\n  const gamePrice: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.gameprice\r\n  );\r\n  let firRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random1\r\n  );\r\n  let secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const gameLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.app.loading\r\n  );\r\n  const allowFlg: boolean[] = useSelector<IReduxState, boolean[]>(\r\n    (state) => state.nft.allowances\r\n  );\r\n  const isLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.nft.loading\r\n  );\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n  const nfturis: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nfturis\r\n  );\r\n\r\n  const Datas = [\r\n    {\r\n      roomnum: 1,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 2,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 3,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      whichfight: 0,\r\n      fightroom: 0,\r\n    },\r\n    {\r\n      roomnum: 4,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 5,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 6,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 7,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 8,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n  ];\r\n\r\n  gameData &&\r\n    gameData.map((data) => {\r\n      Datas[data.roomnum - 1].firstNFt = data.firstNFT;\r\n      Datas[data.roomnum - 1].secondNFt = data.secondNFT;\r\n      Datas[data.roomnum - 1].firstaddress = data.firstaddress;\r\n      Datas[data.roomnum - 1].secondaddress = data.secondaddress;\r\n      Datas[data.roomnum - 1].firstrandom = data.firstRandom;\r\n      Datas[data.roomnum - 1].secondrandom = data.secondRandom;\r\n      Datas[data.roomnum - 1].fightroom = data.fightRoom;\r\n      Datas[data.roomnum - 1].whichfight = data.whichFight;\r\n      Datas[data.roomnum - 1].tokenId = data.tokenId;\r\n    });\r\n\r\n  const [openState, setOpenState] = useState(false);\r\n  const [claimState, setClaimState] = useState(false);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [whichroom, setWhichroom] = useState(0);\r\n  const [whichfight, setWhichfight] = useState(0);\r\n  const [waitingRandom, setWaitingRandom] = useState(0);\r\n  const [decide, setDecide] = useState(false);\r\n  const [address, setAddress] = useState('');\r\n\r\n  var socket = io(\"http://localhost:8001\");\r\n\r\n  const getDate = () => {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let number =\r\n      year * Math.pow(10, 10) +\r\n      month * Math.pow(10, 8) +\r\n      day * Math.pow(10, 6) +\r\n      hour * Math.pow(10, 4) +\r\n      minute * Math.pow(10, 2) +\r\n      second;\r\n    return number;\r\n  };\r\n\r\n  function getGameData() {\r\n    dispatch(loadGameDetails({ account: address }));\r\n  }\r\n\r\n  function getAvailableData() {\r\n    dispatch(walletInfo({ account: address }));\r\n  }\r\n\r\n  function getNftData() {\r\n    dispatch(loadNftDetails({ account: address }));\r\n  }\r\n\r\n  function getApprove() {\r\n    dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }\r\n\r\n  async function approve(id: Number) {\r\n    let approveTmp = await dispatch(\r\n      approveNFT({\r\n        tokenId: id,\r\n      })\r\n    );\r\n    if (approveTmp.meta.requestStatus === \"fulfilled\") {\r\n      getApprove();\r\n    }\r\n  }\r\n\r\n  async function onEnterRoom(index: number) {\r\n    let fightRoomnum = getDate();\r\n    await dispatch(\r\n      EnterRoom({\r\n        tokenId: nftids[index],\r\n        fightRoom: fightRoomnum,\r\n        whichroom: whichroom + 1,\r\n        url: nfturis[index],\r\n        address: address,\r\n        gamePrice: Number(gamePrice),\r\n      })\r\n    );\r\n    reload();\r\n  }\r\n\r\n  async function onClaimFight(index: number) {\r\n    await dispatch(\r\n      ClaimFight({\r\n        tokenId: nftids[index],\r\n        fightRoom: whichfight,\r\n        whichroom: whichroom + 1,\r\n        url: nfturis[index],\r\n        waitingRandom: waitingRandom,\r\n        address: address,\r\n        gamePrice: Number(gamePrice),\r\n      })\r\n    );\r\n    reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getApprove();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  // useEffect(() => {\r\n  //   if (gameLoading) {\r\n  //     reload();\r\n  //   }\r\n  // }, [gameLoading]);\r\n\r\n  function reload() {\r\n    console.log('socket before emit');\r\n    socket.emit(\"enter\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(account && account !== '') {\r\n      setAddress(account);\r\n    }\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"entered\", () => {\r\n      getGameData();\r\n      getNftData();\r\n      getApprove();\r\n      getAvailableData();\r\n    });\r\n  }, [address]);\r\n\r\n  useEffect(() => {\r\n    if (secRandomData) {\r\n      setDecide(true);\r\n      setTimeout(() => {\r\n        axios.delete(\r\n          `http://localhost:8001/api/betting/delete/${secRandomData.length - 1}`\r\n        );\r\n        setDecide(false);\r\n        reload();\r\n      }, 4000);\r\n    }\r\n  }, [secRandomData]);\r\n\r\n  let isFightable = false;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        10 TRX Battle (1 Roll & 1 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas &&\r\n          Datas.map((data, index) => {\r\n            if (index > 3) return;\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  mr: { xs: 1, sm: 2 },\r\n                  ml: { xs: 1, sm: 2 },\r\n                  mb: { xs: 1, sm: 2 },\r\n                }}\r\n                key={index}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mr: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  {data.firstNFt !== \"\" ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.firstNFt}\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setOpenState(true);\r\n                    }}\r\n                    disabled={data.firstNFt !== \"\" ? true : false}\r\n                  >\r\n                    {firRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      firRandomData[index + 1] === undefined ||\r\n                      firRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Winner\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Loser\"\r\n                      : data.secondaddress === \"\" ||\r\n                        data.secondaddress === null || data.secondaddress === undefined\r\n                      ? data.firstaddress === \"\"\r\n                        ? \"Fight\"\r\n                        : `${data.firstaddress?.slice(\r\n                            0,\r\n                            4\r\n                          )}...${data.firstaddress?.slice(-4)}`\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  {data.secondNFt !== \"\" ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.secondNFt}\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    disabled={\r\n                      !(data.firstNFt !== \"\" || data.secondaddress !== null || data.secondaddress === undefined)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      setWhichfight(data.fightroom);\r\n                      setWaitingRandom(data.firstrandom);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setClaimState(true);\r\n                    }}\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      my: { xs: 1, sm: 2 },\r\n                      \"& .css-2pgj13-MuiButtonBase-root-MuiButton-root.Mui-disabled\":\r\n                        { color: \"#FF1E1E\" },\r\n                    }}\r\n                  >\r\n                    {secRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      secRandomData[index + 1] === undefined ||\r\n                      secRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Loser\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Winner\"\r\n                      : data.secondaddress === '' ||\r\n                        data.secondaddress === null || data.secondaddress === undefined\r\n                      ? \"Fight\"\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 2, sm: 3, md: 4, xl: 5 },\r\n        }}\r\n      >\r\n        100 TRX Battle (10 Rolls & 10 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas &&\r\n          Datas.map((data, index) => {\r\n            if (index < 4) return;\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  mr: { xs: 2, sm: 3 },\r\n                  mb: { xs: 1, sm: 2 },\r\n                }}\r\n                key={index}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    marginRight: {\r\n                      xs: \"6px\",\r\n                      sm: \"8px\",\r\n                      md: \"12px\",\r\n                      xl: \"16px\",\r\n                    },\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setOpenState(true);\r\n                    }}\r\n                    disabled={data.firstNFt !== \"\" ? true : false}\r\n                  >\r\n                    {data.secondaddress === \"\" ||\r\n                    data.secondaddress === null || data.secondaddress === undefined\r\n                      ? data.firstaddress === \"\"\r\n                        ? \"Fight\"\r\n                        : `${data.firstaddress?.slice(\r\n                            0,\r\n                            4\r\n                          )}...${data.firstaddress?.slice(-4)}`\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box>\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      setWhichfight(data.fightroom);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setClaimState(true);\r\n                    }}\r\n                    disabled={\r\n                      !(data.firstNFt !== \"\" || data.secondaddress !== null || data.secondaddress === undefined)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    {data.secondaddress === \"\" ||\r\n                    data.secondaddress === null || data.secondaddress === undefined\r\n                      ? \"Fight\"\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n      </Box>\r\n      <Modal\r\n        open={openState}\r\n        onClose={() => {\r\n          setOpenState(false);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids &&\r\n            nftids.map((id: Number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={nfturis?.[index]}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: \"100%\",\r\n                          borderRadius: \"12px\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onEnterRoom(index);\r\n                              setOpenState(false);\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={claimState}\r\n        onClose={() => {\r\n          setClaimState(false);\r\n          setWhichfight(0);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids &&\r\n            nftids.map((id: Number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={nfturis?.[index]}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: \"100%\",\r\n                          borderRadius: \"12px\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onClaimFight(index);\r\n                              setClaimState(false);\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentBattle;\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FinishedBattle = () => {\r\n  const resultData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.resultData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n          mb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        Last 100 Finished Battles\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {resultData && resultData.map((data, index) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 2, sm: 3 },\r\n                mb: { xs: 1, sm: 2, md: 3, lg: 4 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  marginRight: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber1}\r\n                </Typography>\r\n                {data.nftUrl1 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl1}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 > data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      mt: 1,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address1.slice(0, 4)}...${data.address1.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 > data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber2}\r\n                </Typography>\r\n                {data.nftUrl2 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl2}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 < data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                    pt: 1,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address2.slice(0, 4)}...${data.address2.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 < data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinishedBattle;\r\n","import { Box, Typography } from \"@mui/material\";\r\n// import ActionFeed from \"./components/ActionFeed\";\r\nimport Banner from \"./components/Banner\";\r\nimport Jackpot from \"./components/Jackpot\";\r\nimport Role from \"./components/Role\";\r\nimport Winner from \"./components/Winner\";\r\nimport CurrentBattle from \"./components/CurrentBattle\";\r\nimport FinishedBattle from \"./components/FinishedBattle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Box sx={{ backgroundColor: \"rgba(38,40,42,0.95)\" }}>\r\n      <Banner />\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        fontFamily=\"Audiowide\"\r\n        color=\"white\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", md: \"48px\", xl: \"60px\" },\r\n          mt: \"16px\",\r\n          mb: \"16px\",\r\n        }}\r\n      >\r\n        Crypto Moon Catz War!\r\n      </Typography>\r\n      <Jackpot />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: { xs: \"column\", md: \"row\" },\r\n          justifyContent: \"space-around\",\r\n          my: { xs: 1, sm: 2 },\r\n        }}\r\n      >\r\n        <Box sx={{ width: { xs: \"100%\", md: \"13%\" } }}>\r\n          <Role />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"66%\" } }}>\r\n          <CurrentBattle />\r\n          <FinishedBattle />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"15%\" } }}>\r\n          <Winner />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses, Networks } from \"../../constants\";\r\nimport { meowContractABI } from \"../../abi\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  JsonRpcProvider,\r\n  StaticJsonRpcProvider,\r\n} from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { warning, success, info } from \"./messages-slice\";\r\n\r\ninterface IStackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const stackingMeow = createAsyncThunk(\r\n  \"stacking/stackingMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IStackingMeow, { dispatch }) => {\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []);\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n    let enterTx;\r\n    let stackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.stake(stackamount);\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface IunstackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const unstackingMeow = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IunstackingMeow, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n\r\n    let enterTx;\r\n    let unstackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.unStake(unstackamount);\r\n\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {}\r\n\r\nconst stakeSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(stackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(stackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(stackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(unstackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.stack;\r\n\r\nexport default stakeSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = stakeSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (stack) => stack);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { AppDispatch } from \"state\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWeb3Context } from \"../../../../hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { stackingMeow, unstackingMeow } from \"store/slices/staking-slice\";\r\n\r\nconst MeowToken = () => {\r\n\tconst [stackAmount, changesStack] = useState(\"\");\r\n\tconst [unstackAmount, changeUnstack] = useState(\"\");\r\n\tconst dispatch = useDispatch<AppDispatch>();\r\n\tconst { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\r\n\tconst [walletChecked, setWalletChecked] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (hasCachedProvider()) {\r\n\t\t\tconnect().then(() => {\r\n\t\t\t\tsetWalletChecked(true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetWalletChecked(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tasync function onStack() {\r\n\t\tawait dispatch(stackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: stackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function onUnstack() {\r\n\t\tawait dispatch(unstackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: unstackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\twidth: { xs: \"320px\", sm: '540px', md: '640px' },\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\r\n\t\t\t\tpb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n\t\t\t\tpx: 2\r\n\t\t\t}}>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t\tcolor: '#58C4E4', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40' },\r\n\t\t\t\t\t\tpy: 1, px: { xs: 1, sm: 3 },\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\r\n\t\t\t\t\t\tmb: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tMeow Token\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: { xs: '12px', sm: '16px' }, color: 'white' }}>\r\n\t\t\t\t\tEarn Meow each battle! Win or lose you mine one meow token.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography fontFamily=\"Audiowide\" sx={{\r\n\t\t\t\t\tcolor: '#6B81FF',\r\n\t\t\t\t\tfontSize: { xs: '14px', sm: '18px' },\r\n\t\t\t\t\tpy: { xs: 1 },\r\n\t\t\t\t\tpl: { xs: 2, sm: 4, md: 6, xl: 8 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\t24 Mined of 100,000,000 MOEW\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tEvery time a war chest is opened, users with staked Meow tokens split 40% of that Jackpot!\r\n\t\t\t\t\tPassive Inclome!\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tdisplay: 'flex', justifyContent: 'space-between', flexWrap: 'wrap',\r\n\t\t\t\talignItems: 'flex-start',\r\n\t\t\t\tpy: { xs: 1, sm: 2 }, px: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64'\r\n\t\t\t}}>\r\n\t\t\t\t{/* <Box>\r\n\t\t\t\t\t<Button sx={{border: '1px solid #F39B33', borderRadius: '24px', \r\n\t\t\t\t\t\tpaddingY: {xs: '4px', sm: '6px'}, paddingX: {xs: '8px', sm: '16px'}, \r\n\t\t\t\t\t\tfontSize: {xs: '12px', sm: '16px'}, color: '#F39B33', backgroundColor: '#393D32',\r\n\t\t\t\t\t\t'&: hover': {backgroundColor: '#393D32', opacity: 0.9}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tConnect\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, mt: 1}}>\r\n\t\t\t\t\t\tAvailable Meow: 2\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box> */}\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\t\t\tbackgroundColor: '#BADA55', fontFamily: 'Audiowide',\r\n\t\t\t\t\t\t\t'&: hover': { backgroundColor: '#BADA55', opacity: 0.9 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={onStack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStake Meow\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\t\tvalue={stackAmount}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tchangesStack((e.target.value));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' }, mt: 1 }}>\r\n\t\t\t\t\t\tStaked Meow: 10\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', fontFamily: 'Audiowide',\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onUnstack}\r\n\t\t\t\t>\r\n\t\t\t\t\tUnstake Meow\r\n\t\t\t\t</Button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\tvalue={unstackAmount}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tchangeUnstack((e.target.value));\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ p: 1, backgroundColor: '#393D32' }}>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tTotal Staked Meow in contract: 20\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\t40% of current Jackpot: 1,259 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ py: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64', paddingX: '6px' }}>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tYou share if Jackpot is triggered: 50% (504 TRX)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', paddingY: { xs: '4px', sm: '6px' },\r\n\t\t\t\t\tpx: { xs: 3, sm: 5 }, ml: { xs: 2, sm: 4 }, my: 1,\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\tClaim\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tUnclaimed Earnings: 0 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MeowToken;\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nconst ChestInfo = () => {\r\n  return (\r\n    <Box\r\n\t\t\tsx={{\t\t\r\n\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '640px'},\r\n\t\t\t\tmt: {xs: 4, sm: 6, md: 8, xl: 10},\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}          \r\n    >\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\t\r\n\t\t\t\tpb: {xs: 1, sm: 2, md: 3, xl: 4},\r\n\t\t\t\tpx: 2\t\t\t\t\r\n\t\t\t}}>\r\n\t\t\t\t<Typography \r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t\t{{ \r\n\t\t\t\t\t\t\tcolor: 'white', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3},\t\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tmx: 'auto',\t\r\n\t\t\t\t\t\t\tmb: 1,            \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tWar Chest\r\n\t\t\t\t</Typography>  \r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', py: 1}}>\r\n\t\t\t\t\tBattle players for NFTs and a chance at opening the War Chest Jackpot!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 2}}>\r\n\t\t\t\t\tEach battle 2 users put up 1 Crypto Moon Catz NFT and 10 TRX each.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 1}}>\r\n\t\t\t\t\tUsers are the given a random nuber (1-100,000) Highest number wins!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: '#BADA55', pt: 2}}>\r\n\t\t\t\t\tWinner receives both NFT's and 10 TRX + (1 Meow token)\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser receives (1 Meow token)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser 8 TRX is sent to the War Chest Jackpot until 77,777 is rolled!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\t2 TRX sent to team account\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{py: {xs: 1, sm: 2}, backgroundColor: '#6A6E64', px: 2}}>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '14px', sm: '18px'}}}>\r\n\t\t\t\t\tWar Chest Jackpot distribution:\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t50% goes to who rolled 77,777\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t10% goes to other user in that battle\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t40% goes to all users that have Meow tokens staked\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n  );\r\n};\r\n\r\nexport default ChestInfo;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport MeowToken from \"./components/MeowToken\";\r\nimport ChestInfo from \"./components/ChestInfo\";\r\n\r\nconst Stake = () => {\r\n  return (\r\n    <Box sx={{backgroundColor: \"#989E90\", py: {xs: 2, sm: 4, md: 6, xl: 8}\t}}>\r\n      <Typography \r\n\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\tsx=\r\n\t\t\t\t\t{{ \r\n\t\t\t\t\t\tcolor: '#F39B33', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3}, backgroundColor: \"#393D32\",\t\t\t\t\t\t\r\n\t\t\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '800px', xl: '1000px'},\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\t\r\n            mb: 2                     \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tWar Chest Jackpot: 2,518 Tron\r\n\t\t\t</Typography>   \r\n      <MeowToken />\r\n      <ChestInfo />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal } from './actions';\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>;\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number };\r\n  readonly popupList: PopupList;\r\n  readonly openModal: ApplicationModal | null;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  openModal: null,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload;\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber;\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\r\n      }\r\n    })\r\n    .addCase(setOpenModal, (state, action) => {\r\n      state.openModal = action.payload;\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs,\r\n        },\r\n      ]);\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach((p) => {\r\n        if (p.key === key) {\r\n          p.show = false;\r\n        }\r\n      });\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SerializedToken {\r\n  chainId: number;\r\n  address: string;\r\n  decimals: number;\r\n  symbol?: string;\r\n  name?: string;\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken;\r\n  token1: SerializedToken;\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode');\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode');\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode');\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n);\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline');\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken');\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken');\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair');\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair',\r\n);\r\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning');\r\n","import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { updateVersion } from '../global/actions';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  toggleURLWarning,\r\n} from './actions';\r\n\r\nconst currentTimestamp = () => new Date().getTime();\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number;\r\n\r\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean; // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean;\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number;\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number;\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken;\r\n    };\r\n  };\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair;\r\n    };\r\n  };\r\n\r\n  timestamp: number;\r\n  URLWarningVisible: boolean;\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: true,\r\n  matchesDarkMode: true,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {};\r\n      delete state.tokens[chainId][address];\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId;\r\n        state.pairs[chainId] = state.pairs[chainId] || {};\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible;\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n  hash: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  summary?: string;\r\n  claim?: { recipient: string };\r\n  receipt?: SerializableTransactionReceipt;\r\n  lastCheckedBlockNumber?: number;\r\n  addedTime: number;\r\n  confirmedTime?: number;\r\n  from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails;\r\n  };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.');\r\n      }\r\n      const txs = transactions[chainId] ?? {};\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() };\r\n      transactions[chainId] = txs;\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return;\r\n      transactions[chainId] = {};\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber;\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      tx.receipt = receipt;\r\n      tx.confirmedTime = now();\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number;\r\n      };\r\n    };\r\n  };\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null;\r\n        blockNumber?: number;\r\n        fetchingBlockNumber?: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {});\r\n      listeners[chainId] = listeners[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {};\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1;\r\n      });\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {});\r\n\r\n        if (!listeners[chainId]) return;\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call);\r\n          if (!listeners[chainId][callKey]) return;\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return;\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch];\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--;\r\n          }\r\n        });\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          };\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return;\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) return; // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber;\r\n          current.data = null;\r\n          current.blockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey];\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return;\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        };\r\n      });\r\n    }),\r\n);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nimport application from \"./application/reducer\";\r\nimport { updateVersion } from \"./global/actions\";\r\nimport user from \"./user/reducer\";\r\nimport transactions from \"./transactions/reducer\";\r\nimport multicall from \"./multicall/reducer\";\r\n\r\nimport appReducer from \"../store/slices/game-slice\";\r\nimport fightReducer from \"../store/slices/play-slice\";\r\nimport stackReducer from \"../store/slices/staking-slice\";\r\nimport nftReducer from \"../store/slices/NFt-slice\";\r\nimport nftInfoReducer from '../store/slices/Nftinfo-slice';\r\nimport walletInfoReducer from '../store/slices/walletInfo-slice';\r\n  \r\nconst PERSISTED_KEYS: string[] = [\"user\", \"transactions\", \"lists\"];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    multicall,\r\n    app: appReducer,\r\n    fight: fightReducer,\r\n    stack: stackReducer,\r\n    nft: nftReducer,\r\n    nfts: nftInfoReducer,\r\n    wallet: walletInfoReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n});\r\n\r\nstore.dispatch(updateVersion());\r\n\r\nexport default store;\r\n\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Header from \"components/Header\";\r\nimport Home from \"pages/Home\";\r\nimport Stake from \"pages/Stake\";\r\nimport { Provider } from \"react-redux\";\r\nimport store, { AppDispatch } from \"./state\";\r\nimport { loadGameDetails } from \"./store/slices/game-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { active, account } = useWeb3React();\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const loadData = useCallback(() => {\r\n    dispatch(loadGameDetails({ account: account }));\r\n    dispatch(loadNftDetails({ account: account }));\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      loadData();\r\n    }\r\n  }, [active]);\r\n  useEffect(() => {\r\n    if (!active) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [active]);\r\n\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/stake\" component={Stake} />\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport {\r\n  ThemeProvider as MUIThemeProvider,\r\n  createTheme,\r\n  StyledEngineProvider,\r\n} from \"@mui/material/styles\";\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function ThemeProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n      common: {\r\n        black: \"#16151a\",\r\n      },\r\n      primary: {\r\n        light: \"#62ceec\",\r\n        main: \"#6164ff\",\r\n        dark: \"#2847EE\",\r\n      },\r\n      secondary: {\r\n        light: \"#f59b2f\",\r\n        main: \"#ff7523\",\r\n        dark: \"#3f1d3f\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider);\r\n  library.pollingInterval = 15000;\r\n  return library;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./state\";\r\nimport ThemeProvider from \"./theme\";\r\nimport getLibrary from \"./utils/getLibrary\";\r\nimport { NetworkContextName } from \"./constants\";\r\nimport { Web3ContextProvider } from \"./hooks\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\r\n\r\nReactDOM.render(\r\n  <Web3ReactProvider getLibrary={getLibrary}>\r\n    <Web3ProviderNetwork getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeProvider>\r\n          <HashRouter>\r\n            <Web3ContextProvider>\r\n              <App />\r\n            </Web3ContextProvider>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </Web3ProviderNetwork>\r\n  </Web3ReactProvider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["assets/images/Ui_box3.webp","assets/images/button.png","assets/images/discord-brands.svg","assets/images/ban1.png","assets/images/ban2.png","assets/images sync /^/.*$","assets/images/ban1-1.jpg","assets/images/ban2-1.jpg","assets/images/logo.png","assets/images/tronlink.svg","connectors/injected-tron-connector/tronlink-abis.ts","connectors/injected-tron-connector/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/blockchain.ts","constants/addresses.ts","constants/index.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","hooks/index.ts","state/application/actions.ts","state/application/hooks.ts","state/multicall/actions.ts","state/multicall/hooks.ts","utils/index.ts","constants/multicall/index.ts","hooks/useContract.ts","hooks/useENSName.ts","hooks/useDebounce.ts","utils/isZero.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","components/Identicon/index.tsx","components/Loader/index.tsx","components/AccountDetails/Copy.tsx","hooks/useCopyClipboard.ts","components/AccountDetails/Transaction.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/PendingView.tsx","hooks/usePrevious.ts","components/WalletModal/index.tsx","components/Web3Status/index.tsx","components/Header/index.tsx","pages/Home/components/Banner/index.tsx","store/slices/messages-slice.ts","helpers/metamask-error-wrap.ts","store/slices/pending-txns-slice.ts","helpers/set-all.ts","utils/notification.ts","store/slices/play-slice.ts","store/slices/walletInfo-slice.ts","pages/Home/components/Jackpot/index.tsx","pages/Home/components/Role/index.tsx","pages/Home/components/Winner/index.tsx","store/slices/NFt-slice.ts","store/slices/Nftinfo-slice.ts","store/slices/game-slice.ts","components/Current/style.ts","store/slices/battle-slice.ts","components/Current/getDate.ts","components/Current/modal.tsx","components/Current/bigRoomModal.tsx","components/Current/Datas.ts","components/Current/SmallRoom.tsx","components/Current/BigRoom.tsx","pages/Home/components/CurrentBattle/index.tsx","pages/Home/components/FinishedBattle/index.tsx","pages/Home/index.tsx","store/slices/staking-slice.ts","pages/Stake/components/MeowToken/index.tsx","pages/Stake/components/ChestInfo/index.tsx","pages/Stake/index.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/multicall/reducer.ts","state/index.ts","App.tsx","theme/index.tsx","utils/getLibrary.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","abis","ERC20_ABI","IntercroneswapV1Router02ABI","InjectedTronConnector","kwargs","provider","getParamTypes","params","type","components","join","signs","web3","Web3","providers","WebsocketProvider","fn","sign","eth","abi","encodeFunctionSignature","name","inputs","getFunctionSelector","err","createTronLinkProvider","network","process","tronApiUrl","functionSignatures","args","this","request","res","requestProvider","method","accounts","account","chainId","AbstractConnector","NetworkConnector","createJavaTronProvider","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","urls","Networks","injected","supportedChainIds","DEFAULD_NETWORK","GOERLI","SHASTA_TESTNET","MEOW_ADDRESS","NFT_ADDRESS","MEOWTOKEN_ADDRESS","SUPPORTED_WALLETS","TRONLINK","connector","iconName","description","href","color","mobileOnly","NetworkContextName","messages","switchRequest","window","ethereum","swithNetwork","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","console","log","Web3Context","React","createContext","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","AVAX","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","onChainProvider","useMemo","Provider","value","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","useBlockNumber","useSelector","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useDispatch","useWalletModalToggle","WALLET","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","data","useCallsData","calls","callResults","multicall","serializedCallKeys","JSON","stringify","filter","c","Boolean","sort","useEffect","callKeys","parse","length","key","callKey","pcs","split","parseCallKey","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleCallResult","contract","methodName","interface","getFunction","encodeFunctionData","isAddress","ETHERSCAN_PREFIXES","getEtherscanLink","prefix","remove0xPrefix","ethAddress","toTron","shortenAddress","chars","parsed","tronAddress","substring","substr","ChainId","MAINNET","NILE","SHASTA","useContract","ABI","withSignerIfPossible","library","AddressZero","Contract","connectUnchecked","getProviderOrSigner","getContract","useENSName","debouncedAddress","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","ensNodeArgument","namehash","toLowerCase","registrarContract","ENS_ABI","useENSRegistrarContract","resolverAddress","resolverAddressResult","resolverContract","ENS_PUBLIC_RESOLVER_ABI","useENSResolverContract","changed","ENSName","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","Identicon","ref","useRef","current","innerHTML","appendChild","Jazzicon","slice","Box","sx","height","width","borderRadius","Loader","stroke","viewBox","fill","xmlns","className","d","strokeWidth","strokeLinecap","strokeLinejoin","CopyHelper","props","timeout","isCopied","setIsCopied","staticCopy","text","didCopy","copy","hide","useCopyClipboard","setCopied","onClick","toCopy","size","Typography","component","ml","fontSize","Transaction","hash","allTransactions","summary","pending","receipt","status","Link","target","rel","display","justifyContent","alignItems","textDecoration","p","renderTransactions","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","openOptions","getStatusIcon","mr","clearAllTransactionsCallback","IconButton","k","formatConnectorName","Button","variant","lineHeight","mb","textTransform","Option","clickable","header","subheader","icon","backgroundColor","borderColor","cursor","border","mt","src","alt","PendingView","setPendingError","tryActivation","option","require","default","usePrevious","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","useWeb3React","activate","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","walletModalOpen","previousAccount","activePrevious","connectorPrevious","ReactGA","event","category","action","label","catch","UnsupportedChainIdError","Dialog","onClose","maxWidth","xs","sm","md","newTransactionsFirst","a","b","StatusIcon","Web3StatusInner","values","hasPendingTransactions","Web3Status","sortedRecentTransactions","confirmed","menuLists","link","Header","history","useHistory","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","Container","Toolbar","disableGutters","columnGap","fontFamily","DiscordIcon","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","list","push","Banner","BannerImage1","BannerImage2","createMessage","severity","message","messagesSlice","createSlice","initialState","reducers","payload","info","warning","close","actions","metamaskErrorWrap","includes","trim","pendingTxnsSlice","fetchPendingTxns","clearPendingTxn","find","txnHash","splice","setAll","properties","forEach","notification","title","Store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","socket","io","EnterRoom","createAsyncThunk","tokenId","fightRoom","whichroom","url","gamePrice","tronWeb","defaultAddress","base58","at","toHex","meowContract","enterRoom","send","feeLimit","callValue","enterTx","attempts","Promise","trx","getTransaction","transaction","ret","contractRet","randoms","random_tmp","toNumber","axios","post","emit","widrawNFT","get","usersData","claimNFT","ownNfts","claimMoney","claimAmount","ClaimFight","waitingRandom","random1","random2","claimFight","firstrandom","secondrandom","flag","resultData","jackpotAmount","Math","pow","totalStake","stakeAmount","firstaddress","alert","setJackpot","winnerData","firstId","winCount","firstNFT","secondNFT","fightSlice","fetchAppSuccess","extraReducers","builder","addCase","fulfilled","rejected","walletInfo","createSelector","fight","tmpData","nftCount","nftInfo","trxAmount","nftSlice","availableStyle","nfts","paddingY","textAlign","Jackpot","JackpotAmount","app","meowCount","contractNFTs","wallet","widrawAmount","onWidrawNFT","meta","requestStatus","getAvailableData","onClaimMoney","py","px","mx","flexWrap","pb","paddingX","marginTop","xl","left","bottom","Role","randomData","index","randomNumber1","randomNumber2","Winner","Table","TableBody","TableRow","TableCell","borderBottom","padding","approveNFT","nftContract","approve","loadNftAllowance","tokenIds","allowtmp","all","getApproved","allows","allow","allowances","loadNftDetails","nft","nftids","nfturis","tokenURI","nfturl","balanceOf","nft_counts","min","tokenOfOwnerByIndex","tmptokenID","toDecimal","loadGameDetails","TronWeb","meowTokenContract","gameData","gameprice","toString","gameSlice","fightStyle","fontWeight","randomNumberStyle","roomStyleAvatar","buttonStyle","roomStyleBack","style","top","transform","lg","bgcolor","boxShadow","overflowY","avatarsStyle","modalAvatarStyle","loadBattleDetails","openState","claimState","whichfight","decide","battleSlice","getDate","battle","date","year","getFullYear","month","getMonth","day","hour","getHours","minute","getMinutes","second","getSeconds","SampleModal","isLoading","allowFlg","baseUri","closeModal","onEnterRoom","fightRoomnum","Modal","m","flexDirection","Skeleton","BigRoomModal","onClaimFight","Datas","roomnum","secondaddress","fightroom","SmallRooms","firRandomData","secRandomData","getWholeData","firstRandom","secondRandom","whichFight","obj","onEnterModal","onClaimModal","roomPic","repeat","disabled","buttonBack","BigRoom","random","CurrentBattle","delete","FinishedBattle","marginRight","nftUrl1","address1","nftUrl2","pt","address2","Home","my","stackingMeow","amount","stakeamount","approveTx","stake","unstackingMeow","unStake","stakeSlice","MeowToken","stack","stackAmount","changesStack","unstackAmount","changeUnstack","marginX","pl","opacity","TextField","required","onChange","ChestInfo","tp","Stake","createReducer","popupList","max","content","removeAfterMs","popup","concat","nanoid","show","updateVersion","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning","currentTimestamp","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","now","from","approval","claim","txs","lastCheckedBlockNumber","confirmedTime","blocksPerFetch","listeners","callListeners","fetchingBlockNumber","results","store","configureStore","reducer","user","appReducer","fightReducer","stackReducer","nftReducer","nftInfoReducer","walletInfoReducer","messagesReducer","battleReducer","middleware","getDefaultMiddleware","serializableCheck","preloadedState","load","states","App","loadData","exact","path","to","ThemeProvider","theme","createTheme","palette","mode","common","black","primary","light","main","dark","secondary","StyledEngineProvider","injectFirst","CssBaseline","getLibrary","pollingInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ProviderNetwork","createWeb3ReactRoot","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4a2e49d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Ui_box3.2bc6911b.webp\";","export default __webpack_public_path__ + \"static/media/button.6f4e853a.png\";","export default __webpack_public_path__ + \"static/media/discord-brands.3e07cf0d.svg\";","export default __webpack_public_path__ + \"static/media/ban1.70b95300.png\";","export default __webpack_public_path__ + \"static/media/ban2.82fccdcc.png\";","var map = {\n\t\"./Ui_box3.webp\": 153,\n\t\"./ban1-1.jpg\": 913,\n\t\"./ban1.png\": 308,\n\t\"./ban2-1.jpg\": 914,\n\t\"./ban2.png\": 309,\n\t\"./button.png\": 154,\n\t\"./discord-brands.svg\": 302,\n\t\"./logo.png\": 915,\n\t\"./tronlink.svg\": 916\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 453;","export default __webpack_public_path__ + \"static/media/ban1-1.5cd04bdb.jpg\";","export default __webpack_public_path__ + \"static/media/ban2-1.ec1990ce.jpg\";","export default __webpack_public_path__ + \"static/media/logo.2219dfc0.png\";","export default __webpack_public_path__ + \"static/media/tronlink.d4b98412.svg\";","// all abis...\r\nimport { abi as IntercroneswapV1Router02ABI } from \"@intercroneswap/v2-periphery/build/IIswapV1Router02.json\";\r\n\r\nimport ERC20_ABI from \"../../constants/abis/erc20.json\";\r\n\r\nexport const abis = [...ERC20_ABI, ...IntercroneswapV1Router02ABI];\r\n","import createTronLinkProvider from '@intercroneswap/tronlink-provider';\r\nimport Web3 from 'web3';\r\nimport { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { abis } from './tronlink-abis';\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super();\r\n    this.name = this.constructor.name;\r\n    this.message = 'The user rejected the request.';\r\n  }\r\n}\r\n\r\nexport class InjectedTronConnector extends AbstractConnector {\r\n  public provider: any;\r\n\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs);\r\n\r\n    const getFunctionSelector = (abi: any) => {\r\n      return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\r\n    };\r\n    const getParamTypes = (params: any) => {\r\n      return params.map(({ type, components }: { type: any; components: any }) => {\r\n        if (type === 'tuple[]') {\r\n          return (\r\n            '(' +\r\n            components\r\n              .map(({ type }: { type: any }) => {\r\n                return type;\r\n              })\r\n              .join(',') +\r\n            ')[]'\r\n          );\r\n        }\r\n        return type;\r\n      });\r\n    };\r\n    const signs: any = {};\r\n    const web3 = new Web3(\r\n      new Web3.providers.WebsocketProvider('wss://nile.infura.io/ws/v3/7f14d2eb070c41029d687df66b286a09'),\r\n    );\r\n    abis.map((fn: any) => {\r\n      try {\r\n        const sign = web3.eth.abi.encodeFunctionSignature({\r\n          name: fn.name,\r\n          type: fn.type,\r\n          inputs: fn.inputs,\r\n        });\r\n        signs[sign] = getFunctionSelector(fn);\r\n      } catch (err) {\r\n      }\r\n    });\r\n    // TODO(tron): should auto-use same network as one selected in tronlink!\r\n    this.provider = createTronLinkProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n      functionSignatures: abis,\r\n      signs,\r\n    });\r\n    /*\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n    */\r\n  }\r\n\r\n  async requestProvider(args: any) {\r\n    const res = await this.provider.request(args);\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return { provider: this.provider, account };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    const chainId = await this.requestProvider({ method: 'eth_chainId' });\r\n    return chainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return account;\r\n  }\r\n\r\n  public deactivate() {\r\n    return true;\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    // TODO: check if tronlink unlocked?\r\n    return true;\r\n  }\r\n}\r\n","import createJavaTronProvider from '@intercroneswap/java-tron-provider';\r\n\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nexport class NetworkConnector extends InjectedTronConnector {\r\n  constructor(kwargs: any) {\r\n    super(kwargs);\r\n    this.provider = createJavaTronProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n    });\r\n  }\r\n\r\n  async requestProvider(...args: any[]) {\r\n    const res = await this.provider.request(...args);\r\n    // TODO: wrap error with throw new NoEthereumProviderError()?\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<any> {\r\n    return { provider: this.provider };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return null;\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nimport { NetworkConnector } from './NetworkConnector';\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '11111');\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\r\n}\r\n\r\nexport const injected = new InjectedTronConnector({\r\n  supportedChainIds: [11111, 1],\r\n});\r\n","export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n  // AVAX = 43114,\r\n  AVAX = 43113, // for test\r\n  GOERLI = 5,\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.GOERLI;\r\n","import { Networks } from \"./blockchain\";\r\n\r\nexport const SHASTA_TESTNET = {\r\n  MEOW_ADDRESS: \"TNGQyG1BKKrEE4dcwsKR1ycdMXMcyRPqZN\", //\r\n  NFT_ADDRESS: \"TUvR3L8eT3QPDJ18hVUqELzpvVQrGL2gAM\",\r\n  MEOWTOKEN_ADDRESS: \"TDtFwTisg9hdsfmwEGcZcyCTExExsdazFj\",\r\n};\r\n\r\nexport const getAddresses = (networkID: number) => {\r\n  if (networkID === Networks.GOERLI) return SHASTA_TESTNET;\r\n\r\n  throw Error(\"Network don't support\");\r\n};\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\n\r\nimport { injected } from \"../connectors\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector;\r\n  name: string;\r\n  iconName: string;\r\n  description: string;\r\n  href: string | null;\r\n  color: string;\r\n  primary?: true;\r\n  mobile?: true;\r\n  mobileOnly?: false;\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  TRONLINK: {\r\n    connector: injected,\r\n    name: \"TronLink\",\r\n    iconName: \"tronlink.svg\",\r\n    description: \"Easy-to-use browser extension.\",\r\n    href: null,\r\n    color: \"#48489b\",\r\n    mobileOnly: false,\r\n  },\r\n};\r\n\r\nexport const NetworkContextName = \"NETWORK\";\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\r\n\r\nexport * from \"./blockchain\";\r\nexport * from \"./addresses\";","export const messages = {\r\n  please_connect:\r\n    \"Please connect your wallet to the Ether network to use Warchest.\",\r\n  please_connect_wallet: \"Please connect your wallet.\",\r\n  try_mint_more: (value: string) =>\r\n    `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} KANDY.`,\r\n  before_minting: \"Before minting, enter a value.\",\r\n  existing_mint:\r\n    \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\r\n  before_stake: \"Before staking, enter a value.\",\r\n  before_unstake: \"Before un staking, enter a value.\",\r\n  tx_successfully_send: \"Your transaction was successfully sent\",\r\n  your_balance_updated: \"Your balance was successfully updated\",\r\n  nothing_to_claim: \"You have nothing to claim\",\r\n  something_wrong: \"Something went wrong\",\r\n  switch_to_avalanche: \"Switch to the Avalanche network?\",\r\n  slippage_too_small: \"Slippage too small\",\r\n  slippage_too_big: \"Slippage too big\",\r\n  your_balance_update_soon: \"Your balance will update soon\",\r\n  before_wrap: \"Before wraping, enter a value.\",\r\n  before_unwrap: \"Before un wraping, enter a value.\",\r\n};\r\n","const switchRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0xa86a\" }],\r\n    });\r\n};\r\n\r\nconst addChainRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n            {\r\n                chainId: \"0xa86a\",\r\n                chainName: \"Avalanche Mainnet\",\r\n                rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\r\n                blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\r\n                nativeCurrency: {\r\n                    name: \"AVAX\",\r\n                    symbol: \"AVAX\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n};\r\n\r\nexport const swithNetwork = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await switchRequest();\r\n        } catch (error: any) {\r\n            if (error.code === 4902) {\r\n                try {\r\n                    await addChainRequest();\r\n                    await switchRequest();\r\n                } catch (addError) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\nimport { DEFAULD_NETWORK } from \"../../constants\";\r\nimport { Networks } from \"../../constants\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { swithNetwork } from \"../../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.AVAX]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.AVAX) {\r\n            setProvider(connectedProvider);\r\n        }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const checkWrongNetwork = async (): Promise<boolean> => {\r\n        if (providerChainID !== DEFAULD_NETWORK) {\r\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\r\n            if (shouldSwitch) {\r\n                await swithNetwork();\r\n                window.location.reload();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,\r\n            checkWrongNetwork,\r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n    return \"https://ethereum-goerli-rpc.allthatnode.com\";\r\n    return \"https://api.avax.network/ext/bc/C/rpc\";\r\n};\r\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useWeb3React as useWeb3ReactCore } from \"@web3-react/core\";\r\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\r\nimport { NetworkContextName } from \"../constants\";\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & {\r\n  chainId?: ChainId;\r\n} {\r\n  const context = useWeb3ReactCore<Web3Provider>();\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\r\n  return context.active ? context : contextNetwork;\r\n}\r\n\r\nexport * from \"./web3\";","import { createAction } from '@reduxjs/toolkit';\r\nimport { TokenList } from '@intercroneswap/token-lists';\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string;\r\n        success: boolean;\r\n        summary?: string;\r\n      };\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string;\r\n        oldList: TokenList;\r\n        newList: TokenList;\r\n        auto: boolean;\r\n      };\r\n    };\r\n\r\nexport enum ApplicationModal {\r\n  WALLET,\r\n  SETTINGS,\r\n  SELF_CLAIM,\r\n  ADDRESS_CLAIM,\r\n  CLAIM_POPUP,\r\n  MENU,\r\n  LEFTMENU,\r\n  DELEGATE,\r\n  VOTE,\r\n}\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\r\n  'application/updateBlockNumber',\r\n);\r\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal');\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'application/addPopup',\r\n);\r\nexport const removePopup = createAction<{ key: string }>('application/removePopup');\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal);\r\n  return openModal === modal;\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS);\r\n}\r\n\r\nexport function useShowClaimPopup(): boolean {\r\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleShowClaimPopup(): () => void {\r\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleSelfClaimModal(): () => void {\r\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\r\n}\r\n\r\nexport function useToggleDelegateModal(): () => void {\r\n  return useToggleModal(ApplicationModal.DELEGATE);\r\n}\r\n\r\nexport function useToggleVoteModal(): () => void {\r\n  return useToggleModal(ApplicationModal.VOTE);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList);\r\n  return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Call {\r\n  address: string;\r\n  callData: string;\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/;\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`);\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`);\r\n  }\r\n  return `${call.address}-${call.callData}`;\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-');\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`);\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  };\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number;\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n);\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n);\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n);\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number;\r\n  calls: Call[];\r\n  fetchingBlockNumber: number;\r\n}>('multicall/errorFetchingMulticallResults');\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number;\r\n  blockNumber: number;\r\n  results: {\r\n    [callKey: string]: string | null;\r\n  };\r\n}>('multicall/updateMulticallResults');\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi';\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions';\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any;\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber;\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>;\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined;\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1;\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  );\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean;\r\n  readonly data: string | undefined;\r\n  readonly blockNumber: number | undefined;\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined };\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n};\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React();\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  );\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  );\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys);\r\n    if (!chainId || callKeys.length === 0) return undefined;\r\n    const calls = callKeys.map((key) => parseCallKey(key));\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    );\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      );\r\n    };\r\n  }, [chainId, dispatch, options, serializedCallKeys]);\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT;\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)];\r\n        let data;\r\n        if (result?.data && result?.data !== '0x') {\r\n          data = result.data;\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber };\r\n      }),\r\n    [callResults, calls, chainId],\r\n  );\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean;\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined;\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean;\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean;\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean;\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false };\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false };\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE;\r\n  const { valid, data, blockNumber } = callResult;\r\n  if (!valid) return INVALID_CALL_STATE;\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE;\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE;\r\n  const success = data && data.length > 2;\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber;\r\n  let result: Result | undefined = undefined;\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data);\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data);\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result: result,\r\n    error: !success,\r\n  };\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            };\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n  const latestBlockNumber = useBlockNumber();\r\n  // console.log(fragment, calls, results, latestBlockNumber, \"multicall\")\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber));\r\n  }, [fragment, contract, results, latestBlockNumber]);\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName]);\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  );\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined;\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber));\r\n  }, [fragment, results, contractInterface, latestBlockNumber]);\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : [];\r\n  }, [contract, fragment, inputs]);\r\n\r\n  const result = useCallsData(calls, options)[0];\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber);\r\n  }, [result, contract, fragment, latestBlockNumber]);\r\n}\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { AddressZero } from \"@ethersproject/constants\";\r\nimport { JsonRpcSigner, Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { ethAddress, remove0xPrefix } from \"@intercroneswap/java-tron-provider\";\r\nimport { getAddress } from \"ethers/lib/utils\";\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  11111: \"\",\r\n  1: \"shasta.\",\r\n  201910292: \"nile.\",\r\n};\r\n\r\nexport function getEtherscanLink(\r\n  chainId: ChainId,\r\n  data: string,\r\n  type: \"transaction\" | \"token\" | \"address\" | \"block\"\r\n): string {\r\n  const prefix = `https://${\r\n    ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[11111]\r\n  }tronscan.org`;\r\n\r\n  switch (type) {\r\n    case \"transaction\": {\r\n      return `${prefix}/#/transaction/${remove0xPrefix(data)}`;\r\n    }\r\n    case \"token\": {\r\n      return `${prefix}/#/token20/${ethAddress.toTron(data)}`;\r\n    }\r\n    case \"address\":\r\n    default: {\r\n      return `${prefix}/#/address/${ethAddress.toTron(data)}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address);\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  const tronAddress = ethAddress.toTron(parsed);\r\n  return `${tronAddress.substring(0, chars)}...${tronAddress.substr(-chars)}`;\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(\r\n  library: Web3Provider,\r\n  account: string\r\n): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(\r\n  library: Web3Provider,\r\n  account?: string\r\n): any {\r\n  // return account ? library?.trx.sign : library?.trx\r\n  return account ? getSigner(library, account) : library;\r\n}\r\n\r\n// account is optional\r\nexport function getContract(\r\n  address: string,\r\n  ABI: any,\r\n  library: Web3Provider,\r\n  account?: string\r\n): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  return new Contract(\r\n    address,\r\n    ABI,\r\n    getProviderOrSigner(library, account) as any\r\n  );\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n","import { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport MULTICALL_ABI from \"./abi.json\";\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  // TODO: TRON: mainnet multicall contract address\r\n  [ChainId.MAINNET]: \"0xD3573a8728A49512A1485D63180Ed5b095e11D5C\",\r\n  [ChainId.NILE]: \"0x04A6730FC23a5f2C3d94F7C7aCb4F92Eab8282c2\",\r\n  [ChainId.SHASTA]: \"0x9037ae53c89147e009d26f7547143544be00f984\",\r\n};\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS };\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useMemo } from \"react\";\r\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\r\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\r\nimport { getContract } from \"../utils\";\r\nimport { useActiveWeb3React } from \"./index\";\r\n\r\n// returns null on errors\r\nfunction useContract(\r\n  address: string | undefined,\r\n  ABI: any,\r\n  withSignerIfPossible = true\r\n): Contract | null {\r\n  const { library, account } = useActiveWeb3React();\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null;\r\n    try {\r\n      return getContract(\r\n        address,\r\n        ABI,\r\n        library,\r\n        withSignerIfPossible && account ? account : undefined\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to get contract\", error);\r\n      return null;\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account]);\r\n}\r\n\r\nexport function useENSRegistrarContract(\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  let address: string | undefined;\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      // TODO(tron): shasta TNS ?\r\n      case ChainId.MAINNET:\r\n        address = \"0x99fb68F0672E3E16AbB071342eF03355dfcb1797\";\r\n        break;\r\n      // TODO\r\n      case ChainId.NILE:\r\n        address = \"0xD2577ec90C6Fb23EC208B27609867E30D69bDc89\";\r\n        break;\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useENSResolverContract(\r\n  address: string | undefined,\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(\r\n    chainId && MULTICALL_NETWORKS[chainId],\r\n    MULTICALL_ABI,\r\n    false\r\n  );\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\nimport { isAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\r\nimport useDebounce from './useDebounce';\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200);\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined];\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n    } catch (error) {\r\n      return [undefined];\r\n    }\r\n  }, [debouncedAddress]);\r\n  const registrarContract = useENSRegistrarContract(false);\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n  const resolverAddressResult = resolverAddress.result?.[0];\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  );\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n\r\n  const changed = debouncedAddress !== address;\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  };\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { ChainId } from '@intercroneswap/v2-sdk';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string;\r\n  from: string;\r\n  contractAddress: string;\r\n  transactionIndex: number;\r\n  blockHash: string;\r\n  transactionHash: string;\r\n  blockNumber: number;\r\n  status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  from: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  claim?: { recipient: string };\r\n  summary?: string;\r\n}>('transactions/addTransaction');\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions');\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    claim?: { recipient: string };\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false;\r\n\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\n// watch for submissions to claim\r\n// return null if not done loading, return undefined if not found\r\nexport function useUserHasSubmittedClaim(account?: string): {\r\n  claimSubmitted: boolean;\r\n  claimTxn: TransactionDetails | undefined;\r\n} {\r\n  const allTransactions = useAllTransactions();\r\n\r\n  // get the txn if it has been submitted\r\n  const claimTxn = useMemo(() => {\r\n    const txnIndex = Object.keys(allTransactions).find((hash) => {\r\n      const tx = allTransactions[hash];\r\n      return tx.claim && tx.claim.recipient === account;\r\n    });\r\n    return txnIndex && allTransactions[txnIndex] ? allTransactions[txnIndex] : undefined;\r\n  }, [account, allTransactions]);\r\n\r\n  return { claimSubmitted: Boolean(claimTxn), claimTxn };\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport Jazzicon from \"jazzicon\";\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n\r\n  const { account } = useActiveWeb3React();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"16px\",\r\n        width: \"16px\",\r\n        borderRadius: \"50%\",\r\n      }}\r\n      ref={ref as any}\r\n    />\r\n  );\r\n}\r\n","import \"./loader.scss\";\r\n\r\nexport default function Loader({ stroke }: { stroke?: string }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"styled-svg\"\r\n    >\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        stroke={stroke ? stroke : \"#fff\"}\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { CheckCircle, Copy } from \"react-feather\";\r\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\r\n\r\nexport default function CopyHelper(props: {\r\n  toCopy: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [isCopied, setCopied] = useCopyClipboard();\r\n\r\n  return (\r\n    <Box className=\"copy-icon\" onClick={() => setCopied(props.toCopy)}>\r\n      {isCopied ? (\r\n        <>\r\n          <CheckCircle size={\"16\"} />\r\n          <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n            Copied\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Copy size={\"16\"} />\r\n          {props.children}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import copy from 'copy-to-clipboard';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function useCopyClipboard(timeout = 500): [boolean, (toCopy: string) => void] {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const staticCopy = useCallback((text: any) => {\r\n    const didCopy = copy(text);\r\n    setIsCopied(didCopy);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, timeout);\r\n\r\n      return () => {\r\n        clearTimeout(hide);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [isCopied, setIsCopied, timeout]);\r\n\r\n  return [isCopied, staticCopy];\r\n}\r\n","import { CheckCircle, Triangle } from \"react-feather\";\r\nimport { Typography, Box, Link } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { getEtherscanLink } from \"utils\";\r\nimport { useAllTransactions } from \"state/transactions/hooks\";\r\n\r\nexport default function Transaction({ hash }: { hash: string }) {\r\n  const { chainId } = useActiveWeb3React();\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const tx = allTransactions?.[hash];\r\n  const summary = tx?.summary;\r\n  const pending = !tx?.receipt;\r\n  const success =\r\n    !pending &&\r\n    tx &&\r\n    (tx.receipt?.status === 1 || typeof tx.receipt?.status === \"undefined\");\r\n\r\n  if (!chainId) return null;\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        href={getEtherscanLink(chainId, hash, \"transaction\")}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          textDecoration: \"none\",\r\n          p: \"4px 0\",\r\n          \"&:hover\": {\r\n            textDecoration: \"underline\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography color=\"primary\" fontSize=\"14px\">\r\n          {summary ?? hash} ↗\r\n        </Typography>\r\n        <Box>\r\n          {pending ? (\r\n            <Loader stroke=\"#6164ff\" />\r\n          ) : success ? (\r\n            <CheckCircle size=\"16\" color=\"#2e7d32\" />\r\n          ) : (\r\n            <Triangle size=\"16\" color=\"#d32f2f\" />\r\n          )}\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ExternalLink as LinkIcon } from \"react-feather\";\r\nimport { Box, Typography, Button, Link, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { ethAddress } from \"@intercroneswap/java-tron-provider\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Copy from \"./Copy\";\r\nimport Transaction from \"./Transaction\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport { injected } from \"connectors\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { AppDispatch } from \"state\";\r\nimport { clearAllTransactions } from \"state/transactions/actions\";\r\nimport { shortenAddress, getEtherscanLink } from \"utils\";\r\n\r\nfunction renderTransactions(transactions: string[]) {\r\n  return (\r\n    <Box>\r\n      {transactions.map((hash, i) => {\r\n        return <Transaction key={i} hash={hash} />;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n\r\ninterface AccountDetailsProps {\r\n  toggleWalletModal: () => void;\r\n  pendingTransactions: string[];\r\n  confirmedTransactions: string[];\r\n  ENSName?: string;\r\n  openOptions: () => void;\r\n}\r\n\r\nexport default function AccountDetails({\r\n  toggleWalletModal,\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n  openOptions,\r\n}: AccountDetailsProps) {\r\n  const { chainId, account, connector } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  function formatConnectorName() {\r\n    const name = Object.keys(SUPPORTED_WALLETS).map(\r\n      (k) => SUPPORTED_WALLETS[k].name\r\n    )[0];\r\n    return (\r\n      <Typography color=\"#888d9b\" fontSize=\"14px\">\r\n        Connected with {name}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  function getStatusIcon() {\r\n    if (connector === injected) {\r\n      return (\r\n        <Box mr=\"8px\">\r\n          <Identicon />\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }));\r\n  }, [dispatch, chainId]);\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <Typography p=\"16px\">Account</Typography>\r\n        <Box p=\"0 16px 24px 16px\">\r\n          <Box className=\"info-card\" p=\"16px\">\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {formatConnectorName()}\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{ fontSize: \"12px\", lineHeight: \"1.5\", p: \"4px 6px\" }}\r\n                onClick={() => {\r\n                  openOptions();\r\n                }}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {ENSName ? (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\"> {ENSName}</Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\">\r\n                      {\" \"}\r\n                      {account && shortenAddress(account)}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {account && (\r\n                  <Copy toCopy={ethAddress.toTron(account)}>\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      Copy Address\r\n                    </Typography>\r\n                  </Copy>\r\n                )}\r\n                {chainId && account && (\r\n                  <Link\r\n                    className=\"address-link\"\r\n                    href={getEtherscanLink(\r\n                      chainId,\r\n                      ENSName ? ENSName : account,\r\n                      \"address\"\r\n                    )}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <LinkIcon size={16} />\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      View on Tronscan\r\n                    </Typography>\r\n                  </Link>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\r\n        <Box p=\"16px 24px\">\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            mb=\"16px\"\r\n          >\r\n            <Typography>Recent Transactions</Typography>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              onClick={clearAllTransactionsCallback}\r\n              sx={{ textTransform: \"lowercase\" }}\r\n            >\r\n              (clear all)\r\n            </Button>\r\n          </Box>\r\n          {renderTransactions(pendingTransactions)}\r\n          {renderTransactions(confirmedTransactions)}\r\n        </Box>\r\n      ) : (\r\n        <Typography p=\"16px 24px\">\r\n          Your transactions will appear here...\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nexport default function Option({\r\n  clickable = true,\r\n  onClick = null,\r\n  color,\r\n  header,\r\n  subheader = null,\r\n  icon,\r\n  active = false,\r\n  id,\r\n}: {\r\n  clickable?: boolean;\r\n  onClick?: null | (() => void);\r\n  color: string;\r\n  header: React.ReactNode;\r\n  subheader: React.ReactNode | null;\r\n  icon: string;\r\n  active?: boolean;\r\n  id: string;\r\n}) {\r\n  const content = (\r\n    <Box\r\n      className=\"option-card-clickable\"\r\n      onClick={onClick ? onClick : () => {}}\r\n      sx={{\r\n        backgroundColor: active ? \"#EDEEF2\" : \"#ffffff\",\r\n        borderColor: active ? \"transparent\" : \"#EDEEF2\",\r\n        \"&:hover\": {\r\n          cursor: clickable ? \"pointer\" : \"\",\r\n          border: clickable ? `1px solid #6164ff` : ``,\r\n        },\r\n      }}\r\n    >\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            color,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!active && <Box className=\"green-circle\" />}\r\n          {header}\r\n        </Box>\r\n        {subheader && (\r\n          <Typography fontSize=\"12px\" mt=\"10px\">\r\n            {subheader}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        component=\"img\"\r\n        src={icon}\r\n        alt={\"Icon\"}\r\n        sx={{ width: \"24px\", height: \"24px\" }}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  return content;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport Option from \"./Option\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\n\r\nexport default function PendingView({\r\n  connector,\r\n  error = false,\r\n  setPendingError,\r\n  tryActivation,\r\n}: {\r\n  connector?: AbstractConnector;\r\n  error?: boolean;\r\n  setPendingError: (error: boolean) => void;\r\n  tryActivation: (connector: AbstractConnector) => void;\r\n}) {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        mb=\"20px\"\r\n        sx={{\r\n          borderRadius: \"12px\",\r\n          border: `1px solid ${error ? \"#FF6871\" : \"#C3C5CB\"}`,\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }} p=\"16px\">\r\n          {error ? (\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography color=\"#FF6871\">Error connecting.</Typography>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: \"#ced0d9\",\r\n                  color: \"#000000\",\r\n                  lineHeight: \"1.5\",\r\n                  ml: \"8px\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#a8abb3\",\r\n                  },\r\n                }}\r\n                onClick={() => {\r\n                  setPendingError(false);\r\n                  connector && tryActivation(connector);\r\n                }}\r\n              >\r\n                Try Again\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Loader stroke=\"#000\" />\r\n              <Typography ml=\"8px\">Initializing...</Typography>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      {Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n        const option = SUPPORTED_WALLETS[key];\r\n        if (option.connector === connector) {\r\n          return (\r\n            <Option\r\n              id={`connect-${key}`}\r\n              key={key}\r\n              clickable={false}\r\n              color={option.color}\r\n              header={option.name}\r\n              subheader={option.description}\r\n              icon={require(\"../../assets/images/\" + option.iconName).default}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// modified from https://usehooks.com/usePrevious/\r\nexport default function usePrevious<T>(value: T) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef<T>();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dialog, Typography, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ReactGA from \"react-ga\";\r\nimport AccountDetails from \"components/AccountDetails\";\r\nimport Option from \"./Option\";\r\nimport PendingView from \"./PendingView\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport usePrevious from \"hooks/usePrevious\";\r\nimport { ApplicationModal } from \"state/application/actions\";\r\nimport { useModalOpen, useWalletModalToggle } from \"state/application/hooks\";\r\n\r\nconst WALLET_VIEWS = {\r\n  OPTIONS: \"options\",\r\n  OPTIONS_SECONDARY: \"options_secondary\",\r\n  ACCOUNT: \"account\",\r\n  PENDING: \"pending\",\r\n};\r\n\r\nexport default function WalletModal({\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n}: {\r\n  pendingTransactions: string[]; // hashes of pending\r\n  confirmedTransactions: string[]; // hashes of confirmed\r\n  ENSName?: string;\r\n}) {\r\n  // important that these are destructed from the account-specific web3-react context\r\n  const { active, account, connector, activate, error } = useWeb3React();\r\n\r\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\r\n\r\n  const [pendingWallet, setPendingWallet] = useState<\r\n    AbstractConnector | undefined\r\n  >();\r\n\r\n  const [pendingError, setPendingError] = useState<boolean>();\r\n\r\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const previousAccount = usePrevious(account);\r\n\r\n  // close on connection, when logged out before\r\n  useEffect(() => {\r\n    if (account && !previousAccount && walletModalOpen) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\r\n\r\n  // always reset to account view\r\n  useEffect(() => {\r\n    if (walletModalOpen) {\r\n      setPendingError(false);\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [walletModalOpen]);\r\n\r\n  // close modal when a connection is successful\r\n  const activePrevious = usePrevious(active);\r\n  const connectorPrevious = usePrevious(connector);\r\n  useEffect(() => {\r\n    if (\r\n      walletModalOpen &&\r\n      ((active && !activePrevious) ||\r\n        (connector && connector !== connectorPrevious && !error))\r\n    ) {\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [\r\n    setWalletView,\r\n    active,\r\n    error,\r\n    connector,\r\n    walletModalOpen,\r\n    activePrevious,\r\n    connectorPrevious,\r\n  ]);\r\n\r\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\r\n    let name = \"\";\r\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      if (connector === SUPPORTED_WALLETS[key].connector) {\r\n        return (name = SUPPORTED_WALLETS[key].name);\r\n      }\r\n      return true;\r\n    });\r\n    // log selected wallet\r\n    ReactGA.event({\r\n      category: \"Wallet\",\r\n      action: \"Change Wallet\",\r\n      label: name,\r\n    });\r\n    setPendingWallet(connector); // set wallet for pending view\r\n    setWalletView(WALLET_VIEWS.PENDING);\r\n\r\n    connector &&\r\n      activate(connector, undefined, true).catch((error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          activate(connector); // a little janky...can't use setError because the connector isn't set\r\n        } else {\r\n          console.error(error);\r\n          setPendingError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  // get wallets user can switch too, depending on device/browser\r\n  function getOptions() {\r\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      const option = SUPPORTED_WALLETS[key];\r\n      return (\r\n        <Option\r\n          id={`connect-${key}`}\r\n          onClick={() => {\r\n            option.connector === connector\r\n              ? setWalletView(WALLET_VIEWS.ACCOUNT)\r\n              : !option.href && tryActivation(option.connector);\r\n          }}\r\n          key={key}\r\n          active={option.connector === connector}\r\n          color={option.color}\r\n          header={option.name}\r\n          subheader={null} //use option.descriptio to bring back multi-line\r\n          icon={require(\"../../assets/images/\" + option.iconName).default}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  function getModalContent() {\r\n    if (error) {\r\n      return (\r\n        <Box>\r\n          <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography p=\"16px\">\r\n            {error instanceof UnsupportedChainIdError\r\n              ? \"Wrong Network\"\r\n              : \"Error connecting\"}\r\n          </Typography>\r\n          {error instanceof UnsupportedChainIdError ? (\r\n            <Typography\r\n              color=\"warning.main\"\r\n              sx={{ p: { xs: \"16px\", md: \"32px\" } }}\r\n            >\r\n              Please connect to the appropriate TRON network.\r\n            </Typography>\r\n          ) : (\r\n            <Typography color=\"error\" sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n              Error connecting. Try refreshing the page.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      );\r\n    }\r\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\r\n      return (\r\n        <AccountDetails\r\n          toggleWalletModal={toggleWalletModal}\r\n          pendingTransactions={pendingTransactions}\r\n          confirmedTransactions={confirmedTransactions}\r\n          ENSName={ENSName}\r\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\r\n          <Typography\r\n            color=\"primary.main\"\r\n            p=\"16px\"\r\n            sx={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setPendingError(false);\r\n              setWalletView(WALLET_VIEWS.ACCOUNT);\r\n            }}\r\n          >\r\n            Back\r\n          </Typography>\r\n        ) : (\r\n          <Typography p=\"16px\" sx={{ cursor: \"pointer\" }}>\r\n            Connect to a wallet\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n          {walletView === WALLET_VIEWS.PENDING ? (\r\n            <PendingView\r\n              connector={pendingWallet}\r\n              error={pendingError}\r\n              setPendingError={setPendingError}\r\n              tryActivation={tryActivation}\r\n            />\r\n          ) : (\r\n            <Box>{getOptions()}</Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={walletModalOpen}\r\n      onClose={toggleWalletModal}\r\n      sx={{\r\n        \"> .MuiDialog-container\": {\r\n          \"> .MuiPaper-root\": {\r\n            maxWidth: \"420px\",\r\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\" },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {getModalContent()}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useMemo } from \"react\";\r\nimport { Activity } from \"react-feather\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { injected } from \"connectors\";\r\nimport { NetworkContextName } from \"../../constants\";\r\nimport useENSName from \"hooks/useENSName\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\nimport {\r\n  isTransactionRecent,\r\n  useAllTransactions,\r\n} from \"state/transactions/hooks\";\r\nimport { TransactionDetails } from \"state/transactions/reducer\";\r\nimport { shortenAddress } from \"utils\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Loader from \"components/Loader\";\r\nimport WalletModal from \"components/WalletModal\";\r\nimport \"./web3-status.scss\";\r\n\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime;\r\n}\r\n\r\nconst SOCK = (\r\n  <span\r\n    role=\"img\"\r\n    aria-label=\"has socks emoji\"\r\n    style={{ marginTop: -4, marginBottom: -4 }}\r\n  >\r\n    🧦\r\n  </span>\r\n);\r\n\r\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\r\n  if (connector === injected) {\r\n    return <Identicon />;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Web3StatusInner() {\r\n  const { account, connector, error } = useWeb3React();\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  const hasPendingTransactions = !!pending.length;\r\n  const hasSocks = null;\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  if (account) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n        {hasPendingTransactions ? (\r\n          <>\r\n            <Typography mr=\"8px\">{pending?.length} Pending</Typography>{\" \"}\r\n            <Loader />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {hasSocks ? SOCK : null}\r\n            <Typography mr=\"8px\" ml=\"4px\">\r\n              {ENSName || shortenAddress(account)}\r\n            </Typography>\r\n          </>\r\n        )}\r\n        {!hasPendingTransactions && connector && (\r\n          <StatusIcon connector={connector} />\r\n        )}\r\n      </Button>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"error\" onClick={toggleWalletModal}>\r\n        <Activity className=\"network-icon\" />\r\n        <Typography ml=\"4px\">\r\n          {error instanceof UnsupportedChainIdError ? \"Wrong Network\" : \"Error\"}\r\n        </Typography>\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n          Connect Wallet\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Web3Status() {\r\n  const { account } = useWeb3React();\r\n\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n  const confirmed = sortedRecentTransactions\r\n    .filter((tx) => tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  // if (!contextNetwork.active && !active) {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Web3StatusInner />\r\n      <WalletModal\r\n        ENSName={ENSName ?? undefined}\r\n        pendingTransactions={pending}\r\n        confirmedTransactions={confirmed}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Link,\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nimport DiscordIcon from \"assets/images/discord-brands.svg\";\r\nimport \"./header.scss\";\r\n\r\nimport Web3Status from \"components/Web3Status\";\r\n\r\nconst menuLists = [\r\n  {\r\n    link: \"/play\",\r\n    text: \"Play War\",\r\n  },\r\n  {\r\n    link: \"/stake\",\r\n    text: \"Meow Staking\",\r\n  },\r\n  \r\n];\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleClickMenu = (link: string) => {\r\n    handleCloseUserMenu();\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      className=\"appbar\"\r\n      sx={{ backgroundColor: \"rgba(9,9,10,1)\" }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar\r\n          disableGutters\r\n          sx={{ justifyContent: \"space-between\", columnGap: \"8px\" }}\r\n        >\r\n          <Link href=\"/\" className=\"logo\" sx={{textDecoration: 'none'}}>\r\n            {/* <Box component=\"img\" src={LogoImage} alt=\"logo\" /> */}\r\n            <Typography fontFamily=\"Audiowide\" sx={{fontSize: {xs: '24px', sm: '36px', md: '40px'}}}>Catz Fight</Typography>\r\n          </Link>   \r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", columnGap: \"8px\" }}>\r\n            <Box\r\n              className=\"social-buttons\"\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              <Button\r\n                href=\"https://twitter.com/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"               \r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TwitterIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://t.me/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TelegramIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://discord.gg/warchest\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <Box component=\"img\" src={DiscordIcon} alt=\"\" />\r\n              </Button>\r\n            </Box>\r\n            <Web3Status />            \r\n            <Button\r\n              onClick={handleOpenUserMenu}\r\n              className=\"menu-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{\r\n                backgroundColor: 'rgba(101,230,255,0.12)', \r\n                '&: hover': {\r\n                  backgroundColor: 'rgba(101,230,255,0.15)'                                     \r\n                }          \r\n              }} \r\n            >\r\n              <MenuIcon sx={{ \r\n                color: 'rgba(101,230,255,0.9)',\r\n                '&: hover': {\r\n                  color: 'rgba(101,230,255,1)',\r\n                }\r\n              }} \r\n              />\r\n            </Button>            \r\n            <Menu              \r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n              sx={{\r\n                mt: \"45px\"                        \r\n              }} \r\n            >\r\n              <MenuItem component=\"a\" href=\"https://www.cryptomooncatz.com\"\r\n                sx={{\r\n                  backgroundColor: 'rgba(101,230,255,0.12)',\r\n                  color: 'rgba(101,230,255,0.9)'\r\n                }}>\r\n                Home\r\n              </MenuItem>\r\n              {menuLists.map((list, key) => (\r\n                <MenuItem key={key} \r\n                  sx={{\r\n                    backgroundColor: 'rgba(101,230,255,0.12)',\r\n                    color: 'rgba(101,230,255,0.9)'\r\n                  }}\r\n                onClick={() => handleClickMenu(list.link)}>\r\n                  {list.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Box } from \"@mui/material\";\r\nimport \"./banner.scss\";\r\nimport BannerImage1 from \"assets/images/ban1.png\";\r\nimport BannerImage2 from \"assets/images/ban2.png\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <>\r\n      <Box className=\"banner-container\">\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            width: { xs: \"120px\", sm: \"150px\" },\r\n            mr: { xs: 1, sm: 2, md: 3 },\r\n          }}\r\n          src={BannerImage1}\r\n          alt=\"Banner Image\"\r\n        />\r\n        <Box\r\n          component=\"img\"\r\n          sx={{ width: { xs: \"120px\", sm: \"150px\" } }}\r\n          src={BannerImage2}\r\n          alt=\"Banner Image\"\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { Color } from \"@material-ui/lab/Alert\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Message = IMessage & {\r\n  severity: Color;\r\n};\r\n\r\nexport interface MessagesState {\r\n  message: Message | null;\r\n}\r\n\r\ninterface IMessage {\r\n  text: string;\r\n  error?: any;\r\n}\r\n\r\n// Adds a message to the store\r\nconst createMessage = function (\r\n  state: MessagesState,\r\n  severity: Color,\r\n  text: IMessage\r\n) {\r\n  const message: Message = {\r\n    severity,\r\n    ...text,\r\n  };\r\n  state.message = message;\r\n};\r\nconst initialState: MessagesState = {\r\n  message: null,\r\n};\r\nconst messagesSlice = createSlice({\r\n  name: \"messages\",\r\n  initialState,\r\n  reducers: {\r\n    // Creates an error message\r\n    error(state, action: PayloadAction<IMessage>) {\r\n      createMessage(state, \"error\", action.payload);\r\n    },\r\n    // Creates an information message\r\n    info(state, action: PayloadAction<IMessage>) {\r\n      createMessage(state, \"info\", action.payload);\r\n    },\r\n    warning(state, action: PayloadAction<IMessage>) {\r\n      createMessage(state, \"warning\", action.payload);\r\n    },\r\n    success(state, action: PayloadAction<IMessage>) {\r\n      createMessage(state, \"success\", action.payload);\r\n    },\r\n    // Closes a message\r\n    close(state) {\r\n      state.message = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { error, info, close, warning, success } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","import { Dispatch } from \"redux\";\r\nimport { error } from \"../store/slices/messages-slice\";\r\nimport { messages } from \"../constants/messages\";\r\n\r\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\r\n    let text = messages.something_wrong;\r\n\r\n    if (err.code && err.code === -32603) {\r\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\r\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\r\n        }\r\n\r\n        if (err.data && err.data.message) {\r\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\r\n            text = \"Insufficient balance to make a transaction\";\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\r\n            text = \"Bond too small\";\r\n        }\r\n    }\r\n\r\n    if (err.code && err.code === 4001) {\r\n        if (err.message.includes(\"User denied transaction signature\")) {\r\n            text = \"User denied transaction signature\";\r\n        }\r\n    }\r\n\r\n    return dispatch(error({ text, error: err }));\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IPendingTxn {\r\n  readonly txnHash: string;\r\n  readonly text: string;\r\n  readonly type: string;\r\n}\r\n\r\nconst initialState: Array<IPendingTxn> = [];\r\n\r\nconst pendingTxnsSlice = createSlice({\r\n  name: \"pendingTransactions\",\r\n  initialState,\r\n  reducers: {\r\n    fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\r\n      state.push(action.payload);\r\n    },\r\n    clearPendingTxn(state, action: PayloadAction<string>) {\r\n      const target = state.find((x) => x.txnHash === action.payload);\r\n      if (target) {\r\n        state.splice(state.indexOf(target), 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const getStakingTypeText = (action: string) => {\r\n  return action.toLowerCase() === \"stake\"\r\n    ? \"Staking KANDY\"\r\n    : \"Unstaking SKANDY\";\r\n};\r\n\r\nexport const getWrapingTypeText = (isWrap: boolean) => {\r\n  return isWrap ? \"Wrap SKANDY\" : \"Unwrap wSKANDY\";\r\n};\r\n\r\nexport const isPendingTxn = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string\r\n) => {\r\n  return pendingTransactions.map((x) => x.type).includes(type);\r\n};\r\n\r\nexport const txnButtonText = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string,\r\n  defaultText: string\r\n) => {\r\n  return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\r\n};\r\n\r\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\r\n\r\nexport default pendingTxnsSlice.reducer;\r\n","export const setAll = (state: any, properties: any) => {\r\n    const props = Object.keys(properties);\r\n    props.forEach(key => {\r\n        state[key] = properties[key];\r\n    });\r\n};\r\n","import { Store } from 'react-notifications-component';\r\n\r\ninterface INotification {\r\n    title: string,\r\n    message? : string,\r\n    type: 'success' | 'danger' | 'info' | 'default' | 'warning'\r\n}\r\n\r\nexport const notification = ({ title, message=\"\", type }: INotification) => {\r\n    return Store.addNotification({\r\n        title: title,\r\n        message: message,\r\n        type: type,\r\n        insert: \"bottom\",\r\n        container: \"bottom-right\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n            duration: 5000,\r\n            onScreen: true\r\n        }\r\n    });\r\n}","import {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { clearPendingTxn } from \"./pending-txns-slice\";\r\nimport axios from \"axios\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { SHASTA_TESTNET } from \"../../constants/addresses\";\r\nimport tronWeb from \"tronweb\";\r\nimport io from \"socket.io-client\";\r\nimport { notification } from \"utils/notification\";\r\n\r\ninterface IenterRoomMeow {\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: any;\r\n  gamePrice: number;\r\n}\r\n\r\ndeclare var window: any;\r\nconst socket = io(\"http://54.176.107.208\");\r\n\r\nexport const EnterRoom = createAsyncThunk(\r\n  \"enterRoom/enterRoomMeow\",\r\n  async (\r\n    {\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      address,\r\n      gamePrice,\r\n    }: IenterRoomMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    try {\r\n      enterTx = await meowContract\r\n        .enterRoom(tokenId, fightRoom)\r\n        .send({ feeLimit: 1000000000, callValue: gamePrice });\r\n\r\n      let receipt = null;\r\n      let attempts = 0;\r\n      while ((receipt === 'REVERT' || receipt == null) && attempts < 1000) { // give up after 10 attempts\r\n        if (window.tronWeb) {\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          if (transaction && transaction.ret && transaction.ret.length > 0) {\r\n            receipt = transaction.ret[0].contractRet;\r\n          }\r\n          console.log('receipt: ', receipt, enterTx);\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n        attempts++;\r\n      }\r\n      const random_tmp = ((await meowContract.randoms(fightRoom, 0).call())).toNumber();\r\n      await axios.post(\r\n        `http://54.176.107.208/api/betting/create?roomnum=${whichroom}&firstNFT=${url}&firstaddress=${address}&fightRoom=${fightRoom}&firstRandom=${random_tmp}&firstId=${tokenId}`\r\n      );\r\n      notification({ title: \"Successfully Entered!\", type: \"success\"});\r\n      socket.emit(\"enter\");\r\n      return;\r\n    } catch (err: any) {\r\n      notification({ title: `${err}`, type: \"danger\"});\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface IWidrawNFT {\r\n  address: any\r\n}\r\n\r\nexport const widrawNFT = createAsyncThunk(\r\n  \"widrawNFT/widrawNFT\",\r\n\r\n  async ({ address }: IWidrawNFT) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let usersData: any;\r\n    await axios\r\n      .get(`http://54.176.107.208/api/userinfo/find?address=${address}`)\r\n      .then((res) => {usersData = res.data;});\r\n\r\n    try {\r\n      await meowContract.claimNFT(usersData.ownNfts).send({ feeLimit: 100000000 });\r\n      await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=${0}&claimAmount=0&ownNfts=[-1]`);\r\n      notification({ title: \"Successfully Withdrew!\", type: \"success\"});\r\n      socket.emit(\"enter\");\r\n      return;\r\n    } catch (err: any) {\r\n      notification({ title: `${err}`, type: \"danger\"});\r\n      return;\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IClaimMoney {\r\n  address: any\r\n}\r\n\r\nexport const claimMoney = createAsyncThunk(\r\n  \"claimMoney/claimMoney\",\r\n\r\n  async ({ address }: IClaimMoney) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let usersData: any;\r\n    await axios\r\n      .get(`http://54.176.107.208/api/userinfo/find?address=${address}`)\r\n      .then((res) => {usersData = res.data;});\r\n\r\n    try {\r\n      await meowContract.claimMoney(usersData.claimAmount).send({ feeLimit: 100000000 });\r\n      await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=${0}&claimAmount=-1&ownNfts=[]`);\r\n      notification({ title: \"Successfully Withdrew!\", type: \"success\"});\r\n      socket.emit(\"enter\");\r\n    } catch (err: any) {\r\n      notification({ title: `${err}`, type: \"danger\"});\r\n      return;\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IclaimFightMeow {\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  waitingRandom: number;\r\n  address: any;\r\n  gamePrice: number;\r\n}\r\n\r\nexport const ClaimFight = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async (\r\n    {\r\n      tokenId,\r\n      fightRoom,\r\n      whichroom,\r\n      url,\r\n      waitingRandom,\r\n      address,\r\n      gamePrice,\r\n    }: IclaimFightMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n\r\n    let enterTx;\r\n    let random1: number[] = [];\r\n    let random2: number[] = [];\r\n    try {\r\n      enterTx = await meowContract\r\n      .claimFight(tokenId, fightRoom)\r\n      .send({ feeLimit: 200000000, callValue: gamePrice });\r\n\r\n      let receipt = null;\r\n      while ((receipt === 'REVERT' || receipt == null)) {\r\n        if (window.tronWeb) {\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          if (transaction && transaction.ret && transaction.ret.length > 0) {\r\n            receipt = transaction.ret[0].contractRet;\r\n          }\r\n          console.log('receipt: ', receipt, enterTx);\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n\r\n      const random_tmp = ((await meowContract.randoms(fightRoom, 1).call())).toNumber();\r\n\r\n      axios.post(`http://54.176.107.208/api/betting/update?roomnum=${whichroom}&secondNFT=${url}&secondaddress=${address}&secondRandom=${random_tmp}&secondId=${tokenId}`);\r\n      let firstrandom = waitingRandom;\r\n      let secondrandom = random_tmp;\r\n      random1[whichroom] = firstrandom;\r\n      random2[whichroom] = secondrandom;\r\n\r\n      let winnerData: any;\r\n      let flag: boolean = false;\r\n      let resultData: any;\r\n      let usersData: any;\r\n\r\n      await axios.post(`http://54.176.107.208/api/random/create?randomNumber1=${firstrandom}&randomNumber2=${secondrandom}&roomnum=${fightRoom}`);\r\n      await axios\r\n        .get(`http://54.176.107.208/api/betting/find?fightRoom=${fightRoom}`)\r\n        .then((res) => {resultData = res.data;});\r\n      const jackpotAmount = (await meowContract.jackpotAmount().call()).toNumber() / Math.pow(10, 6);\r\n      await axios\r\n        .get(`http://54.176.107.208/api/userinfo`)\r\n        .then((res) => {usersData = res.data;});\r\n      \r\n      let totalStake = 0;\r\n      for(let i = 0; i < usersData.length; i ++) {\r\n        totalStake += usersData[i].stakeAmount;\r\n      }\r\n      if(firstrandom === 77777) {\r\n        if(secondrandom === 77777) {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n        } else {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 4 / 10}&ownNfts=[]`);\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 1 / 10}&ownNfts=[]`);\r\n        }\r\n        \r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${usersData[i].address}&stakeAmount=0&claimAmount=${jackpotAmount * usersData[i].stakeAmount * 4 / totalStake / 10 }&ownNfts=[]`);\r\n        }\r\n        alert('You hit the Jackpot. Receive the award!!!!!');\r\n        await meowContract.setJackpot(jackpotAmount / 10);\r\n      }\r\n\r\n      if(secondrandom === 77777) {\r\n        if(firstrandom === 77777) {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 5 / 20}&ownNfts=[]`);\r\n        } else {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${jackpotAmount * 4 / 10}&ownNfts=[]`);\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${jackpotAmount * 1 / 10}&ownNfts=[]`);\r\n        }\r\n        for(let i = 0; i < usersData.length; i ++) {\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${usersData[i].address}&stakeAmount=0&claimAmount=${jackpotAmount * usersData[i].stakeAmount * 4 / totalStake / 10 }&ownNfts=[]`);\r\n        }\r\n        alert('You hit the Jackpot. Receive the award!!!!!');\r\n        await meowContract.setJackpot(jackpotAmount / 10);\r\n      }\r\n\r\n      if (firstrandom > secondrandom) {\r\n        await axios\r\n          .get(`http://54.176.107.208/api/winner/find?address=${resultData.firstaddress}`)\r\n          .then((res) => {winnerData = res.data;});\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice * 6 / 5 : gamePrice * 6}&ownNfts=[${tokenId},${resultData.firstId}]`);\r\n      } else if (firstrandom < secondrandom) {\r\n        await axios\r\n          .get(`http://54.176.107.208/api/winner/find?address=${address}`)\r\n          .then((res) => {winnerData = res.data;});\r\n          await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice * 6 / 5 : gamePrice * 6}&ownNfts=[${tokenId},${resultData.firstId}]`);\r\n      } else {\r\n        await axios.post(`http://54.176.107.208/api/userinfo/create?address=${resultData.firstaddress}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice : gamePrice * 5}&ownNfts=[${resultData.firstId}]`);\r\n        await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=0&claimAmount=${whichroom < 3 ? gamePrice : gamePrice * 5}&ownNfts=[${tokenId}]`);\r\n        flag = true;\r\n      }\r\n\r\n      if (winnerData) {\r\n        await axios.post(`http://54.176.107.208/api/winner/update?address=${winnerData.address}&winCount=${winnerData.winCount + 1}`);\r\n      } else {\r\n        if (!flag) {\r\n          if (firstrandom > secondrandom) {\r\n            await axios.post(`http://54.176.107.208/api/winner/create?address=${resultData.firstaddress}&winCount=${1}`);\r\n          } else if (firstrandom < secondrandom) {\r\n            await axios.post(`http://54.176.107.208/api/winner/create?address=${address}&winCount=${1}`);\r\n          }\r\n        }\r\n      }\r\n\r\n      await axios.post(`http://54.176.107.208/api/result/create?randomNumber1=${firstrandom}&randomNumber2=${secondrandom}&nftUrl1=${resultData.firstNFT}&nftUrl2=${resultData.secondNFT}&address1=${resultData.firstaddress}&address2=${address}&roomnum=${fightRoom}`);\r\n      socket.emit(\"enter\");\r\n\r\n      notification({ title: \"Successfully Entered!\", type: \"success\"});\r\n      return {\r\n        random1,\r\n        random2,\r\n      };\r\n    } catch (err: any) {\r\n      notification({ title: `${err}`, type: \"danger\"});\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IWinSlice {\r\n  random1: number[];\r\n  random2: number[];\r\n}\r\n\r\nconst fightSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(EnterRoom.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(EnterRoom.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(EnterRoom.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(widrawNFT.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(widrawNFT.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(widrawNFT.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(ClaimFight.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.fight;\r\n\r\nexport default fightSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = fightSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (fight) => fight);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\n\r\ninterface IwalletInfo {\r\n  account: any;\r\n}\r\n\r\nexport const walletInfo = createAsyncThunk(\r\n  'nft/walletInfo',\r\n  async ({ account }: IwalletInfo) => {\r\n    let tmpData: any;\r\n    let usersData: any;\r\n    await axios\r\n      .get(`http://54.176.107.208/api/userinfo`)\r\n      .then((res) => {usersData = res.data;});\r\n  \r\n    let totalStake = 0;\r\n    for(let i = 0; i < usersData.length; i ++) {\r\n      totalStake += usersData[i].stakeAmount;\r\n    }\r\n\r\n    await axios\r\n      .get(`http://54.176.107.208/api/userinfo/find?address=${account}`)\r\n      .then((res) => {tmpData = res.data});\r\n\r\n    let nftCount = tmpData?.ownNfts.length;\r\n    let nftInfo: number[] = tmpData?.ownNfts;\r\n    let trxAmount = tmpData?.claimAmount / 1000000;\r\n    let stakeAmount = tmpData?.stakeAmount;\r\n    return {\r\n      nftCount,\r\n      trxAmount,\r\n      stakeAmount,\r\n      totalStake,\r\n      nftInfo,\r\n    };\r\n  }\r\n)\r\n\r\nexport interface IWalletInfoDetail {\r\n  nftCount: number;\r\n  trxAmount: number;\r\n  stakeAmount: number;\r\n  totalStake: number;\r\n  nftInfo: number[];\r\n}\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(walletInfo.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(walletInfo.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(walletInfo.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nfts;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nfts) => nfts);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { claimMoney, widrawNFT } from \"store/slices/play-slice\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { walletInfo } from \"store/slices/walletInfo-slice\";\r\n\r\nconst availableStyle = {\r\n  paddingY: \"4px\",\r\n  textAlign: \"center\",\r\n  fontSize: \"18px\",\r\n  color: \"#F39B33\",\r\n};\r\n\r\nconst Jackpot = () => {\r\n  const { account } = useWeb3React();\r\n\r\n  const JackpotAmount = useSelector<IReduxState, string>(\r\n    (state) => state.app.jackpotAmount\r\n  );\r\n  const meowCount: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.meowCount\r\n  );\r\n  let contractNFTs: number = useSelector<IReduxState, number>(\r\n    (state) => state.wallet.nftCount\r\n  );\r\n  let widrawAmount: number = useSelector<IReduxState, number>(\r\n    (state) => state.wallet.trxAmount\r\n  );\r\n\r\n  const history = useHistory();\r\n  const handleClickStake = (link: string) => {\r\n    history.push(link);\r\n  };\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n   const onWidrawNFT = useCallback(async() => {\r\n    let widrawState = await dispatch(widrawNFT({ address: account }));\r\n    if (widrawState.meta.requestStatus === \"fulfilled\") {\r\n      getAvailableData();\r\n    }\r\n  }, [account]);\r\n\r\n  const onClaimMoney = useCallback(async() => {\r\n    let claimState = await dispatch(claimMoney({ address: account }));\r\n    if (claimState.meta.requestStatus === \"fulfilled\") {\r\n      getAvailableData();\r\n    }\r\n  }, [account]);\r\n\r\n  const getAvailableData = useCallback(() => {\r\n    dispatch(walletInfo({ account: account }));\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      getAvailableData();\r\n    }\r\n  }, [account]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingY: \"3px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#FF1E1E\",\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          py: 1,\r\n          px: { xs: 1, sm: 3 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"400px\", sm: \"615px\" },\r\n          textAlign: \"center\",\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        War Chest Jackpot: {JackpotAmount} TRX\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"self-start\",\r\n          pb: 6,\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box>\r\n            <Button\r\n              sx={{\r\n                paddingX: \"16px\",\r\n                paddingY: \"6px\",\r\n                marginTop: \"8px\",\r\n                fontSize: \"18px\",\r\n                mr: 3,\r\n                color: \"rgba(101,230,255,1)\",\r\n                backgroundColor: \"rgba(101,230,255,0.15)\",\r\n              }}\r\n            >\r\n              Deposit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ mr: 3, textAlign: \"center\" }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n            onClick={() => {\r\n              onWidrawNFT();\r\n            }}\r\n          >\r\n            Withdraw NFTs\r\n          </Button>\r\n          <Typography sx={availableStyle}>\r\n            Available NFTs: {contractNFTs ? contractNFTs : 0} NFTs\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3, textAlign: \"center\" }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n            onClick={() => {\r\n              onClaimMoney();\r\n            }}\r\n          >\r\n            Withdraw TRX\r\n          </Button>\r\n          <Typography sx={availableStyle}>\r\n            Available TRX: {widrawAmount ? widrawAmount : 0} TRX\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              borderRadius: \"24px\",\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              border: \"1px solid white\",\r\n              color: \"white\",\r\n              mx: \"auto\",\r\n              fontSize: \"18px\",\r\n              marginTop: \"8px\",\r\n              display: \"block\",\r\n            }}\r\n            onClick={() => {\r\n              handleClickStake(\"stake\");\r\n            }}\r\n          >\r\n            Meow Staking\r\n          </Button>\r\n          <Typography sx={availableStyle}>\r\n            Available Meow: {meowCount}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#fff\",\r\n          fontSize: { xs: \"20px\", xl: \"24px\" },\r\n          py: 1,\r\n          px: { xs: 1, xl: 2 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"400px\", sm: '450px', xl: \"600px\" },\r\n          textAlign: \"center\",\r\n          position: { md: \"absolute\" },\r\n          mx: \"auto\",\r\n          left: \"6px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        MEOW left to be mined: 99,999,980\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Jackpot;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Role = () => {\r\n  const randomData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.randomData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"18px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Numbers Rolled:\r\n      </Typography>\r\n      {randomData && randomData.map((data, index) => (\r\n        <Box key={index}>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber1}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber2}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","import {\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\n\r\nconst Winner = () => {\r\n  const winnerData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.winnerData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"20px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n        }}\r\n      >\r\n        Top 10 Winners\r\n      </Typography>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Wins:\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Address:\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          {winnerData && winnerData.map((data, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {data.winCount}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {`${data.address.slice(0,4)}...${data.address.slice(-4)}`}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { SHASTA_TESTNET } from '../../constants/addresses';\r\nimport tronWeb from 'tronweb';\r\nimport { notification } from \"utils/notification\";\r\n\r\ninterface IapproveNFT {\r\n  tokenId: Number;\r\n}\r\n\r\ndeclare var window: any\r\n\r\nexport const approveNFT = createAsyncThunk(\r\n  \"NFT/loadMFTDetails\",\r\n  //@ts-ignore\r\n  async ({ tokenId }: IapproveNFT, { dispatch }) => {\r\n    let nftContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(SHASTA_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    try {\r\n      await nftContract.approve(\r\n        SHASTA_TESTNET.MEOW_ADDRESS,\r\n        tokenId\r\n      ).send({ feeLimit: 100000000 });\r\n\r\n      notification({ title: \"Successfully approved!\", type: \"success\"});\r\n      return;\r\n    } catch (err: any) {\r\n      notification({ title: `${err}`, type: \"danger\"});\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n    }\r\n  }\r\n);\r\n\r\ninterface IloadNftAllowance {\r\n  tokenIds: Number[];\r\n}\r\n\r\nexport const loadNftAllowance = createAsyncThunk(\r\n  \"app/loadNftAllowance\",\r\n  //@ts-ignore\r\n  async ({ tokenIds }: IloadNftAllowance) => {\r\n    let nftContract: any;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(SHASTA_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let allowtmp: String[] = [];\r\n    await Promise.all(\r\n      tokenIds.map(async (tokenId, index) => {\r\n        allowtmp[index] = await nftContract.getApproved(tokenId).call();\r\n      })\r\n    );\r\n    let allows: boolean[] = [];\r\n    allowtmp.map((allow, index) => {\r\n      allows[index] = allow === tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS);\r\n    });\r\n    return {\r\n      allowances: allows,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface INFTSlice {\r\n  allowances: boolean[];\r\n  loading: boolean;\r\n}\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(loadNftAllowance.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(loadNftAllowance.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(loadNftAllowance.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nft;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nft) => nft);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { SHASTA_TESTNET } from '../../constants/addresses';\r\nimport tronWeb from 'tronweb';\r\n\r\ndeclare var window: any\r\n\r\ninterface IloadNftDetails {\r\n  account: any;\r\n}\r\n\r\nexport const loadNftDetails = createAsyncThunk(\r\n  'nft/loadNftDetails',\r\n  async ({ account }: IloadNftDetails) => {\r\n    let nftContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(SHASTA_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let nftids: any[] = [];\r\n    let nfturl: string;\r\n    let nfturis: any[] = [];\r\n    nfturl = await nftContract.tokenURI(1).call();\r\n    const nft_counts = await nftContract.balanceOf(account).call();\r\n    for (let i = 0; i < Math.min(nft_counts, 6); i++) {\r\n      let tmptokenID = await nftContract.tokenOfOwnerByIndex(account, i).call();\r\n      nftids[i] = tronWeb.toDecimal(tmptokenID);\r\n    }\r\n    for (let i = 0; i < Math.min(nft_counts, 6); i++) {\r\n      nfturis[i] = `https://ipfs.io/ipfs/${nfturl.slice(7, 53)}/${\r\n        nftids[i]\r\n      }.png`;\r\n    }\r\n    return {\r\n      nftids,\r\n      nfturis,\r\n      nfturl,\r\n    };\r\n  }\r\n)\r\n\r\nexport interface INftDetailSlice {\r\n  nftids: any[];\r\n  nfturis: any[];\r\n  nfturl: string;\r\n  // contractNFTs: number;\r\n}\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(loadNftDetails.pending, (state, action) => {\r\n      state.loading = true;\r\n    })\r\n    .addCase(loadNftDetails.fulfilled, (state, action) => {\r\n      setAll(state, action.payload);\r\n      state.loading = false;\r\n    })\r\n    .addCase(loadNftDetails.rejected, (state, { error }) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nfts;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nfts) => nfts);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\nimport TronWeb from \"tronweb\";\r\nimport { SHASTA_TESTNET } from \"../../constants/addresses\";\r\n\r\ninterface ILoadGameDetails {\r\n  account: any;\r\n}\r\n\r\ndeclare var window: any;\r\n\r\nexport const loadGameDetails = createAsyncThunk(\r\n  \"app/loadGameDetails\",\r\n  async ({ account }: ILoadGameDetails ) => {\r\n    let meowContract, meowTokenContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb.contract().at(TronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n        meowTokenContract = await window.tronWeb.contract().at(TronWeb.address.toHex(SHASTA_TESTNET.MEOWTOKEN_ADDRESS));\r\n      }\r\n    }\r\n\r\n    let gameData: any[] = [];\r\n    let randomData: any[] = [];\r\n    let resultData: any[] = [];\r\n    let winnerData: any[] = [];\r\n\r\n    await axios.get(`http://54.176.107.208/api/betting`).then((res) => {\r\n      gameData = res.data;\r\n    });\r\n    await axios.get(`http://54.176.107.208/api/random`).then((res) => {\r\n      randomData = res.data;\r\n    });\r\n    await axios.get(`http://54.176.107.208/api/result`).then((res) => {\r\n      resultData = res.data;\r\n    });\r\n    await axios.get(`http://54.176.107.208/api/winner`).then((res) => {\r\n      winnerData = res.data;\r\n    });\r\n    const gameprice = ((await meowContract.gamePrice().call())).toString();\r\n    const jackpotAmount = ((await meowContract.jackpotAmount().call()) / Math.pow(10, 6)).toString();\r\n    const meowCount = (await meowTokenContract.balanceOf(account).call()).toString();\r\n    return {\r\n      gameprice,\r\n      jackpotAmount,\r\n      gameData,\r\n      randomData,\r\n      resultData,\r\n      winnerData,\r\n      meowCount,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  \r\n};\r\n\r\nexport interface IAppSlice {\r\n  gameprice: string;\r\n  jackpotAmount: string;\r\n  gameData: any[];\r\n  allowflg: boolean;\r\n  currentData: any;\r\n  loading: boolean;\r\n  randomData: any[];\r\n  resultData: any[];\r\n  winnerData: any[];\r\n  widrawAmount: number;\r\n  meowCount: string;\r\n}\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadGameDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadGameDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadGameDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.app;\r\n\r\nexport default gameSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = gameSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (app) => app);\r\n","export const fightStyle = {\r\n  fontSize: { xs: \"32px\", sm: \"34px\", md: \"50px\" },\r\n  fontFamily: \"Georgia\",\r\n  fontWeight: \"900\",\r\n  color: \"white\",\r\n  lineHeight: { xs: \"32px\", sm: \"40px\", md: \"64px\" },\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport const randomNumberStyle = {\r\n  fontSize: { xs: \"12px\", sm: \"16px\", md: \"20px\" },\r\n  color: \"white\",\r\n  fontWeight: \"900\",\r\n  fontFamily: \"Georgia\",\r\n};\r\n\r\nexport const roomStyleAvatar = {\r\n  width: { xs: \"120px\", sm: \"120px\", md: \"200px\" },\r\n  height: { xs: \"110px\", sm: \"140px\", md: \"200px\" },\r\n  borderRadius: \"12px\",\r\n};\r\n\r\nexport const buttonStyle = {\r\n  fontSize: { xs: \"15px\", sm: \"18px\" },\r\n  textAlign: \"center\",\r\n  position: \"absolute\",\r\n};\r\n\r\nexport const roomStyleBack = {\r\n  width: { xs: \"180px\", sm: \"240px\", md: \"300px\" },\r\n  height: { xs: \"240px\", sm: \"300px\", md: \"400px\" },\r\n};\r\n\r\nexport const style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"400px\", sm: \"500px\", md: \"700px\", lg: \"1000px\" },\r\n  height: \"600px\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  backgroundColor: \"rgba(38,40,42)\",\r\n  borderRadius: 8,\r\n  overflowY: \"scroll\",\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"8px\",\r\n    backgroundColor: \"#555\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    borderRadius: \"8px\",\r\n    backgroundColor: \"#333\",\r\n  },\r\n};\r\n\r\nexport const avatarsStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  flexWrap: \"wrap\",\r\n}\r\n\r\nexport const modalAvatarStyle = {\r\n  width: {\r\n    sx: \"60px\",\r\n    sm: \"100px\",\r\n    md: \"150px\",\r\n    lg: \"230px\",\r\n  },\r\n  height: {\r\n    sx: \"60px\",\r\n    sm: \"100px\",\r\n    md: \"150px\",\r\n    lg: \"230px\",\r\n  },\r\n  borderRadius: \"12px\",\r\n};\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\n\r\ninterface IBattleDetails {\r\n  openState: boolean,\r\n  claimState: boolean,\r\n  whichroom: number,\r\n  whichfight: number,\r\n  waitingRandom: number,\r\n  decide: boolean,\r\n}\r\n\r\nexport const loadBattleDetails = createAsyncThunk(\r\n  \"app/loadBattleDetails\",\r\n  async ({ openState, claimState, whichfight, whichroom, waitingRandom, decide }: IBattleDetails ) => {\r\n    return {\r\n      openState,\r\n      claimState,\r\n      whichfight,\r\n      whichroom,\r\n      waitingRandom,\r\n      decide,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  openState: false,\r\n  claimState: false,\r\n  whichroom: 0,\r\n  whichfight: 0,\r\n  waitingRandom: 0,\r\n  decide: false,\r\n};\r\n\r\nexport interface IBattleSlice {\r\n  loading: boolean,\r\n  openState: boolean,\r\n  claimState: boolean,\r\n  whichroom: number,\r\n  whichfight: number,\r\n  waitingRandom: number,\r\n  decide: boolean,\r\n}\r\n\r\nconst battleSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadBattleDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadBattleDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadBattleDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.battle;\r\n\r\nexport default battleSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = battleSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (battle) => battle);\r\n","export const getDate = () => {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n  let hour = date.getHours();\r\n  let minute = date.getMinutes();\r\n  let second = date.getSeconds();\r\n  let number =\r\n    year * Math.pow(10, 10) +\r\n    month * Math.pow(10, 8) +\r\n    day * Math.pow(10, 6) +\r\n    hour * Math.pow(10, 4) +\r\n    minute * Math.pow(10, 2) +\r\n    second;\r\n  return number;\r\n};\r\n","import { Box, Button, Skeleton } from \"@mui/material\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { avatarsStyle, modalAvatarStyle, style } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"state\";\r\nimport { loadBattleDetails } from \"store/slices/battle-slice\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { approveNFT, loadNftAllowance } from \"store/slices/NFt-slice\";\r\nimport { getDate } from \"./getDate\";\r\nimport { EnterRoom } from \"store/slices/play-slice\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nexport function SampleModal() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { account } = useWeb3React();\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n  const nfturis: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nfturis\r\n  );\r\n  const isLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.nft.loading\r\n  );\r\n  const allowFlg: boolean[] = useSelector<IReduxState, boolean[]>(\r\n    (state) => state.nft.allowances\r\n  );\r\n  const openState: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.battle.openState\r\n  );\r\n  const whichroom: number = useSelector<IReduxState, number>(\r\n    (state) => state.battle.whichroom\r\n  );\r\n  const gamePrice: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.gameprice\r\n  );\r\n  const nftInfo: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.wallet.nftInfo\r\n  );\r\n  const baseUri: string = useSelector<IReduxState, string>(\r\n    (state) => state.nfts.nfturl\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  const approve = useCallback(async (id: Number) => {\r\n    await dispatch(\r\n      approveNFT({\r\n        tokenId: id,\r\n      })\r\n    );\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }, []);\r\n\r\n  const closeModal = useCallback(async () => {\r\n    dispatch(\r\n      loadBattleDetails({\r\n        openState: false,\r\n        claimState: false,\r\n        whichroom: 0,\r\n        whichfight: 0,\r\n        waitingRandom: 0,\r\n        decide: false,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const onEnterRoom = useCallback(\r\n    async (id: number) => {\r\n      let fightRoomnum = getDate();\r\n      await dispatch(\r\n        EnterRoom({\r\n          tokenId: id,\r\n          fightRoom: fightRoomnum,\r\n          whichroom: whichroom,\r\n          url: `https://ipfs.io/ipfs/${baseUri?.slice(7, 53)}/${id}.png`,\r\n          address: account,\r\n          gamePrice: Number(gamePrice),\r\n        })\r\n      );\r\n    }, [gamePrice, baseUri, account, whichroom]);\r\n\r\n  return (\r\n    <Modal\r\n      open={openState}\r\n      onClose={() => {\r\n        closeModal();\r\n      }}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <Box sx={avatarsStyle}>\r\n          {nftInfo &&\r\n            nftInfo.map((id: number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={`https://ipfs.io/ipfs/${baseUri?.slice(7,53)}/${id}.png`}\r\n                      alt=\"NFT_avatar\"\r\n                      sx={modalAvatarStyle}\r\n                    />\r\n                  </Box>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      onEnterRoom(id);\r\n                      closeModal();\r\n                    }}\r\n                  >\r\n                    Fight\r\n                  </Button>\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n        <Box sx={avatarsStyle}>\r\n          {nftids &&\r\n            nftids.map((id: number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={nfturis?.[index]}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={modalAvatarStyle}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton sx={modalAvatarStyle} />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onEnterRoom(id);\r\n                              closeModal();\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Box, Button, Skeleton } from \"@mui/material\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { avatarsStyle, modalAvatarStyle, style } from \"./style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"state\";\r\nimport { loadBattleDetails } from \"store/slices/battle-slice\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useCallback } from \"react\";\r\nimport { approveNFT, loadNftAllowance } from \"store/slices/NFt-slice\";\r\nimport { ClaimFight } from \"store/slices/play-slice\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport function BigRoomModal() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { account } = useWeb3React();\r\n  var socket = io(\"http://54.176.107.208\");\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n  const nfturis: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nfturis\r\n  );\r\n  const isLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.nft.loading\r\n  );\r\n  const allowFlg: boolean[] = useSelector<IReduxState, boolean[]>(\r\n    (state) => state.nft.allowances\r\n  );\r\n  const whichroom: number = useSelector<IReduxState, number>(\r\n    (state) => state.battle.whichroom\r\n  );\r\n  const gamePrice: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.gameprice\r\n  );\r\n  const claimState: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.battle.claimState\r\n  );\r\n  const whichfight: number = useSelector<IReduxState, number>(\r\n    (state) => state.battle.whichfight\r\n  );\r\n  const waitingRandom: number = useSelector<IReduxState, number>(\r\n    (state) => state.battle.waitingRandom\r\n  );\r\n  const nftInfo: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.wallet.nftInfo\r\n  );\r\n  const baseUri: string = useSelector<IReduxState, string>(\r\n    (state) => state.nfts.nfturl\r\n  );\r\n\r\n  const approve = useCallback(async (id: Number) => {\r\n    await dispatch(\r\n      approveNFT({\r\n        tokenId: id,\r\n      })\r\n    );\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }, []);\r\n\r\n  const closeModal = useCallback(async () => {\r\n    dispatch(\r\n      loadBattleDetails({\r\n        openState: false,\r\n        claimState: false,\r\n        whichroom: 0,\r\n        whichfight: 0,\r\n        waitingRandom: 0,\r\n        decide: false,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const onClaimFight = useCallback(\r\n    async (id: number) => {\r\n      await dispatch(\r\n        ClaimFight({\r\n          tokenId: id,\r\n          fightRoom: whichfight,\r\n          whichroom: whichroom,\r\n          url: `https://ipfs.io/ipfs/${baseUri?.slice(7, 53)}/${id}.png`,\r\n          waitingRandom: waitingRandom,\r\n          address: account,\r\n          gamePrice: Number(gamePrice),\r\n        })\r\n      );\r\n    },\r\n    [gamePrice, baseUri, account, whichroom, whichfight, waitingRandom]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      open={claimState}\r\n      onClose={() => {\r\n        closeModal();\r\n      }}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n      <Box sx={avatarsStyle}>\r\n          {nftInfo &&\r\n            nftInfo.map((id: number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={`https://ipfs.io/ipfs/${baseUri?.slice(7,53)}/${id}.png`}\r\n                      alt=\"NFT_avatar\"\r\n                      sx={modalAvatarStyle}\r\n                    />\r\n                  </Box>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      onClaimFight(id);\r\n                      closeModal();\r\n                    }}\r\n                  >\r\n                    Fight\r\n                  </Button>\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n        <Box sx={avatarsStyle}>\r\n          {nftids &&\r\n            nftids.map((id: number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={`https://ipfs.io/ipfs/${baseUri?.slice(7,53)}/${id}.png`}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={modalAvatarStyle}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton sx={modalAvatarStyle} />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onClaimFight(id);\r\n                              closeModal();\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n","export const Datas = [\r\n    {\r\n      roomnum: 1,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 2,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 3,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      whichfight: 0,\r\n      fightroom: 0,\r\n    },\r\n    {\r\n      roomnum: 4,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 5,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 6,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 7,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 8,\r\n      firstNFT: \"\",\r\n      secondNFT: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      firstrandom: 0,\r\n      secondrandom: 0,\r\n      tokenId: 0,\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n  ];","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport roomPic from \"../../assets/images/Ui_box3.webp\";\r\nimport { Timeline, Tween } from \"react-gsap\";\r\nimport buttonBack from \"../../assets/images/button.png\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"state\";\r\nimport { Datas } from \"./Datas\";\r\nimport { loadBattleDetails } from \"store/slices/battle-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport {\r\n  fightStyle,\r\n  randomNumberStyle,\r\n  roomStyleAvatar,\r\n  roomStyleBack,\r\n  buttonStyle,\r\n} from \"./style\";\r\nimport { loadNftAllowance } from \"store/slices/NFt-slice\";\r\nimport { loadGameDetails } from \"store/slices/game-slice\";\r\nimport { walletInfo } from \"store/slices/walletInfo-slice\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport function SmallRooms() {\r\n  const { account } = useWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const firRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random1\r\n  );\r\n  const secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const gameData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.gameData\r\n  );\r\n  const decide: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.battle.decide\r\n  );\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n  var socket = io(\"http://54.176.107.208\");\r\n\r\n  const getWholeData = useCallback(async () => {\r\n    await dispatch(loadGameDetails({ account: account }));\r\n    await dispatch(walletInfo({ account: account }));\r\n    await dispatch(loadNftDetails({ account: account }));\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"entered\", () => {\r\n      getWholeData();\r\n    });\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    gameData &&\r\n      gameData.forEach((data) => {\r\n        if (Datas[data.roomnum - 1]) {\r\n          Datas[data.roomnum - 1].firstNFT = data.firstNFT;\r\n          Datas[data.roomnum - 1].secondNFT = data.secondNFT;\r\n          Datas[data.roomnum - 1].firstaddress = data.firstaddress;\r\n          Datas[data.roomnum - 1].secondaddress = data.secondaddress;\r\n          Datas[data.roomnum - 1].firstrandom = data.firstRandom;\r\n          Datas[data.roomnum - 1].secondrandom = data.secondRandom;\r\n          Datas[data.roomnum - 1].fightroom = data.fightRoom;\r\n          Datas[data.roomnum - 1].whichfight = data.whichFight;\r\n          Datas[data.roomnum - 1].tokenId = data.tokenId;\r\n        }\r\n      });\r\n\r\n    if(gameData?.length === 0) {\r\n      Datas.forEach((obj) => {\r\n        obj.firstNFT = '';\r\n        obj.secondNFT = '';\r\n        obj.firstaddress = '';\r\n        obj.secondaddress = '';\r\n        obj.firstrandom = 0;\r\n        obj.secondrandom = 0;\r\n        obj.fightroom = 0;\r\n        obj.whichfight = 0;\r\n        obj.tokenId = 0;\r\n      })\r\n    }\r\n      console.log('gameData and Datas: ', gameData, Datas);\r\n  }, [firRandomData, secRandomData, account, gameData, decide]);\r\n\r\n  const onEnterModal = useCallback(async (index: number) => {\r\n    await dispatch(loadNftDetails({ account: account }));\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n    await dispatch(\r\n      loadBattleDetails({\r\n        openState: true,\r\n        whichroom: index + 1,\r\n        claimState: false,\r\n        whichfight: 0,\r\n        waitingRandom: 0,\r\n        decide: false,\r\n      })\r\n    );\r\n  }, [account]);\r\n\r\n  const onClaimModal = useCallback(\r\n    async (index: number, fightRoom: number, firstRandom: number) => {\r\n      await dispatch(loadNftDetails({ account: account }));\r\n      await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n      await dispatch(\r\n        loadBattleDetails({\r\n          openState: false,\r\n          whichroom: index + 1,\r\n          claimState: true,\r\n          whichfight: fightRoom,\r\n          waitingRandom: firstRandom,\r\n          decide: false,\r\n        })\r\n      );\r\n    },\r\n    [account]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {Datas?.map((data, index) => {\r\n        if (index > 3) return;\r\n        return (\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-start\"\r\n            sx={{\r\n              mr: { xs: 1, sm: 2 },\r\n              ml: { xs: 1, sm: 2 },\r\n              mb: { xs: 1, sm: 2 },\r\n            }}\r\n            border=\"1px solid white\"\r\n            bgcolor=\"RGB(255,255,255,0.1)\"\r\n            padding={2}\r\n            key={index}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mr: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n              }}\r\n              position=\"relative\"\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Box component=\"img\" src={roomPic} sx={roomStyleBack} />\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n                position=\"absolute\"\r\n                top=\"30px\"\r\n              >\r\n                {data.firstNFT !== \"\" ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={data.firstNFT}\r\n                    sx={roomStyleAvatar}\r\n                  />\r\n                ) : (\r\n                  <Box sx={roomStyleAvatar} alignItems=\"center\" display=\"flex\">\r\n                    <Timeline\r\n                      target={\r\n                        <Typography sx={fightStyle}>Let's FIGHT</Typography>\r\n                      }\r\n                      repeat={10000}\r\n                    >\r\n                      {/* <Tween\r\n                          from={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          to={{ scaleX: 1, scaleY: 1 }}\r\n                          duration={1.5}\r\n                        />\r\n                        <Tween\r\n                          from={{ scaleX: 1, scaleY: 1 }}\r\n                          to={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          duration={1.5}\r\n                        /> */}\r\n                    </Timeline>\r\n                  </Box>\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    height: { xs: \"36px\", sm: \"50px\", md: \"72px\" },\r\n                  }}\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  {data.firstNFT !== \"\" && data.firstNFT !== undefined ? (\r\n                    <Typography sx={randomNumberStyle}>\r\n                      {data.firstrandom}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography sx={randomNumberStyle}>\r\n                      Random Number\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n                <Button\r\n                  onClick={() => {\r\n                    onEnterModal(index);\r\n                  }}\r\n                  disabled={data.firstNFT !== \"\" ? true : false}\r\n                  sx={{\r\n                    position: \"relative\",\r\n                    width: \"62%\",\r\n                  }}\r\n                >\r\n                  <Box component=\"img\" src={buttonBack} width=\"100%\" />\r\n                  <Typography\r\n                    sx={buttonStyle}\r\n                    color={data.firstNFT ? \"white\" : \"yellow\"}\r\n                  >\r\n                    {firRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      firRandomData[index + 1] === undefined ||\r\n                      firRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Winner\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Loser\"\r\n                      : data.secondaddress === \"\" ||\r\n                        data.secondaddress === null ||\r\n                        data.secondaddress === undefined\r\n                      ? data.firstaddress === \"\"\r\n                        ? \"Fight\"\r\n                        : `${data.firstaddress?.slice(\r\n                            0,\r\n                            4\r\n                          )}...${data.firstaddress?.slice(-4)}`\r\n                      : \"Fighting...\"}\r\n                  </Typography>\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              position=\"relative\"\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Box component=\"img\" src={roomPic} sx={roomStyleBack} />\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n                position=\"absolute\"\r\n                top=\"30px\"\r\n              >\r\n                {data.secondNFT !== \"\" && data.secondNFT !== undefined ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={data.secondNFT}\r\n                    sx={roomStyleAvatar}\r\n                  />\r\n                ) : (\r\n                  <Box sx={roomStyleAvatar} display=\"flex\" alignItems=\"center\">\r\n                    <Timeline\r\n                      target={\r\n                        <Typography sx={fightStyle}>Let's FIGHT</Typography>\r\n                      }\r\n                      repeat={10000}\r\n                    >\r\n                      {/* <Tween\r\n                          from={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          to={{ scaleX: 1, scaleY: 1 }}\r\n                          duration={1.5}\r\n                        />\r\n                        <Tween\r\n                          from={{ scaleX: 1, scaleY: 1 }}\r\n                          to={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          duration={1.5}\r\n                        /> */}\r\n                    </Timeline>\r\n                  </Box>\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    height: { xs: \"36px\", sm: \"50px\", md: \"72px\" },\r\n                  }}\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  {data.secondNFT !== \"\" && data.secondNFT !== undefined ? (\r\n                    <Typography sx={randomNumberStyle}>\r\n                      {data.secondrandom}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography sx={randomNumberStyle}>\r\n                      Random Number\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n                <Button\r\n                  disabled={\r\n                    !(\r\n                      data.firstNFT !== \"\" ||\r\n                      data.secondaddress !== null ||\r\n                      data.secondaddress === undefined\r\n                    )\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  onClick={() => {\r\n                    onClaimModal(index, data.fightroom, data.firstrandom);\r\n                  }}\r\n                  sx={{\r\n                    position: \"relative\",\r\n                    width: \"62%\",\r\n                  }}\r\n                >\r\n                  <Box component=\"img\" src={buttonBack} width=\"100%\" />\r\n                  <Typography\r\n                    sx={buttonStyle}\r\n                    color={\r\n                      secRandomData && secRandomData[index + 1]\r\n                        ? \"white\"\r\n                        : \"yellow\"\r\n                    }\r\n                  >\r\n                    {secRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      secRandomData[index + 1] === undefined ||\r\n                      secRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Loser\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Winner\"\r\n                      : data.secondaddress === \"\" ||\r\n                        data.secondaddress === null ||\r\n                        data.secondaddress === undefined\r\n                      ? \"Fight\"\r\n                      : \"Fighting...\"}\r\n                  </Typography>\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport roomPic from \"../../assets/images/Ui_box3.webp\";\r\nimport { Timeline, Tween } from \"react-gsap\";\r\nimport buttonBack from \"../../assets/images/button.png\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadBattleDetails } from \"store/slices/battle-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { AppDispatch } from \"state\";\r\nimport { Datas } from \"./Datas\";\r\nimport {\r\n  fightStyle,\r\n  randomNumberStyle,\r\n  roomStyleAvatar,\r\n  roomStyleBack,\r\n  buttonStyle,\r\n} from \"./style\";\r\nimport { loadNftAllowance } from \"store/slices/NFt-slice\";\r\n\r\nexport function BigRoom() {\r\n  const [random, setRandom] = useState([0]);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { account } = useWeb3React();\r\n\r\n  const firRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random1\r\n  );\r\n  const secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const gameData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.gameData\r\n  );\r\n  const decide: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.battle.decide\r\n  );\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n\r\n  gameData &&\r\n  gameData.forEach((data) => {\r\n    if (Datas[data.roomnum - 1]) {\r\n      Datas[data.roomnum - 1].firstNFT = data.firstNFT;\r\n      Datas[data.roomnum - 1].secondNFT = data.secondNFT;\r\n      Datas[data.roomnum - 1].firstaddress = data.firstaddress;\r\n      Datas[data.roomnum - 1].secondaddress = data.secondaddress;\r\n      Datas[data.roomnum - 1].firstrandom = data.firstRandom;\r\n      Datas[data.roomnum - 1].secondrandom = data.secondRandom;\r\n      Datas[data.roomnum - 1].fightroom = data.fightRoom;\r\n      Datas[data.roomnum - 1].whichfight = data.whichFight;\r\n      Datas[data.roomnum - 1].tokenId = data.tokenId;\r\n    }\r\n  });\r\n\r\n  const onEnterModal = useCallback(async (index: number) => {\r\n    await dispatch(\r\n      loadBattleDetails({\r\n        openState: true,\r\n        whichroom: index + 1,\r\n        claimState: false,\r\n        whichfight: 0,\r\n        waitingRandom: 0,\r\n        decide: false,\r\n      })\r\n    );\r\n    await dispatch(loadNftDetails({ account: account }));\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }, [account]);\r\n\r\n  const onClaimModal = useCallback(\r\n    async (index: number, fightRoom: number, firstRandom: number) => {\r\n      await dispatch(\r\n        loadBattleDetails({\r\n          openState: false,\r\n          whichroom: index + 1,\r\n          claimState: true,\r\n          whichfight: fightRoom,\r\n          waitingRandom: firstRandom,\r\n          decide: false,\r\n        })\r\n      );\r\n      await dispatch(loadNftDetails({ account: account }));\r\n      await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n    },\r\n    [account]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {Datas &&\r\n        Datas.map((data, index) => {\r\n          if (index < 4) return;\r\n          return (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"flex-start\"\r\n              sx={{\r\n                mr: { xs: 1, sm: 2 },\r\n                ml: { xs: 1, sm: 2 },\r\n                mb: { xs: 1, sm: 2 },\r\n              }}\r\n              border='1px solid white'\r\n              bgcolor='RGB(255,255,255,0.1)'\r\n              padding={2}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  mr: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                }}\r\n                position=\"relative\"\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Box component=\"img\" src={roomPic} sx={roomStyleBack} />\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"column\"\r\n                  position=\"absolute\"\r\n                  top=\"30px\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  {data.firstNFT !== \"\" ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.firstNFT}\r\n                      sx={roomStyleAvatar}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={roomStyleAvatar}\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Timeline\r\n                        target={\r\n                          <Typography sx={fightStyle}>Let's FIGHT</Typography>\r\n                        }\r\n                        repeat={10000}\r\n                      >\r\n                        {/* <Tween\r\n                          from={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          to={{ scaleX: 1, scaleY: 1 }}\r\n                          duration={1.5}\r\n                        />\r\n                        <Tween\r\n                          from={{ scaleX: 1, scaleY: 1 }}\r\n                          to={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          duration={1.5}\r\n                        /> */}\r\n                      </Timeline>\r\n                    </Box>\r\n                  )}\r\n                  <Box\r\n                    sx={{\r\n                      height: { xs: \"36px\", sm: \"50px\", md: \"72px\" },\r\n                    }}\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    {data.firstNFT !== \"\" && data.firstNFT !== undefined ? (\r\n                      <Typography sx={randomNumberStyle}>\r\n                        {random[index * 2]}\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography sx={randomNumberStyle}>\r\n                        Random Number\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                  <Button\r\n                    onClick={() => {\r\n                      onEnterModal(index);\r\n                    }}\r\n                    disabled={data.firstNFT !== \"\" ? true : false}\r\n                    sx={{\r\n                      position: \"relative\",\r\n                      width: \"62%\",\r\n                    }}\r\n                  >\r\n                    <Box component=\"img\" src={buttonBack} width=\"100%\" />\r\n                    <Typography\r\n                      sx={buttonStyle}\r\n                      color={data.firstNFT ? \"white\" : \"yellow\"}\r\n                    >\r\n                      {firRandomData &&\r\n                      decide &&\r\n                      !(\r\n                        firRandomData[index + 1] === undefined ||\r\n                        firRandomData[index + 1] === 0\r\n                      )\r\n                        ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                          ? \"Winner\"\r\n                          : firRandomData[index + 1] == secRandomData[index + 1]\r\n                          ? \"Draw\"\r\n                          : \"Loser\"\r\n                        : data.secondaddress === \"\" ||\r\n                          data.secondaddress === null ||\r\n                          data.secondaddress === undefined\r\n                        ? data.firstaddress === \"\"\r\n                          ? \"Fight\"\r\n                          : `${data.firstaddress?.slice(\r\n                              0,\r\n                              4\r\n                            )}...${data.firstaddress?.slice(-4)}`\r\n                        : \"Fighting...\"}\r\n                    </Typography>\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                position=\"relative\"\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Box component=\"img\" src={roomPic} sx={roomStyleBack} />\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  flexDirection=\"column\"\r\n                  position=\"absolute\"\r\n                  top=\"30px\"\r\n                >\r\n                  {data.secondNFT !== \"\" && data.secondNFT !== undefined ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.secondNFT}\r\n                      sx={roomStyleAvatar}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={roomStyleAvatar}\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Timeline\r\n                        target={\r\n                          <Typography sx={fightStyle}>Let's FIGHT</Typography>\r\n                        }\r\n                        repeat={10000}\r\n                      >\r\n                        {/* <Tween\r\n                          from={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          to={{ scaleX: 1, scaleY: 1 }}\r\n                          duration={1.5}\r\n                        />\r\n                        <Tween\r\n                          from={{ scaleX: 1, scaleY: 1 }}\r\n                          to={{ scaleX: 1.1, scaleY: 1.1 }}\r\n                          duration={1.5}\r\n                        /> */}\r\n                      </Timeline>\r\n                    </Box>\r\n                  )}\r\n                  <Box\r\n                    sx={{\r\n                      height: { xs: \"36px\", sm: \"50px\", md: \"72px\" },\r\n                    }}\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Typography sx={randomNumberStyle}>\r\n                      Random Number\r\n                    </Typography>\r\n                  </Box>\r\n                  <Button\r\n                    disabled={\r\n                      !(\r\n                        data.firstNFT !== \"\" ||\r\n                        data.secondaddress !== null ||\r\n                        data.secondaddress === undefined\r\n                      )\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={() => {\r\n                      onClaimModal(index, data.fightroom, data.firstrandom);\r\n                    }}\r\n                    sx={{\r\n                      position: \"relative\",\r\n                      width: \"62%\",\r\n                    }}\r\n                  >\r\n                    <Box component=\"img\" src={buttonBack} width=\"100%\" />\r\n                    <Typography\r\n                      sx={buttonStyle}\r\n                      color={\r\n                        secRandomData && secRandomData[index + 1]\r\n                          ? \"white\"\r\n                          : \"yellow\"\r\n                      }\r\n                    >\r\n                      {secRandomData &&\r\n                      decide &&\r\n                      !(\r\n                        secRandomData[index + 1] === undefined ||\r\n                        secRandomData[index + 1] === 0\r\n                      )\r\n                        ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                          ? \"Loser\"\r\n                          : firRandomData[index + 1] == secRandomData[index + 1]\r\n                          ? \"Draw\"\r\n                          : \"Winner\"\r\n                        : data.secondaddress === \"\" ||\r\n                          data.secondaddress === null ||\r\n                          data.secondaddress === undefined\r\n                        ? \"Fight\"\r\n                        : \"Fighting...\"}\r\n                    </Typography>\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { loadNftAllowance } from \"store/slices/NFt-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { loadGameDetails } from \"store/slices/game-slice\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport io from \"socket.io-client\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { walletInfo } from \"store/slices/walletInfo-slice\";\r\nimport { SampleModal } from \"components/Current/modal\";\r\nimport { BigRoomModal } from \"components/Current/bigRoomModal\";\r\nimport { SmallRooms } from \"components/Current/SmallRoom\";\r\nimport { BigRoom } from \"components/Current/BigRoom\";\r\nimport { loadBattleDetails } from \"store/slices/battle-slice\";\r\n\r\nconst CurrentBattle = () => {\r\n  const { account } = useWeb3React();\r\n\r\n  const secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.nfts.nftids\r\n  );\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  var socket = io(\"http://54.176.107.208\");\r\n\r\n  const getWholeData = useCallback(async () => {\r\n    await dispatch(loadGameDetails({ account: account }));\r\n    await dispatch(walletInfo({ account: account }));\r\n    await dispatch(loadNftDetails({ account: account }));\r\n    await dispatch(loadNftAllowance({ tokenIds: nftids }));\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"entered\", () => {\r\n      getWholeData();\r\n    });\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    if (secRandomData) {\r\n      dispatch(\r\n        loadBattleDetails({\r\n          decide: true,\r\n          openState: false,\r\n          claimState: false,\r\n          whichroom: 0,\r\n          whichfight: 0,\r\n          waitingRandom: 0,\r\n        })\r\n      );\r\n      setTimeout(async() => {\r\n        await axios.delete(\r\n          `http://54.176.107.208/api/betting/delete/${secRandomData.length - 1}`\r\n        );\r\n        await dispatch(\r\n          loadBattleDetails({\r\n            decide: false,\r\n            openState: false,\r\n            claimState: false,\r\n            whichroom: 0,\r\n            whichfight: 0,\r\n            waitingRandom: 0,\r\n          })\r\n        );\r\n        socket.emit(\"enter\");\r\n      }, 4000);\r\n    }\r\n  }, [secRandomData]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        50 TRX Battle (1 Roll & 1 Meow)\r\n      </Typography>\r\n      <SmallRooms />\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 2, sm: 3, md: 4, xl: 5 },\r\n        }}\r\n      >\r\n        250 TRX Battle (5 Rolls & 5 Meow)\r\n      </Typography>\r\n      <BigRoom />\r\n\r\n      <SampleModal />\r\n      <BigRoomModal />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentBattle;\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FinishedBattle = () => {\r\n  const resultData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.resultData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n          mb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        Last 100 Finished Battles\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {resultData && resultData.map((data, index) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 2, sm: 3 },\r\n                mb: { xs: 1, sm: 2, md: 3, lg: 4 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  marginRight: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber1}\r\n                </Typography>\r\n                {data.nftUrl1 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl1}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 > data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      mt: 1,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address1.slice(0, 4)}...${data.address1.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 > data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber2}\r\n                </Typography>\r\n                {data.nftUrl2 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl2}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 < data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                    pt: 1,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address2.slice(0, 4)}...${data.address2.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 < data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinishedBattle;\r\n","import { Box, Typography } from \"@mui/material\";\r\n// import ActionFeed from \"./components/ActionFeed\";\r\nimport Banner from \"./components/Banner\";\r\nimport Jackpot from \"./components/Jackpot\";\r\nimport Role from \"./components/Role\";\r\nimport Winner from \"./components/Winner\";\r\nimport CurrentBattle from \"./components/CurrentBattle\";\r\nimport FinishedBattle from \"./components/FinishedBattle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Box sx={{ backgroundColor: \"rgba(38,40,42,0.95)\" }}>\r\n      <Banner />\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        fontFamily=\"Audiowide\"\r\n        color=\"white\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", md: \"48px\", xl: \"60px\" },\r\n          mt: \"16px\",\r\n          mb: \"16px\",\r\n        }}\r\n      >\r\n        Crypto Moon Catz War!\r\n      </Typography>\r\n      <Jackpot />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: { xs: \"column\", lg: \"row\" },\r\n          justifyContent: \"space-around\",\r\n          my: { xs: 1, sm: 2 },\r\n        }}\r\n      >\r\n        <Box sx={{ width: { xs: \"100%\", lg: \"13%\" } }}>\r\n          <Role />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", lg: \"66%\" } }}>\r\n          <CurrentBattle />\r\n          <FinishedBattle />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", lg: \"15%\" } }}>\r\n          <Winner />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport tronWeb from \"tronweb\";\r\nimport { SHASTA_TESTNET } from \"../../constants/addresses\";\r\nimport axios from \"axios\";\r\n\r\ninterface IStackingMeow {\r\n  address: any;\r\n  amount: string;\r\n}\r\n\r\ndeclare var window: any;\r\n\r\nexport const stackingMeow = createAsyncThunk(\r\n  \"stacking/stackingMeow\",\r\n\r\n  async ({ address, amount }: IStackingMeow, { dispatch }) => {\r\n    let meowContract, meowTokenContract;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n          meowTokenContract = await window.tronWeb.contract().at(tronWeb.address.toHex(SHASTA_TESTNET.MEOWTOKEN_ADDRESS));\r\n        }\r\n    }\r\n    let enterTx, approveTx;\r\n    let stakeamount = parseInt(amount);\r\n    try {\r\n      console.log(stakeamount);\r\n      approveTx = await meowTokenContract.approve(SHASTA_TESTNET.MEOW_ADDRESS, stakeamount).send({ feeLimit: 100000000 });\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(approveTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n\r\n      enterTx = await meowContract\r\n        .stake(stakeamount)\r\n        .send({ feeLimit: 100000000 });\r\n\r\n      receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n      await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=${stakeamount}&claimAmount=0&ownNfts=[]`);\r\n\r\n      return;\r\n    } catch (err: any) {\r\n      console.log(err);\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      return;\r\n    }\r\n  }\r\n);\r\n\r\ninterface IunstackingMeow {\r\n  address: any;\r\n  amount: string;\r\n}\r\n\r\nexport const unstackingMeow = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async ({ amount, address }: IunstackingMeow, { dispatch }) => {\r\n    let meowContract;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(SHASTA_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    let stakeamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract\r\n        .unStake(stakeamount)\r\n        .send({ feeLimit: 100000000 });\r\n\r\n      let receipt = null;\r\n      while (receipt === 'REVERT' || receipt == null) {\r\n        if (window.tronWeb) {\r\n          const transaction = await window.tronWeb.trx.getTransaction(enterTx);\r\n          receipt = transaction.ret[0].contractRet;\r\n        }\r\n        if (receipt === 'REVERT') {\r\n          await new Promise((resolve) => setTimeout(resolve, 1000)); // wait for 1 second\r\n        }\r\n      }\r\n      await axios.post(`http://54.176.107.208/api/userinfo/create?address=${address}&stakeAmount=${stakeamount * (-1)}&claimAmount=0&ownNfts=[]`);\r\n\r\n      return;\r\n    } catch (err: any) {\r\n      console.log(err);\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      return;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {}\r\n\r\nconst stakeSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(stackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(stackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(stackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(unstackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.stack;\r\n\r\nexport default stakeSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = stakeSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (stack) => stack);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { AppDispatch } from \"state\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { stackingMeow, unstackingMeow } from \"store/slices/staking-slice\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\n\r\nconst MeowToken = () => {\r\n\tconst { account } = useWeb3React();\r\n\tconst [stackAmount, changesStack] = useState('');\r\n\tconst [unstackAmount, changeUnstack] = useState('');\r\n\tconst dispatch = useDispatch<AppDispatch>();\r\n\r\n\tlet stakeAmount : number = useSelector<IReduxState, number>(\r\n\t\t(state) => state.wallet.stakeAmount\r\n\t);\r\n\tconst JackpotAmount = useSelector<IReduxState, string>(\r\n\t\t(state) => state.app.jackpotAmount\r\n\t);\r\n\tlet totalStake : number = useSelector<IReduxState, number>(\r\n\t\t(state) => state.wallet.totalStake\r\n\t);\r\n\tconst meowCount: string = useSelector<IReduxState, string>(\r\n\t\t(state) => state.app.meowCount\r\n\t);\r\n\r\n\tasync function onStack() {\r\n\t\tif(parseInt(meowCount) < parseInt(stackAmount)) {\r\n\t\t\talert(\"You don't have enough balance of Meow Token for stake!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait dispatch(stackingMeow({\r\n\t\t\tamount: stackAmount,\r\n\t\t\taddress: account,\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function onUnstack() {\r\n\t\tif(stakeAmount < parseInt(unstackAmount)) {\r\n\t\t\talert(\"You don't have enough Meow Token to unstake!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait dispatch(unstackingMeow({\r\n\t\t\tamount: unstackAmount,\r\n\t\t\taddress: account,\r\n\t\t}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\twidth: { xs: \"320px\", sm: '540px', md: '640px' },\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\r\n\t\t\t\tpb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n\t\t\t\tpx: 2\r\n\t\t\t}}>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t\tcolor: '#58C4E4', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40' },\r\n\t\t\t\t\t\tpy: 1, px: { xs: 1, sm: 3 },\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\r\n\t\t\t\t\t\tmb: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tMeow Token\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: { xs: '12px', sm: '16px' }, color: 'white' }}>\r\n\t\t\t\t\tEarn Meow each battle! Win or lose you mine one meow token.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography fontFamily=\"Audiowide\" sx={{\r\n\t\t\t\t\tcolor: '#6B81FF',\r\n\t\t\t\t\tfontSize: { xs: '14px', sm: '18px' },\r\n\t\t\t\t\tpy: { xs: 1 },\r\n\t\t\t\t\tpl: { xs: 2, sm: 4, md: 6, xl: 8 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\t24 Mined of 100,000,000 MOEW\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tEvery time a war chest is opened, users with staked Meow tokens split 40% of that Jackpot!\r\n\t\t\t\t\tPassive Inclome!\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tdisplay: 'flex', justifyContent: 'space-between', flexWrap: 'wrap',\r\n\t\t\t\talignItems: 'flex-start',\r\n\t\t\t\tpy: { xs: 1, sm: 2 }, px: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64'\r\n\t\t\t}}>\r\n\t\t\t\t{/* <Box>\r\n\t\t\t\t\t<Button sx={{border: '1px solid #F39B33', borderRadius: '24px', \r\n\t\t\t\t\t\tpaddingY: {xs: '4px', sm: '6px'}, paddingX: {xs: '8px', sm: '16px'}, \r\n\t\t\t\t\t\tfontSize: {xs: '12px', sm: '16px'}, color: '#F39B33', backgroundColor: '#393D32',\r\n\t\t\t\t\t\t'&: hover': {backgroundColor: '#393D32', opacity: 0.9}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tConnect\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, mt: 1}}>\r\n\t\t\t\t\t\tAvailable Meow: 2\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box> */}\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\t\t\tbackgroundColor: '#BADA55', fontFamily: 'Audiowide',\r\n\t\t\t\t\t\t\t'&: hover': { backgroundColor: '#BADA55', opacity: 0.9 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={onStack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStake Meow\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\t\tvalue={stackAmount}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tchangesStack(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' }, mt: 1 }}>\r\n\t\t\t\t\t\tStaked Meow: {stakeAmount ? stakeAmount : 0} Meow Token\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', fontFamily: 'Audiowide',\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onUnstack}\r\n\t\t\t\t>\r\n\t\t\t\t\tUnstake Meow\r\n\t\t\t\t</Button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\tvalue={unstackAmount}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tchangeUnstack(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ p: 1, backgroundColor: '#393D32' }}>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tTotal Staked Meow in contract: {totalStake ? totalStake : 0} Meow Token \r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\t40% of current Jackpot: {JackpotAmount ? parseInt(JackpotAmount) * 2 / 5 : 0} TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ py: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64', paddingX: '6px' }}>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tYou share if Jackpot is triggered: 50% (504 TRX)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', paddingY: { xs: '4px', sm: '6px' },\r\n\t\t\t\t\tpx: { xs: 3, sm: 5 }, ml: { xs: 2, sm: 4 }, my: 1,\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\tClaim\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tUnclaimed Earnings: 0 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MeowToken;\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nconst ChestInfo = () => {\r\n  return (\r\n    <Box\r\n\t\t\tsx={{\t\t\r\n\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '640px'},\r\n\t\t\t\tmt: {xs: 4, sm: 6, md: 8, xl: 10},\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}          \r\n    >\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\t\r\n\t\t\t\tpb: {xs: 1, sm: 2, md: 3, xl: 4},\r\n\t\t\t\tpx: 2\t\t\t\t\r\n\t\t\t}}>\r\n\t\t\t\t<Typography \r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t\t{{ \r\n\t\t\t\t\t\t\tcolor: 'white', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3},\t\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tmx: 'auto',\t\r\n\t\t\t\t\t\t\tmb: 1,            \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tWar Chest\r\n\t\t\t\t</Typography>  \r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', py: 1}}>\r\n\t\t\t\t\tBattle players for NFTs and a chance at opening the War Chest Jackpot!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 2}}>\r\n\t\t\t\t\tEach battle 2 users put up 1 Crypto Moon Catz NFT and 10 TRX each.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 1}}>\r\n\t\t\t\t\tUsers are the given a random nuber (1-100,000) Highest number wins!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: '#BADA55', pt: 2}}>\r\n\t\t\t\t\tWinner receives both NFT's and 10 TRX + (1 Meow token)\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser receives (1 Meow token)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser 8 TRX is sent to the War Chest Jackpot until 77,777 is rolled!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\t2 TRX sent to team account\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{py: {xs: 1, sm: 2}, backgroundColor: '#6A6E64', px: 2}}>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '14px', sm: '18px'}}}>\r\n\t\t\t\t\tWar Chest Jackpot distribution:\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t50% goes to who rolled 77,777\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t10% goes to other user in that battle\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t40% goes to all users that have Meow tokens staked\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n  );\r\n};\r\n\r\nexport default ChestInfo;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport MeowToken from \"./components/MeowToken\";\r\nimport ChestInfo from \"./components/ChestInfo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\n\r\nconst Stake = () => {\r\n  const JackpotAmount = useSelector<IReduxState, string>(\r\n    (state) => state.app.jackpotAmount\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{ backgroundColor: \"#989E90\", py: { xs: 2, sm: 4, md: 6, xl: 8 } }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#F39B33\",\r\n          fontSize: { xs: \"20px\", sm: \"28px\", md: \"36px\", xl: \"40\" },\r\n          py: 1,\r\n          px: { xs: 1, sm: 3 },\r\n          backgroundColor: \"#393D32\",\r\n          width: { xs: \"320px\", sm: \"540px\", md: \"800px\", xl: \"1000px\" },\r\n          textAlign: \"center\",\r\n          mx: \"auto\",\r\n          mb: 2,\r\n        }}\r\n      >\r\n        War Chest Jackpot: {JackpotAmount ? JackpotAmount : 0} Tron\r\n      </Typography>\r\n      <MeowToken />\r\n      <ChestInfo />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal } from './actions';\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>;\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number };\r\n  readonly popupList: PopupList;\r\n  readonly openModal: ApplicationModal | null;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  openModal: null,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload;\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber;\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\r\n      }\r\n    })\r\n    .addCase(setOpenModal, (state, action) => {\r\n      state.openModal = action.payload;\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs,\r\n        },\r\n      ]);\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach((p) => {\r\n        if (p.key === key) {\r\n          p.show = false;\r\n        }\r\n      });\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SerializedToken {\r\n  chainId: number;\r\n  address: string;\r\n  decimals: number;\r\n  symbol?: string;\r\n  name?: string;\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken;\r\n  token1: SerializedToken;\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode');\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode');\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode');\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n);\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline');\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken');\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken');\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair');\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair',\r\n);\r\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning');\r\n","import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { updateVersion } from '../global/actions';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  toggleURLWarning,\r\n} from './actions';\r\n\r\nconst currentTimestamp = () => new Date().getTime();\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number;\r\n\r\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean; // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean;\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number;\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number;\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken;\r\n    };\r\n  };\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair;\r\n    };\r\n  };\r\n\r\n  timestamp: number;\r\n  URLWarningVisible: boolean;\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: true,\r\n  matchesDarkMode: true,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {};\r\n      delete state.tokens[chainId][address];\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId;\r\n        state.pairs[chainId] = state.pairs[chainId] || {};\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible;\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n  hash: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  summary?: string;\r\n  claim?: { recipient: string };\r\n  receipt?: SerializableTransactionReceipt;\r\n  lastCheckedBlockNumber?: number;\r\n  addedTime: number;\r\n  confirmedTime?: number;\r\n  from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails;\r\n  };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.');\r\n      }\r\n      const txs = transactions[chainId] ?? {};\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() };\r\n      transactions[chainId] = txs;\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return;\r\n      transactions[chainId] = {};\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber;\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      tx.receipt = receipt;\r\n      tx.confirmedTime = now();\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number;\r\n      };\r\n    };\r\n  };\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null;\r\n        blockNumber?: number;\r\n        fetchingBlockNumber?: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {});\r\n      listeners[chainId] = listeners[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {};\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1;\r\n      });\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {});\r\n\r\n        if (!listeners[chainId]) return;\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call);\r\n          if (!listeners[chainId][callKey]) return;\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return;\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch];\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--;\r\n          }\r\n        });\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          };\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return;\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) return; // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber;\r\n          current.data = null;\r\n          current.blockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey];\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return;\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        };\r\n      });\r\n    }),\r\n);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nimport application from \"./application/reducer\";\r\nimport { updateVersion } from \"./global/actions\";\r\nimport user from \"./user/reducer\";\r\nimport transactions from \"./transactions/reducer\";\r\nimport multicall from \"./multicall/reducer\";\r\n\r\nimport appReducer from \"../store/slices/game-slice\";\r\nimport fightReducer from \"../store/slices/play-slice\";\r\nimport stackReducer from \"../store/slices/staking-slice\";\r\nimport nftReducer from \"../store/slices/NFt-slice\";\r\nimport nftInfoReducer from '../store/slices/Nftinfo-slice';\r\nimport walletInfoReducer from '../store/slices/walletInfo-slice';\r\nimport messagesReducer from \"../store/slices/messages-slice\";\r\nimport battleReducer from '../store/slices/battle-slice';\r\n\r\nconst PERSISTED_KEYS: string[] = [\"user\", \"transactions\", \"lists\"];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    multicall,\r\n    app: appReducer,\r\n    fight: fightReducer,\r\n    stack: stackReducer,\r\n    nft: nftReducer,\r\n    nfts: nftInfoReducer,\r\n    wallet: walletInfoReducer,\r\n    messages: messagesReducer,\r\n    battle: battleReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n});\r\n\r\nstore.dispatch(updateVersion());\r\n\r\nexport default store;\r\n\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Header from \"components/Header\";\r\nimport Home from \"pages/Home\";\r\nimport Stake from \"pages/Stake\";\r\nimport { Provider } from \"react-redux\";\r\nimport store, { AppDispatch } from \"./state\";\r\nimport { loadGameDetails } from \"./store/slices/game-slice\";\r\nimport { loadNftDetails } from \"store/slices/Nftinfo-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\nimport { ReactNotifications } from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { active, account } = useWeb3React();\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const loadData = useCallback(() => {\r\n    dispatch(loadGameDetails({ account: account }));\r\n    dispatch(loadNftDetails({ account: account }));\r\n  }, [active, account]);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      loadData();\r\n    }\r\n  }, [active]);\r\n  useEffect(() => {\r\n    if (!active) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [active]);\r\n\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <ReactNotifications />\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/stake\" component={Stake} />\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport {\r\n  ThemeProvider as MUIThemeProvider,\r\n  createTheme,\r\n  StyledEngineProvider,\r\n} from \"@mui/material/styles\";\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function ThemeProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n      common: {\r\n        black: \"#16151a\",\r\n      },\r\n      primary: {\r\n        light: \"#62ceec\",\r\n        main: \"#6164ff\",\r\n        dark: \"#2847EE\",\r\n      },\r\n      secondary: {\r\n        light: \"#f59b2f\",\r\n        main: \"#ff7523\",\r\n        dark: \"#3f1d3f\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider);\r\n  library.pollingInterval = 15000;\r\n  return library;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./state\";\r\nimport ThemeProvider from \"./theme\";\r\nimport getLibrary from \"./utils/getLibrary\";\r\nimport { NetworkContextName } from \"./constants\";\r\nimport { Web3ContextProvider } from \"./hooks\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\r\n\r\nReactDOM.render(\r\n  <ThemeProvider>\r\n      <Web3ReactProvider getLibrary={getLibrary}>\r\n        <Web3ProviderNetwork getLibrary={getLibrary}>\r\n          <Provider store={store}>\r\n            <HashRouter>\r\n              <Web3ContextProvider>\r\n                <App />\r\n              </Web3ContextProvider>\r\n            </HashRouter>\r\n          </Provider>\r\n        </Web3ProviderNetwork>\r\n      </Web3ReactProvider>\r\n  </ThemeProvider>,\r\n\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["assets/images/discord-brands.svg","assets/images/ban1.jpg","assets/images/ban2.jpg","assets/images sync /^/.*$","assets/images/logo.png","assets/images/tronlink.svg","connectors/injected-tron-connector/tronlink-abis.ts","connectors/injected-tron-connector/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/blockchain.ts","constants/addresses.ts","constants/index.ts","constants/messages.ts","helpers/switch-network.ts","hooks/web3/web3-context.tsx","hooks/web3/helpers/get-mainnet-uri.ts","hooks/index.ts","state/application/actions.ts","state/application/hooks.ts","state/multicall/actions.ts","state/multicall/hooks.ts","utils/index.ts","constants/multicall/index.ts","hooks/useContract.ts","hooks/useDebounce.ts","hooks/useENSName.ts","utils/isZero.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","components/Identicon/index.tsx","components/Loader/index.tsx","components/AccountDetails/Copy.tsx","hooks/useCopyClipboard.ts","components/AccountDetails/Transaction.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/PendingView.tsx","hooks/usePrevious.ts","components/WalletModal/index.tsx","components/Web3Status/index.tsx","components/Header/index.tsx","pages/Home/components/Banner/index.tsx","pages/Home/components/Jackpot/index.tsx","pages/Home/components/Role/index.tsx","pages/Home/components/Winner/index.tsx","store/slices/messages-slice.ts","helpers/metamask-error-wrap.ts","helpers/set-all.ts","store/slices/play-slice.ts","store/slices/pending-txns-slice.ts","store/slices/NFt-slice.ts","store/slices/game-slice.ts","pages/Home/components/CurrentBattle/index.tsx","pages/Home/components/FinishedBattle/index.tsx","pages/Home/index.tsx","store/slices/staking-slice.ts","pages/Stake/components/MeowToken/index.tsx","pages/Stake/components/ChestInfo/index.tsx","pages/Stake/index.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/multicall/reducer.ts","state/index.ts","App.tsx","theme/index.tsx","utils/getLibrary.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","utils/retry.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/updater.tsx","state/user/updater.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","abis","ERC20_ABI","IntercroneswapV1Router02ABI","InjectedTronConnector","kwargs","provider","getParamTypes","params","type","components","join","signs","web3","Web3","providers","WebsocketProvider","fn","sign","eth","abi","encodeFunctionSignature","name","inputs","getFunctionSelector","err","createTronLinkProvider","network","process","tronApiUrl","functionSignatures","args","this","request","res","requestProvider","method","accounts","account","chainId","AbstractConnector","NetworkConnector","createJavaTronProvider","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","urls","Networks","injected","supportedChainIds","DEFAULD_NETWORK","GOERLI","NILE_TESTNET","MEOW_ADDRESS","NFT_ADDRESS","MEOWTOKEN_ADDRESS","getAddresses","networkID","SUPPORTED_WALLETS","TRONLINK","connector","iconName","description","href","color","NetworkContextName","messages","switchRequest","window","ethereum","swithNetwork","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","onChainProvider","useMemo","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","AVAX","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","confirm","disconnect","clearCachedProvider","Provider","value","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","useBlockNumber","useSelector","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useDispatch","useWalletModalToggle","WALLET","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","parseCallKey","callKey","pcs","split","length","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","data","useCallsData","calls","callResults","multicall","serializedCallKeys","JSON","stringify","filter","c","Boolean","sort","useEffect","callKeys","parse","key","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleCallResult","contract","methodName","interface","getFunction","encodeFunctionData","isAddress","ETHERSCAN_PREFIXES","getEtherscanLink","prefix","remove0xPrefix","ethAddress","toTron","shortenAddress","chars","parsed","tronAddress","substring","substr","MULTICALL_NETWORKS","ChainId","MAINNET","NILE","SHASTA","useContract","ABI","withSignerIfPossible","library","AddressZero","Contract","connectUnchecked","getProviderOrSigner","getContract","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useENSName","debouncedAddress","ensNodeArgument","namehash","toLowerCase","registrarContract","ENS_ABI","useENSRegistrarContract","resolverAddress","resolverAddressResult","resolverContract","ENS_PUBLIC_RESOLVER_ABI","useENSResolverContract","changed","ENSName","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","Identicon","ref","useRef","current","innerHTML","appendChild","Jazzicon","slice","Box","sx","height","width","borderRadius","Loader","stroke","viewBox","fill","xmlns","className","d","strokeWidth","strokeLinecap","strokeLinejoin","CopyHelper","props","timeout","isCopied","setIsCopied","staticCopy","text","didCopy","copy","hide","useCopyClipboard","setCopied","onClick","toCopy","size","Typography","component","ml","fontSize","Transaction","hash","allTransactions","summary","pending","receipt","status","Link","target","rel","display","justifyContent","alignItems","textDecoration","p","renderTransactions","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","openOptions","getStatusIcon","mr","clearAllTransactionsCallback","IconButton","k","formatConnectorName","Button","variant","lineHeight","mb","textTransform","Option","clickable","header","subheader","icon","backgroundColor","borderColor","cursor","border","mt","src","alt","PendingView","setPendingError","tryActivation","option","require","default","usePrevious","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","useWeb3React","activate","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","walletModalOpen","previousAccount","activePrevious","connectorPrevious","ReactGA","event","category","action","label","catch","UnsupportedChainIdError","Dialog","onClose","maxWidth","xs","sm","md","isMobile","mobileOnly","newTransactionsFirst","a","b","StatusIcon","Web3StatusInner","values","hasPendingTransactions","Web3Status","sortedRecentTransactions","confirmed","menuLists","link","Header","history","useHistory","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","position","Container","Toolbar","disableGutters","columnGap","fontFamily","DiscordIcon","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","list","push","Banner","BannerImage1","BannerImage2","Jackpot","JackpotAmount","app","jackpotAmount","widrawAmount","meowCount","contractNFTs","paddingY","py","px","textAlign","mx","flexWrap","pb","paddingX","marginTop","xl","left","bottom","Role","randomData","index","randomNumber1","randomNumber2","Winner","winnerData","Table","TableBody","TableRow","TableCell","borderBottom","padding","winCount","createMessage","severity","message","messagesSlice","createSlice","initialState","reducers","payload","info","warning","close","actions","metamaskErrorWrap","includes","trim","setAll","properties","forEach","EnterRoom","createAsyncThunk","tokenId","fightRoom","whichroom","url","gamePrice","socket","tronWeb","defaultAddress","base58","at","toHex","meowContract","axios","post","emit","enterRoom","send","feeLimit","callValue","delete","ClaimFight","random1","random2","claimFight","room","firstrandom","secondrandom","flag","get","resultData","fighter1","fighter2","firstNFT","secondNFT","fightSlice","fetchAppSuccess","extraReducers","builder","addCase","fulfilled","rejected","pendingTxnsSlice","createSelector","fight","fetchPendingTxns","clearPendingTxn","find","txnHash","splice","approveNFT","nftContract","approve","enterTx","loadNFTDetails","tokenIds","allowtmp","Promise","all","getApproved","allows","allow","allowances","nftSlice","loadGameDetails","nft","TronWeb","meowTokenContract","gameData","nftids","nfturls","nfturis","gameprice","toString","claimAmount","Math","pow","balanceOf","tokenOwnerLength","contractNFTCount","nft_counts","tokenOfOwnerByIndex","tmptokenID","toDecimal","tokenURI","tokenOwner","gameSlice","style","top","transform","lg","bgcolor","boxShadow","overflowY","CurrentBattle","firRandomData","secRandomData","gameLoading","allowFlg","isLoading","Datas","roomnum","firstNFt","secondNFt","firstaddress","secondaddress","fightroom","whichfight","whichFight","openState","setOpenState","claimState","setClaimState","setWhichroom","setWhichfight","decide","setDecide","io","getDate","date","year","getFullYear","month","getMonth","day","hour","getHours","minute","getMinutes","second","getSeconds","getGameData","getApprove","meta","requestStatus","fightRoomnum","flexDirection","minWidth","disabled","my","marginRight","Modal","m","Skeleton","onEnterRoom","onClaimFight","FinishedBattle","nftUrl1","address1","nftUrl2","pt","address2","Home","stackingMeow","amount","addresses","provider1","ethers","signer","meowContractABI","stackamount","stake","wait","unstackingMeow","unstackamount","unStake","stakeSlice","MeowToken","stack","stackAmount","changesStack","unstackAmount","changeUnstack","setWalletChecked","marginX","pl","opacity","TextField","required","onChange","ChestInfo","tp","Stake","createReducer","popupList","max","content","removeAfterMs","popup","concat","nanoid","show","updateVersion","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleURLWarning","currentTimestamp","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","URLWarningVisible","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","now","from","approval","claim","txs","lastCheckedBlockNumber","confirmedTime","blocksPerFetch","listeners","callListeners","fetchingBlockNumber","results","store","configureStore","reducer","user","appReducer","fightReducer","stackReducer","nftReducer","middleware","getDefaultMiddleware","serializableCheck","preloadedState","load","states","App","loadData","exact","path","to","ThemeProvider","theme","createTheme","palette","mode","common","black","primary","light","main","dark","secondary","StyledEngineProvider","injectFirst","CssBaseline","getLibrary","pollingInterval","VISIBILITY_STATE_SUPPORTED","document","useIsWindowVisible","visibilityState","focused","Updater","windowVisible","setState","blockNumberCallback","getBlockNumber","removeListener","debouncedState","waitRandom","min","ms","round","random","CancelledError","RetryableError","CALL_CHUNK_SIZE","multicallContract","chunk","minBlockNumber","aggregate","obj","resultsBlockNumber","returnData","toNumber","debouncedListeners","MULTICALL_ABI","useMulticallContract","cancellations","listeningKeys","allListeners","reduce","memo","keyListeners","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","lastBlockNumber","useAddPopup","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","contractAddress","transactionHash","transactionIndex","txn","darkHandler","match","matches","matchMedia","addListener","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ProviderNetwork","createWeb3ReactRoot","Updaters","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.70c442f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/discord-brands.3e07cf0d.svg\";","export default __webpack_public_path__ + \"static/media/ban1.5cd04bdb.jpg\";","export default __webpack_public_path__ + \"static/media/ban2.ec1990ce.jpg\";","var map = {\n\t\"./ban1.jpg\": 303,\n\t\"./ban2.jpg\": 304,\n\t\"./discord-brands.svg\": 297,\n\t\"./logo.png\": 913,\n\t\"./tronlink.svg\": 914\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 449;","export default __webpack_public_path__ + \"static/media/logo.2219dfc0.png\";","export default __webpack_public_path__ + \"static/media/tronlink.d4b98412.svg\";","// all abis...\r\nimport { abi as IntercroneswapV1Router02ABI } from \"@intercroneswap/v2-periphery/build/IIswapV1Router02.json\";\r\n\r\nimport ERC20_ABI from \"../../constants/abis/erc20.json\";\r\n\r\nexport const abis = [...ERC20_ABI, ...IntercroneswapV1Router02ABI];\r\n","import createTronLinkProvider from '@intercroneswap/tronlink-provider';\r\nimport Web3 from 'web3';\r\nimport { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { abis } from './tronlink-abis';\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super();\r\n    this.name = this.constructor.name;\r\n    this.message = 'The user rejected the request.';\r\n  }\r\n}\r\n\r\nexport class InjectedTronConnector extends AbstractConnector {\r\n  public provider: any;\r\n\r\n  constructor(kwargs: AbstractConnectorArguments) {\r\n    super(kwargs);\r\n\r\n    const getFunctionSelector = (abi: any) => {\r\n      return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\r\n    };\r\n    const getParamTypes = (params: any) => {\r\n      return params.map(({ type, components }: { type: any; components: any }) => {\r\n        if (type === 'tuple[]') {\r\n          return (\r\n            '(' +\r\n            components\r\n              .map(({ type }: { type: any }) => {\r\n                return type;\r\n              })\r\n              .join(',') +\r\n            ')[]'\r\n          );\r\n        }\r\n        return type;\r\n      });\r\n    };\r\n    const signs: any = {};\r\n    const web3 = new Web3(\r\n      new Web3.providers.WebsocketProvider('wss://nile.infura.io/ws/v3/7f14d2eb070c41029d687df66b286a09'),\r\n    );\r\n    abis.map((fn: any) => {\r\n      try {\r\n        const sign = web3.eth.abi.encodeFunctionSignature({\r\n          name: fn.name,\r\n          type: fn.type,\r\n          inputs: fn.inputs,\r\n        });\r\n        signs[sign] = getFunctionSelector(fn);\r\n      } catch (err) {\r\n      }\r\n    });\r\n    // TODO(tron): should auto-use same network as one selected in tronlink!\r\n    this.provider = createTronLinkProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n      functionSignatures: abis,\r\n      signs,\r\n    });\r\n    /*\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n    */\r\n  }\r\n\r\n  async requestProvider(args: any) {\r\n    const res = await this.provider.request(args);\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return { provider: this.provider, account };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    const chainId = await this.requestProvider({ method: 'eth_chainId' });\r\n    return chainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    const accounts = await this.requestProvider({ method: 'eth_accounts' });\r\n    const account = accounts[0];\r\n    return account;\r\n  }\r\n\r\n  public deactivate() {\r\n    return true;\r\n  }\r\n\r\n  public async isAuthorized(): Promise<boolean> {\r\n    // TODO: check if tronlink unlocked?\r\n    return true;\r\n  }\r\n}\r\n","import createJavaTronProvider from '@intercroneswap/java-tron-provider';\r\n\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nexport class NetworkConnector extends InjectedTronConnector {\r\n  constructor(kwargs: any) {\r\n    super(kwargs);\r\n    this.provider = createJavaTronProvider({\r\n      network: process.env.REACT_APP_TRON_NETWORK,\r\n      tronApiUrl: process.env.REACT_APP_NETWORK_URL,\r\n    });\r\n  }\r\n\r\n  async requestProvider(...args: any[]) {\r\n    const res = await this.provider.request(...args);\r\n    // TODO: wrap error with throw new NoEthereumProviderError()?\r\n    return res;\r\n  }\r\n\r\n  public async activate(): Promise<any> {\r\n    return { provider: this.provider };\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return null;\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nimport { NetworkConnector } from './NetworkConnector';\r\nimport { InjectedTronConnector } from './injected-tron-connector';\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '11111');\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\r\n}\r\n\r\nexport const injected = new InjectedTronConnector({\r\n  supportedChainIds: [11111, 1],\r\n});\r\n","export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n  // AVAX = 43114,\r\n  AVAX = 43113, // for test\r\n  GOERLI = 5,\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.GOERLI;\r\n","import { Networks } from \"./blockchain\";\r\n\r\nexport const NILE_TESTNET = {\r\n  MEOW_ADDRESS: \"TQzcPySsjYFdSjCT8MeBXa9FvdQpo75WDv\", //\r\n  NFT_ADDRESS: \"TNmfgzNsuD4Xdv9oAFs3Nk6nJQdq826WL4\",\r\n  MEOWTOKEN_ADDRESS: \"TJRyb1Rg4BAJCMd8cU5aCGfiTPxpY8FT1M\",\r\n};\r\n\r\nexport const getAddresses = (networkID: number) => {\r\n  if (networkID === Networks.GOERLI) return NILE_TESTNET;\r\n\r\n  throw Error(\"Network don't support\");\r\n};\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\n\r\nimport { injected } from \"../connectors\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector;\r\n  name: string;\r\n  iconName: string;\r\n  description: string;\r\n  href: string | null;\r\n  color: string;\r\n  primary?: true;\r\n  mobile?: true;\r\n  mobileOnly?: true;\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  TRONLINK: {\r\n    connector: injected,\r\n    name: \"TronLink\",\r\n    iconName: \"tronlink.svg\",\r\n    description: \"Easy-to-use browser extension.\",\r\n    href: null,\r\n    color: \"#48489b\",\r\n  },\r\n};\r\n\r\nexport const NetworkContextName = \"NETWORK\";\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\r\n\r\nexport * from \"./blockchain\";\r\nexport * from \"./addresses\";","export const messages = {\r\n  please_connect:\r\n    \"Please connect your wallet to the Ether network to use Warchest.\",\r\n  please_connect_wallet: \"Please connect your wallet.\",\r\n  try_mint_more: (value: string) =>\r\n    `You're trying to mint more than the maximum payout available! The maximum mint payout is ${value} KANDY.`,\r\n  before_minting: \"Before minting, enter a value.\",\r\n  existing_mint:\r\n    \"You have an existing mint. Minting will reset your vesting period and forfeit any pending claimable rewards. We recommend claiming rewards first or using a fresh wallet. Do you still wish to proceed?\",\r\n  before_stake: \"Before staking, enter a value.\",\r\n  before_unstake: \"Before un staking, enter a value.\",\r\n  tx_successfully_send: \"Your transaction was successfully sent\",\r\n  your_balance_updated: \"Your balance was successfully updated\",\r\n  nothing_to_claim: \"You have nothing to claim\",\r\n  something_wrong: \"Something went wrong\",\r\n  switch_to_avalanche: \"Switch to the Avalanche network?\",\r\n  slippage_too_small: \"Slippage too small\",\r\n  slippage_too_big: \"Slippage too big\",\r\n  your_balance_update_soon: \"Your balance will update soon\",\r\n  before_wrap: \"Before wraping, enter a value.\",\r\n  before_unwrap: \"Before un wraping, enter a value.\",\r\n};\r\n","const switchRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0xa86a\" }],\r\n    });\r\n};\r\n\r\nconst addChainRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n            {\r\n                chainId: \"0xa86a\",\r\n                chainName: \"Avalanche Mainnet\",\r\n                rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\r\n                blockExplorerUrls: [\"https://cchain.explorer.avax.network/\"],\r\n                nativeCurrency: {\r\n                    name: \"AVAX\",\r\n                    symbol: \"AVAX\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n};\r\n\r\nexport const swithNetwork = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await switchRequest();\r\n        } catch (error: any) {\r\n            if (error.code === 4902) {\r\n                try {\r\n                    await addChainRequest();\r\n                    await switchRequest();\r\n                } catch (addError) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\nimport { DEFAULD_NETWORK } from \"../../constants\";\r\nimport { Networks } from \"../../constants\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { swithNetwork } from \"../../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.AVAX]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.AVAX) {\r\n            setProvider(connectedProvider);\r\n        }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const checkWrongNetwork = async (): Promise<boolean> => {\r\n        if (providerChainID !== DEFAULD_NETWORK) {\r\n            const shouldSwitch = window.confirm(messages.switch_to_avalanche);\r\n            if (shouldSwitch) {\r\n                await swithNetwork();\r\n                window.location.reload();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,\r\n            checkWrongNetwork,\r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n    return \"https://ethereum-goerli-rpc.allthatnode.com\";\r\n    return \"https://api.avax.network/ext/bc/C/rpc\";\r\n};\r\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useWeb3React as useWeb3ReactCore } from \"@web3-react/core\";\r\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\r\nimport { NetworkContextName } from \"../constants\";\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & {\r\n  chainId?: ChainId;\r\n} {\r\n  const context = useWeb3ReactCore<Web3Provider>();\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName);\r\n  return context.active ? context : contextNetwork;\r\n}\r\n\r\nexport * from \"./web3\";","import { createAction } from '@reduxjs/toolkit';\r\nimport { TokenList } from '@intercroneswap/token-lists';\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string;\r\n        success: boolean;\r\n        summary?: string;\r\n      };\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string;\r\n        oldList: TokenList;\r\n        newList: TokenList;\r\n        auto: boolean;\r\n      };\r\n    };\r\n\r\nexport enum ApplicationModal {\r\n  WALLET,\r\n  SETTINGS,\r\n  SELF_CLAIM,\r\n  ADDRESS_CLAIM,\r\n  CLAIM_POPUP,\r\n  MENU,\r\n  LEFTMENU,\r\n  DELEGATE,\r\n  VOTE,\r\n}\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\r\n  'application/updateBlockNumber',\r\n);\r\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal');\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'application/addPopup',\r\n);\r\nexport const removePopup = createAction<{ key: string }>('application/removePopup');\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal);\r\n  return openModal === modal;\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS);\r\n}\r\n\r\nexport function useShowClaimPopup(): boolean {\r\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleShowClaimPopup(): () => void {\r\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\r\n}\r\n\r\nexport function useToggleSelfClaimModal(): () => void {\r\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\r\n}\r\n\r\nexport function useToggleDelegateModal(): () => void {\r\n  return useToggleModal(ApplicationModal.DELEGATE);\r\n}\r\n\r\nexport function useToggleVoteModal(): () => void {\r\n  return useToggleModal(ApplicationModal.VOTE);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }));\r\n    },\r\n    [dispatch],\r\n  );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList);\r\n  return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface Call {\r\n  address: string;\r\n  callData: string;\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/;\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`);\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`);\r\n  }\r\n  return `${call.address}-${call.callData}`;\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-');\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`);\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  };\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number;\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n);\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n);\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n);\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number;\r\n  calls: Call[];\r\n  fetchingBlockNumber: number;\r\n}>('multicall/errorFetchingMulticallResults');\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number;\r\n  blockNumber: number;\r\n  results: {\r\n    [callKey: string]: string | null;\r\n  };\r\n}>('multicall/updateMulticallResults');\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi';\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions';\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any;\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber;\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>;\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined;\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1;\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  );\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean;\r\n  readonly data: string | undefined;\r\n  readonly blockNumber: number | undefined;\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined };\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n};\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React();\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  );\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  );\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys);\r\n    if (!chainId || callKeys.length === 0) return undefined;\r\n    const calls = callKeys.map((key) => parseCallKey(key));\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    );\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      );\r\n    };\r\n  }, [chainId, dispatch, options, serializedCallKeys]);\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT;\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)];\r\n        let data;\r\n        if (result?.data && result?.data !== '0x') {\r\n          data = result.data;\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber };\r\n      }),\r\n    [callResults, calls, chainId],\r\n  );\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean;\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined;\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean;\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean;\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean;\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false };\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false };\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE;\r\n  const { valid, data, blockNumber } = callResult;\r\n  if (!valid) return INVALID_CALL_STATE;\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE;\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE;\r\n  const success = data && data.length > 2;\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber;\r\n  let result: Result | undefined = undefined;\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data);\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data);\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result: result,\r\n    error: !success,\r\n  };\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            };\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n  const latestBlockNumber = useBlockNumber();\r\n  // console.log(fragment, calls, results, latestBlockNumber, \"multicall\")\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber));\r\n  }, [fragment, contract, results, latestBlockNumber]);\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName]);\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  );\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined;\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  );\r\n\r\n  const results = useCallsData(calls, options);\r\n\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber));\r\n  }, [fragment, results, contractInterface, latestBlockNumber]);\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName]);\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : [];\r\n  }, [contract, fragment, inputs]);\r\n\r\n  const result = useCallsData(calls, options)[0];\r\n  const latestBlockNumber = useBlockNumber();\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber);\r\n  }, [result, contract, fragment, latestBlockNumber]);\r\n}\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { AddressZero } from \"@ethersproject/constants\";\r\nimport { JsonRpcSigner, Web3Provider } from \"@ethersproject/providers\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { ethAddress, remove0xPrefix } from \"@intercroneswap/java-tron-provider\";\r\nimport { getAddress } from \"ethers/lib/utils\";\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value);\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  11111: \"\",\r\n  1: \"shasta.\",\r\n  201910292: \"nile.\",\r\n};\r\n\r\nexport function getEtherscanLink(\r\n  chainId: ChainId,\r\n  data: string,\r\n  type: \"transaction\" | \"token\" | \"address\" | \"block\"\r\n): string {\r\n  const prefix = `https://${\r\n    ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[11111]\r\n  }tronscan.org`;\r\n\r\n  switch (type) {\r\n    case \"transaction\": {\r\n      return `${prefix}/#/transaction/${remove0xPrefix(data)}`;\r\n    }\r\n    case \"token\": {\r\n      return `${prefix}/#/token20/${ethAddress.toTron(data)}`;\r\n    }\r\n    case \"address\":\r\n    default: {\r\n      return `${prefix}/#/address/${ethAddress.toTron(data)}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address);\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  const tronAddress = ethAddress.toTron(parsed);\r\n  return `${tronAddress.substring(0, chars)}...${tronAddress.substr(-chars)}`;\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(\r\n  library: Web3Provider,\r\n  account: string\r\n): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(\r\n  library: Web3Provider,\r\n  account?: string\r\n): any {\r\n  // return account ? library?.trx.sign : library?.trx\r\n  return account ? getSigner(library, account) : library;\r\n}\r\n\r\n// account is optional\r\nexport function getContract(\r\n  address: string,\r\n  ABI: any,\r\n  library: Web3Provider,\r\n  account?: string\r\n): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`);\r\n  }\r\n  return new Contract(\r\n    address,\r\n    ABI,\r\n    getProviderOrSigner(library, account) as any\r\n  );\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n","import { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport MULTICALL_ABI from \"./abi.json\";\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  // TODO: TRON: mainnet multicall contract address\r\n  [ChainId.MAINNET]: \"0xD3573a8728A49512A1485D63180Ed5b095e11D5C\",\r\n  [ChainId.NILE]: \"0x04A6730FC23a5f2C3d94F7C7aCb4F92Eab8282c2\",\r\n  [ChainId.SHASTA]: \"0x9037ae53c89147e009d26f7547143544be00f984\",\r\n};\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS };\r\n","import { Contract } from \"@ethersproject/contracts\";\r\nimport { ChainId } from \"@intercroneswap/v2-sdk\";\r\nimport { useMemo } from \"react\";\r\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\r\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\r\nimport { getContract } from \"../utils\";\r\nimport { useActiveWeb3React } from \"./index\";\r\n\r\n// returns null on errors\r\nfunction useContract(\r\n  address: string | undefined,\r\n  ABI: any,\r\n  withSignerIfPossible = true\r\n): Contract | null {\r\n  const { library, account } = useActiveWeb3React();\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null;\r\n    try {\r\n      return getContract(\r\n        address,\r\n        ABI,\r\n        library,\r\n        withSignerIfPossible && account ? account : undefined\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to get contract\", error);\r\n      return null;\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account]);\r\n}\r\n\r\nexport function useENSRegistrarContract(\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  let address: string | undefined;\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      // TODO(tron): shasta TNS ?\r\n      case ChainId.MAINNET:\r\n        address = \"0x99fb68F0672E3E16AbB071342eF03355dfcb1797\";\r\n        break;\r\n      // TODO\r\n      case ChainId.NILE:\r\n        address = \"0xD2577ec90C6Fb23EC208B27609867E30D69bDc89\";\r\n        break;\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useENSResolverContract(\r\n  address: string | undefined,\r\n  withSignerIfPossible?: boolean\r\n): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React();\r\n  return useContract(\r\n    chainId && MULTICALL_NETWORKS[chainId],\r\n    MULTICALL_ABI,\r\n    false\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\nimport { isAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\r\nimport useDebounce from './useDebounce';\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200);\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined];\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n    } catch (error) {\r\n      return [undefined];\r\n    }\r\n  }, [debouncedAddress]);\r\n  const registrarContract = useENSRegistrarContract(false);\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n  const resolverAddressResult = resolverAddress.result?.[0];\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  );\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n\r\n  const changed = debouncedAddress !== address;\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  };\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { ChainId } from '@intercroneswap/v2-sdk';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string;\r\n  from: string;\r\n  contractAddress: string;\r\n  transactionIndex: number;\r\n  blockHash: string;\r\n  transactionHash: string;\r\n  blockNumber: number;\r\n  status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  from: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  claim?: { recipient: string };\r\n  summary?: string;\r\n}>('transactions/addTransaction');\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions');\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId;\r\n  hash: string;\r\n  blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    claim?: { recipient: string };\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false;\r\n\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  );\r\n}\r\n\r\n// watch for submissions to claim\r\n// return null if not done loading, return undefined if not found\r\nexport function useUserHasSubmittedClaim(account?: string): {\r\n  claimSubmitted: boolean;\r\n  claimTxn: TransactionDetails | undefined;\r\n} {\r\n  const allTransactions = useAllTransactions();\r\n\r\n  // get the txn if it has been submitted\r\n  const claimTxn = useMemo(() => {\r\n    const txnIndex = Object.keys(allTransactions).find((hash) => {\r\n      const tx = allTransactions[hash];\r\n      return tx.claim && tx.claim.recipient === account;\r\n    });\r\n    return txnIndex && allTransactions[txnIndex] ? allTransactions[txnIndex] : undefined;\r\n  }, [account, allTransactions]);\r\n\r\n  return { claimSubmitted: Boolean(claimTxn), claimTxn };\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport Jazzicon from \"jazzicon\";\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n\r\n  const { account } = useActiveWeb3React();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"16px\",\r\n        width: \"16px\",\r\n        borderRadius: \"50%\",\r\n      }}\r\n      ref={ref as any}\r\n    />\r\n  );\r\n}\r\n","import \"./loader.scss\";\r\n\r\nexport default function Loader({ stroke }: { stroke?: string }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"styled-svg\"\r\n    >\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        stroke={stroke ? stroke : \"#fff\"}\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { CheckCircle, Copy } from \"react-feather\";\r\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\r\n\r\nexport default function CopyHelper(props: {\r\n  toCopy: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [isCopied, setCopied] = useCopyClipboard();\r\n\r\n  return (\r\n    <Box className=\"copy-icon\" onClick={() => setCopied(props.toCopy)}>\r\n      {isCopied ? (\r\n        <>\r\n          <CheckCircle size={\"16\"} />\r\n          <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n            Copied\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Copy size={\"16\"} />\r\n          {props.children}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import copy from 'copy-to-clipboard';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\nexport default function useCopyClipboard(timeout = 500): [boolean, (toCopy: string) => void] {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const staticCopy = useCallback((text) => {\r\n    const didCopy = copy(text);\r\n    setIsCopied(didCopy);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false);\r\n      }, timeout);\r\n\r\n      return () => {\r\n        clearTimeout(hide);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [isCopied, setIsCopied, timeout]);\r\n\r\n  return [isCopied, staticCopy];\r\n}\r\n","import { CheckCircle, Triangle } from \"react-feather\";\r\nimport { Typography, Box, Link } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { getEtherscanLink } from \"utils\";\r\nimport { useAllTransactions } from \"state/transactions/hooks\";\r\n\r\nexport default function Transaction({ hash }: { hash: string }) {\r\n  const { chainId } = useActiveWeb3React();\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const tx = allTransactions?.[hash];\r\n  const summary = tx?.summary;\r\n  const pending = !tx?.receipt;\r\n  const success =\r\n    !pending &&\r\n    tx &&\r\n    (tx.receipt?.status === 1 || typeof tx.receipt?.status === \"undefined\");\r\n\r\n  if (!chainId) return null;\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        href={getEtherscanLink(chainId, hash, \"transaction\")}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          textDecoration: \"none\",\r\n          p: \"4px 0\",\r\n          \"&:hover\": {\r\n            textDecoration: \"underline\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography color=\"primary\" fontSize=\"14px\">\r\n          {summary ?? hash} ↗\r\n        </Typography>\r\n        <Box>\r\n          {pending ? (\r\n            <Loader stroke=\"#6164ff\" />\r\n          ) : success ? (\r\n            <CheckCircle size=\"16\" color=\"#2e7d32\" />\r\n          ) : (\r\n            <Triangle size=\"16\" color=\"#d32f2f\" />\r\n          )}\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ExternalLink as LinkIcon } from \"react-feather\";\r\nimport { Box, Typography, Button, Link, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { ethAddress } from \"@intercroneswap/java-tron-provider\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Copy from \"./Copy\";\r\nimport Transaction from \"./Transaction\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport { injected } from \"connectors\";\r\nimport { useActiveWeb3React } from \"hooks\";\r\nimport { AppDispatch } from \"state\";\r\nimport { clearAllTransactions } from \"state/transactions/actions\";\r\nimport { shortenAddress, getEtherscanLink } from \"utils\";\r\n\r\nfunction renderTransactions(transactions: string[]) {\r\n  return (\r\n    <Box>\r\n      {transactions.map((hash, i) => {\r\n        return <Transaction key={i} hash={hash} />;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n\r\ninterface AccountDetailsProps {\r\n  toggleWalletModal: () => void;\r\n  pendingTransactions: string[];\r\n  confirmedTransactions: string[];\r\n  ENSName?: string;\r\n  openOptions: () => void;\r\n}\r\n\r\nexport default function AccountDetails({\r\n  toggleWalletModal,\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n  openOptions,\r\n}: AccountDetailsProps) {\r\n  const { chainId, account, connector } = useActiveWeb3React();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  function formatConnectorName() {\r\n    const name = Object.keys(SUPPORTED_WALLETS).map(\r\n      (k) => SUPPORTED_WALLETS[k].name\r\n    )[0];\r\n    return (\r\n      <Typography color=\"#888d9b\" fontSize=\"14px\">\r\n        Connected with {name}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  function getStatusIcon() {\r\n    if (connector === injected) {\r\n      return (\r\n        <Box mr=\"8px\">\r\n          <Identicon />\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }));\r\n  }, [dispatch, chainId]);\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <Typography p=\"16px\">Account</Typography>\r\n        <Box p=\"0 16px 24px 16px\">\r\n          <Box className=\"info-card\" p=\"16px\">\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {formatConnectorName()}\r\n              <Button\r\n                variant=\"outlined\"\r\n                sx={{ fontSize: \"12px\", lineHeight: \"1.5\", p: \"4px 6px\" }}\r\n                onClick={() => {\r\n                  openOptions();\r\n                }}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {ENSName ? (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\"> {ENSName}</Typography>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {getStatusIcon()}\r\n                    <Typography fontSize=\"20px\">\r\n                      {\" \"}\r\n                      {account && shortenAddress(account)}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {account && (\r\n                  <Copy toCopy={ethAddress.toTron(account)}>\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      Copy Address\r\n                    </Typography>\r\n                  </Copy>\r\n                )}\r\n                {chainId && account && (\r\n                  <Link\r\n                    className=\"address-link\"\r\n                    href={getEtherscanLink(\r\n                      chainId,\r\n                      ENSName ? ENSName : account,\r\n                      \"address\"\r\n                    )}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <LinkIcon size={16} />\r\n                    <Typography component=\"span\" ml=\"4px\" fontSize=\"14px\">\r\n                      View on Tronscan\r\n                    </Typography>\r\n                  </Link>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\r\n        <Box p=\"16px 24px\">\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            mb=\"16px\"\r\n          >\r\n            <Typography>Recent Transactions</Typography>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              onClick={clearAllTransactionsCallback}\r\n              sx={{ textTransform: \"lowercase\" }}\r\n            >\r\n              (clear all)\r\n            </Button>\r\n          </Box>\r\n          {renderTransactions(pendingTransactions)}\r\n          {renderTransactions(confirmedTransactions)}\r\n        </Box>\r\n      ) : (\r\n        <Typography p=\"16px 24px\">\r\n          Your transactions will appear here...\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nexport default function Option({\r\n  clickable = true,\r\n  onClick = null,\r\n  color,\r\n  header,\r\n  subheader = null,\r\n  icon,\r\n  active = false,\r\n  id,\r\n}: {\r\n  clickable?: boolean;\r\n  onClick?: null | (() => void);\r\n  color: string;\r\n  header: React.ReactNode;\r\n  subheader: React.ReactNode | null;\r\n  icon: string;\r\n  active?: boolean;\r\n  id: string;\r\n}) {\r\n  const content = (\r\n    <Box\r\n      className=\"option-card-clickable\"\r\n      onClick={onClick ? onClick : () => {}}\r\n      sx={{\r\n        backgroundColor: active ? \"#EDEEF2\" : \"#ffffff\",\r\n        borderColor: active ? \"transparent\" : \"#EDEEF2\",\r\n        \"&:hover\": {\r\n          cursor: clickable ? \"pointer\" : \"\",\r\n          border: clickable ? `1px solid #6164ff` : ``,\r\n        },\r\n      }}\r\n    >\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            color,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {!active && <Box className=\"green-circle\" />}\r\n          {header}\r\n        </Box>\r\n        {subheader && (\r\n          <Typography fontSize=\"12px\" mt=\"10px\">\r\n            {subheader}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        component=\"img\"\r\n        src={icon}\r\n        alt={\"Icon\"}\r\n        sx={{ width: \"24px\", height: \"24px\" }}\r\n      />\r\n    </Box>\r\n  );\r\n\r\n  return content;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport Loader from \"components/Loader\";\r\nimport Option from \"./Option\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\n\r\nexport default function PendingView({\r\n  connector,\r\n  error = false,\r\n  setPendingError,\r\n  tryActivation,\r\n}: {\r\n  connector?: AbstractConnector;\r\n  error?: boolean;\r\n  setPendingError: (error: boolean) => void;\r\n  tryActivation: (connector: AbstractConnector) => void;\r\n}) {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        mb=\"20px\"\r\n        sx={{\r\n          borderRadius: \"12px\",\r\n          border: `1px solid ${error ? \"#FF6871\" : \"#C3C5CB\"}`,\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }} p=\"16px\">\r\n          {error ? (\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography color=\"#FF6871\">Error connecting.</Typography>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                sx={{\r\n                  backgroundColor: \"#ced0d9\",\r\n                  color: \"#000000\",\r\n                  lineHeight: \"1.5\",\r\n                  ml: \"8px\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#a8abb3\",\r\n                  },\r\n                }}\r\n                onClick={() => {\r\n                  setPendingError(false);\r\n                  connector && tryActivation(connector);\r\n                }}\r\n              >\r\n                Try Again\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Loader stroke=\"#000\" />\r\n              <Typography ml=\"8px\">Initializing...</Typography>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      {Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n        const option = SUPPORTED_WALLETS[key];\r\n        if (option.connector === connector) {\r\n          return (\r\n            <Option\r\n              id={`connect-${key}`}\r\n              key={key}\r\n              clickable={false}\r\n              color={option.color}\r\n              header={option.name}\r\n              subheader={option.description}\r\n              icon={require(\"../../assets/images/\" + option.iconName).default}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// modified from https://usehooks.com/usePrevious/\r\nexport default function usePrevious<T>(value: T) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef<T>();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Dialog, Typography, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport ReactGA from \"react-ga\";\r\nimport AccountDetails from \"components/AccountDetails\";\r\nimport Option from \"./Option\";\r\nimport PendingView from \"./PendingView\";\r\nimport { SUPPORTED_WALLETS } from \"../../constants\";\r\nimport usePrevious from \"hooks/usePrevious\";\r\nimport { ApplicationModal } from \"state/application/actions\";\r\nimport { useModalOpen, useWalletModalToggle } from \"state/application/hooks\";\r\n\r\nconst WALLET_VIEWS = {\r\n  OPTIONS: \"options\",\r\n  OPTIONS_SECONDARY: \"options_secondary\",\r\n  ACCOUNT: \"account\",\r\n  PENDING: \"pending\",\r\n};\r\n\r\nexport default function WalletModal({\r\n  pendingTransactions,\r\n  confirmedTransactions,\r\n  ENSName,\r\n}: {\r\n  pendingTransactions: string[]; // hashes of pending\r\n  confirmedTransactions: string[]; // hashes of confirmed\r\n  ENSName?: string;\r\n}) {\r\n  // important that these are destructed from the account-specific web3-react context\r\n  const { active, account, connector, activate, error } = useWeb3React();\r\n\r\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\r\n\r\n  const [pendingWallet, setPendingWallet] = useState<\r\n    AbstractConnector | undefined\r\n  >();\r\n\r\n  const [pendingError, setPendingError] = useState<boolean>();\r\n\r\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const previousAccount = usePrevious(account);\r\n\r\n  // close on connection, when logged out before\r\n  useEffect(() => {\r\n    if (account && !previousAccount && walletModalOpen) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\r\n\r\n  // always reset to account view\r\n  useEffect(() => {\r\n    if (walletModalOpen) {\r\n      setPendingError(false);\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [walletModalOpen]);\r\n\r\n  // close modal when a connection is successful\r\n  const activePrevious = usePrevious(active);\r\n  const connectorPrevious = usePrevious(connector);\r\n  useEffect(() => {\r\n    if (\r\n      walletModalOpen &&\r\n      ((active && !activePrevious) ||\r\n        (connector && connector !== connectorPrevious && !error))\r\n    ) {\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [\r\n    setWalletView,\r\n    active,\r\n    error,\r\n    connector,\r\n    walletModalOpen,\r\n    activePrevious,\r\n    connectorPrevious,\r\n  ]);\r\n\r\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\r\n    let name = \"\";\r\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      if (connector === SUPPORTED_WALLETS[key].connector) {\r\n        return (name = SUPPORTED_WALLETS[key].name);\r\n      }\r\n      return true;\r\n    });\r\n    // log selected wallet\r\n    ReactGA.event({\r\n      category: \"Wallet\",\r\n      action: \"Change Wallet\",\r\n      label: name,\r\n    });\r\n    setPendingWallet(connector); // set wallet for pending view\r\n    setWalletView(WALLET_VIEWS.PENDING);\r\n\r\n    connector &&\r\n      activate(connector, undefined, true).catch((error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          activate(connector); // a little janky...can't use setError because the connector isn't set\r\n        } else {\r\n          console.error(error);\r\n          setPendingError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  // get wallets user can switch too, depending on device/browser\r\n  function getOptions() {\r\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      const option = SUPPORTED_WALLETS[key];\r\n      return (\r\n        !isMobile &&\r\n        !option.mobileOnly && (\r\n          <Option\r\n            id={`connect-${key}`}\r\n            onClick={() => {\r\n              option.connector === connector\r\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\r\n                : !option.href && tryActivation(option.connector);\r\n            }}\r\n            key={key}\r\n            active={option.connector === connector}\r\n            color={option.color}\r\n            header={option.name}\r\n            subheader={null} //use option.descriptio to bring back multi-line\r\n            icon={require(\"../../assets/images/\" + option.iconName).default}\r\n          />\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  function getModalContent() {\r\n    if (error) {\r\n      return (\r\n        <Box>\r\n          <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography p=\"16px\">\r\n            {error instanceof UnsupportedChainIdError\r\n              ? \"Wrong Network\"\r\n              : \"Error connecting\"}\r\n          </Typography>\r\n          {error instanceof UnsupportedChainIdError ? (\r\n            <Typography\r\n              color=\"warning.main\"\r\n              sx={{ p: { xs: \"16px\", md: \"32px\" } }}\r\n            >\r\n              Please connect to the appropriate TRON network.\r\n            </Typography>\r\n          ) : (\r\n            <Typography color=\"error\" sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n              Error connecting. Try refreshing the page.\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      );\r\n    }\r\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\r\n      return (\r\n        <AccountDetails\r\n          toggleWalletModal={toggleWalletModal}\r\n          pendingTransactions={pendingTransactions}\r\n          confirmedTransactions={confirmedTransactions}\r\n          ENSName={ENSName}\r\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Box>\r\n        <IconButton className=\"close-icon\" onClick={toggleWalletModal}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\r\n          <Typography\r\n            color=\"primary.main\"\r\n            p=\"16px\"\r\n            sx={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setPendingError(false);\r\n              setWalletView(WALLET_VIEWS.ACCOUNT);\r\n            }}\r\n          >\r\n            Back\r\n          </Typography>\r\n        ) : (\r\n          <Typography p=\"16px\" sx={{ cursor: \"pointer\" }}>\r\n            Connect to a wallet\r\n          </Typography>\r\n        )}\r\n        <Box sx={{ p: { xs: \"16px\", md: \"32px\" } }}>\r\n          {walletView === WALLET_VIEWS.PENDING ? (\r\n            <PendingView\r\n              connector={pendingWallet}\r\n              error={pendingError}\r\n              setPendingError={setPendingError}\r\n              tryActivation={tryActivation}\r\n            />\r\n          ) : (\r\n            <Box>{getOptions()}</Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={walletModalOpen}\r\n      onClose={toggleWalletModal}\r\n      sx={{\r\n        \"> .MuiDialog-container\": {\r\n          \"> .MuiPaper-root\": {\r\n            maxWidth: \"420px\",\r\n            width: { xs: \"100%\", sm: \"70%\", md: \"50%\" },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {getModalContent()}\r\n    </Dialog>\r\n  );\r\n}\r\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useMemo } from \"react\";\r\nimport { Activity } from \"react-feather\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { injected } from \"connectors\";\r\nimport { NetworkContextName } from \"../../constants\";\r\nimport useENSName from \"hooks/useENSName\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\nimport {\r\n  isTransactionRecent,\r\n  useAllTransactions,\r\n} from \"state/transactions/hooks\";\r\nimport { TransactionDetails } from \"state/transactions/reducer\";\r\nimport { shortenAddress } from \"utils\";\r\nimport Identicon from \"components/Identicon\";\r\nimport Loader from \"components/Loader\";\r\nimport WalletModal from \"components/WalletModal\";\r\nimport \"./web3-status.scss\";\r\n\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime;\r\n}\r\n\r\nconst SOCK = (\r\n  <span\r\n    role=\"img\"\r\n    aria-label=\"has socks emoji\"\r\n    style={{ marginTop: -4, marginBottom: -4 }}\r\n  >\r\n    🧦\r\n  </span>\r\n);\r\n\r\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\r\n  if (connector === injected) {\r\n    return <Identicon />;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Web3StatusInner() {\r\n  const { account, connector, error } = useWeb3React();\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  const hasPendingTransactions = !!pending.length;\r\n  const hasSocks = null;\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  if (account) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n        {hasPendingTransactions ? (\r\n          <>\r\n            <Typography mr=\"8px\">{pending?.length} Pending</Typography>{\" \"}\r\n            <Loader />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {hasSocks ? SOCK : null}\r\n            <Typography mr=\"8px\" ml=\"4px\">\r\n              {ENSName || shortenAddress(account)}\r\n            </Typography>\r\n          </>\r\n        )}\r\n        {!hasPendingTransactions && connector && (\r\n          <StatusIcon connector={connector} />\r\n        )}\r\n      </Button>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <Button variant=\"contained\" color=\"error\" onClick={toggleWalletModal}>\r\n        <Activity className=\"network-icon\" />\r\n        <Typography ml=\"4px\">\r\n          {error instanceof UnsupportedChainIdError ? \"Wrong Network\" : \"Error\"}\r\n        </Typography>\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleWalletModal}>\r\n          Connect Wallet\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Web3Status() {\r\n  const { active, account } = useWeb3React();\r\n  const contextNetwork = useWeb3React(NetworkContextName);\r\n\r\n  const { ENSName } = useENSName(account ?? undefined);\r\n\r\n  const allTransactions = useAllTransactions();\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions);\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\r\n  }, [allTransactions]);\r\n\r\n  const pending = sortedRecentTransactions\r\n    .filter((tx) => !tx.receipt)\r\n    .map((tx) => tx.hash);\r\n  const confirmed = sortedRecentTransactions\r\n    .filter((tx) => tx.receipt)\r\n    .map((tx) => tx.hash);\r\n\r\n  // if (!contextNetwork.active && !active) {\r\n  //   return null;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Web3StatusInner />\r\n      <WalletModal\r\n        ENSName={ENSName ?? undefined}\r\n        pendingTransactions={pending}\r\n        confirmedTransactions={confirmed}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Link,\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nimport DiscordIcon from \"assets/images/discord-brands.svg\";\r\nimport \"./header.scss\";\r\n\r\nimport Web3Status from \"components/Web3Status\";\r\n\r\nconst menuLists = [\r\n  {\r\n    link: \"/play\",\r\n    text: \"Play War\",\r\n  },\r\n  {\r\n    link: \"/stake\",\r\n    text: \"Meow Staking\",\r\n  },\r\n  \r\n];\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleClickMenu = (link: string) => {\r\n    handleCloseUserMenu();\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      className=\"appbar\"\r\n      sx={{ backgroundColor: \"rgba(9,9,10,1)\" }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar\r\n          disableGutters\r\n          sx={{ justifyContent: \"space-between\", columnGap: \"8px\" }}\r\n        >\r\n          <Link href=\"/\" className=\"logo\" sx={{textDecoration: 'none'}}>\r\n            {/* <Box component=\"img\" src={LogoImage} alt=\"logo\" /> */}\r\n            <Typography fontFamily=\"Audiowide\" sx={{fontSize: {xs: '24px', sm: '36px', md: '40px'}}}>Catz Fight</Typography>\r\n          </Link>   \r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", columnGap: \"8px\" }}>\r\n            <Box\r\n              className=\"social-buttons\"\r\n              sx={{ display: { xs: \"none\", sm: \"flex\" } }}\r\n            >\r\n              <Button\r\n                href=\"https://twitter.com/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"               \r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TwitterIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://t.me/CryptoMoonCatz\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <TelegramIcon sx={{ color: \"#fff\" }} />\r\n              </Button>\r\n              <Button\r\n                href=\"https://discord.gg/warchest\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"social-button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{ \r\n                  backgroundColor: \"transparent\",\r\n                  '&: hover': {\r\n                    backgroundColor: 'rgba(38,40,42,0.95)'\r\n                  } \r\n                }}\r\n              >\r\n                <Box component=\"img\" src={DiscordIcon} alt=\"\" />\r\n              </Button>\r\n            </Box>\r\n            <Web3Status />            \r\n            <Button\r\n              onClick={handleOpenUserMenu}\r\n              className=\"menu-button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{\r\n                backgroundColor: 'rgba(101,230,255,0.12)', \r\n                '&: hover': {\r\n                  backgroundColor: 'rgba(101,230,255,0.15)'                                     \r\n                }          \r\n              }} \r\n            >\r\n              <MenuIcon sx={{ \r\n                color: 'rgba(101,230,255,0.9)',\r\n                '&: hover': {\r\n                  color: 'rgba(101,230,255,1)',\r\n                }\r\n              }} \r\n              />\r\n            </Button>            \r\n            <Menu              \r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n              sx={{\r\n                mt: \"45px\"                        \r\n              }} \r\n            >\r\n              <MenuItem component=\"a\" href=\"https://www.cryptomooncatz.com\"\r\n                sx={{\r\n                  backgroundColor: 'rgba(101,230,255,0.12)',\r\n                  color: 'rgba(101,230,255,0.9)'\r\n                }}>\r\n                Home\r\n              </MenuItem>\r\n              {menuLists.map((list, key) => (\r\n                <MenuItem key={key} \r\n                  sx={{\r\n                    backgroundColor: 'rgba(101,230,255,0.12)',\r\n                    color: 'rgba(101,230,255,0.9)'\r\n                  }}\r\n                onClick={() => handleClickMenu(list.link)}>\r\n                  {list.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Box } from \"@mui/material\";\r\nimport \"./banner.scss\";\r\nimport BannerImage1 from \"assets/images/ban1.jpg\";\r\nimport BannerImage2 from \"assets/images/ban2.jpg\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <>\r\n      <Box className=\"banner-container\">\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            width: { xs: \"120px\", sm: \"150px\" },\r\n            mr: { xs: 1, sm: 2, md: 3 },\r\n          }}\r\n          src={BannerImage1}\r\n          alt=\"Banner Image\"\r\n        />\r\n        <Box\r\n          component=\"img\"\r\n          sx={{ width: { xs: \"120px\", sm: \"150px\" } }}\r\n          src={BannerImage2}\r\n          alt=\"Banner Image\"\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Jackpot = () => {\r\n  const JackpotAmount = useSelector<IReduxState, string>(\r\n    (state) => state.app.jackpotAmount\r\n  );\r\n  const widrawAmount: number = useSelector<IReduxState, number>(\r\n    (state) => state.app.widrawAmount\r\n  );\r\n  const meowCount: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.meowCount\r\n  );\r\n  const contractNFTs: number = useSelector<IReduxState, number>(\r\n    (state) => state.app.contractNFTs\r\n  );\r\n\r\n  const history = useHistory();\r\n  const handleClickStake = (link: string) => {\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingY: \"3px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#FF1E1E\",\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          py: 1,\r\n          px: { xs: 1, sm: 3 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", sm: \"615px\" },\r\n          textAlign: \"center\",\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        War Chest Jackpot: {JackpotAmount} Ether\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"self-start\",\r\n          pb: 6,\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box>\r\n            <Button\r\n              sx={{\r\n                paddingX: \"16px\",\r\n                paddingY: \"6px\",\r\n                marginTop: \"8px\",\r\n                fontSize: \"18px\",\r\n                mr: 3,\r\n                color: \"rgba(101,230,255,1)\",\r\n                backgroundColor: \"rgba(101,230,255,0.15)\",\r\n              }}\r\n            >\r\n              Deposit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n          >\r\n            Withdraw NFTs\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available NFTs: {contractNFTs}\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              marginTop: \"8px\",\r\n              fontSize: \"18px\",\r\n              color: \"#52b202\",\r\n              backgroundColor: \"#d0e7b7\",\r\n            }}\r\n          >\r\n            Withdraw TRX\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available TRX: {widrawAmount}\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mr: 3 }}>\r\n          <Button\r\n            sx={{\r\n              borderRadius: \"24px\",\r\n              paddingX: \"16px\",\r\n              paddingY: \"6px\",\r\n              border: \"1px solid white\",\r\n              color: \"white\",\r\n              // backgroundColor: \"rgba(38,40,42,0.64)\",\r\n              mx: \"auto\",\r\n              fontSize: \"18px\",\r\n              marginTop: \"8px\",\r\n              display: \"block\",\r\n            }}\r\n            onClick={() => {\r\n              handleClickStake(\"stake\");\r\n            }}\r\n          >\r\n            Meow Staking\r\n          </Button>\r\n          <Typography\r\n            sx={{\r\n              paddingY: \"4px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"18px\",\r\n              color: \"#F39B33\",\r\n            }}\r\n          >\r\n            Available Meow: {meowCount}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          color: \"#fff\",\r\n          fontSize: { xs: \"20px\", xl: \"24px\" },\r\n          py: 1,\r\n          px: { xs: 1, xl: 2 },\r\n          backgroundColor: \"rgba(38,40,42,0.64)\",\r\n          width: { xs: \"450px\", xl: \"600px\" },\r\n          textAlign: \"center\",\r\n          position: { md: \"absolute\" },\r\n          mx: \"auto\",\r\n          left: \"6px\",\r\n          bottom: \"6px\",\r\n        }}\r\n      >\r\n        MEOW left to be mined: 99,999,980\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Jackpot;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Role = () => {\r\n  const randomData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.randomData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"18px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Numbers Rolled:\r\n      </Typography>\r\n      {randomData && randomData.map((data, index) => (\r\n        <Box key={index}>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber1}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              color: \"white\",\r\n              fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n              lineHeight: \"1.3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.randomNumber2}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","import {\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\n\r\nconst Winner = () => {\r\n  const winnerData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.winnerData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: 1,\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"20px\", sm: \"25px\" },\r\n          color: \"#F39B33\",\r\n          py: { xs: 1, md: 2 },\r\n        }}\r\n      >\r\n        Top 10 Winners\r\n      </Typography>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Wins:\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell\r\n              sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  color: \"white\",\r\n                  fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                }}\r\n              >\r\n                Address:\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n          {winnerData && winnerData.map((data, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {data.winCount}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{ borderBottom: \"none\", padding: \"0\", textAlign: \"center\" }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"14px\", sm: \"16px\", md: \"20px\" },\r\n                  }}\r\n                >\r\n                  {`${data.address.slice(0,4)}...${data.address.slice(-4)}`}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import { Color } from \"@material-ui/lab/Alert\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Message = IMessage & {\r\n    severity: Color;\r\n};\r\n\r\nexport interface MessagesState {\r\n    message: Message | null;\r\n}\r\n\r\ninterface IMessage {\r\n    text: string;\r\n    error?: any;\r\n}\r\n\r\n// Adds a message to the store\r\nconst createMessage = function (state: MessagesState, severity: Color, text: IMessage) {\r\n    const message: Message = {\r\n        severity,\r\n        ...text,\r\n    };\r\n    state.message = message;\r\n};\r\nconst initialState: MessagesState = {\r\n    message: null,\r\n};\r\nconst messagesSlice = createSlice({\r\n    name: \"messages\",\r\n    initialState,\r\n    reducers: {\r\n        // Creates an error message\r\n        error(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"error\", action.payload);\r\n        },\r\n        // Creates an information message\r\n        info(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"info\", action.payload);\r\n        },\r\n        warning(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"warning\", action.payload);\r\n        },\r\n        success(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"success\", action.payload);\r\n        },\r\n        // Closes a message\r\n        close(state) {\r\n            state.message = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { error, info, close, warning, success } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","import { Dispatch } from \"redux\";\r\nimport { error } from \"../store/slices/messages-slice\";\r\nimport { messages } from \"../constants/messages\";\r\n\r\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\r\n    let text = messages.something_wrong;\r\n\r\n    if (err.code && err.code === -32603) {\r\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\r\n            text = \"You may be trying to bond more than your balance! Error code: 32603. Message: ds-math-sub-underflow\";\r\n        }\r\n\r\n        if (err.data && err.data.message) {\r\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\r\n            text = \"Insufficient balance to make a transaction\";\r\n        }\r\n\r\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\r\n            text = \"Bond too small\";\r\n        }\r\n    }\r\n\r\n    if (err.code && err.code === 4001) {\r\n        if (err.message.includes(\"User denied transaction signature\")) {\r\n            text = \"User denied transaction signature\";\r\n        }\r\n    }\r\n\r\n    return dispatch(error({ text, error: err }));\r\n};\r\n","export const setAll = (state: any, properties: any) => {\r\n    const props = Object.keys(properties);\r\n    props.forEach(key => {\r\n        state[key] = properties[key];\r\n    });\r\n};\r\n","import tronWeb from \"tronweb\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport axios from \"axios\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { NILE_TESTNET } from \"../../constants/addresses\";\r\n\r\ninterface IenterRoomMeow {\r\n  tokenId: Number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: any;\r\n  gamePrice: number;\r\n  socket: any;\r\n}\r\ndeclare var window: any;\r\n\r\nexport const EnterRoom = createAsyncThunk(\r\n  \"enterRoom/enterRoomMeow\",\r\n\r\n  async (\r\n    { tokenId, fightRoom, whichroom, url, address, gamePrice, socket }: IenterRoomMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n    await axios.post(\r\n      `http://192.168.106.175:8001/api/betting/create?roomnum=${whichroom}&firstNFT=${url}&firstaddress=${address}&fightRoom=${fightRoom}`\r\n    );\r\n    socket.emit(\"enter\");\r\n\r\n    let enterTx;\r\n    try {\r\n      enterTx = await meowContract\r\n          .enterRoom(tokenId, fightRoom)\r\n          .send({ feeLimit: 100000000, callValue: gamePrice })\r\n          .then(() => { socket.emit('enter'); });\r\n      return;\r\n    } catch (err: any) {\r\n      axios.delete(\r\n        `http://192.168.106.175:8001/api/betting/delete/${whichroom}`\r\n      );\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      socket.emit(\"enter\");\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      return;\r\n    }\r\n  }\r\n);\r\ninterface IclaimFightMeow {\r\n  tokenId: number;\r\n  fightRoom: number;\r\n  whichroom: number;\r\n  url: string;\r\n  address: any;\r\n  gamePrice: number;\r\n  socket: any;\r\n}\r\n\r\nexport const ClaimFight = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async (\r\n    { tokenId, fightRoom, whichroom, url, address, gamePrice, socket }: IclaimFightMeow,\r\n    { dispatch }\r\n  ) => {\r\n    let meowContract: any;\r\n    if (window) {\r\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb\r\n          .contract()\r\n          .at(tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n      }\r\n    }\r\n\r\n    let enterTx;\r\n    let random1: number[] = [];\r\n    let random2: number[] = [];\r\n    await axios.post(\r\n      `http://192.168.106.175:8001/api/betting/update?roomnum=${whichroom}&secondNFT=${url}&secondaddress=${address}`\r\n    );\r\n    socket.emit(\"enter\");\r\n    let room: any;\r\n    try {\r\n      console.log(\"start claim Fight\");\r\n      enterTx = await meowContract\r\n        .claimFight(tokenId, fightRoom)\r\n        .send({ feeLimit: 200000000, callValue: gamePrice });\r\n      room = await meowContract.room(fightRoom).call();\r\n      console.log('before while');\r\n      while (room.random2 == 0) {\r\n        room = await meowContract.room(fightRoom).call();\r\n      }\r\n      console.log(\"roominfo: \", room);\r\n      let firstrandom = Number(room.random1);\r\n      let secondrandom = Number(room.random2);\r\n      random1[whichroom] = firstrandom;\r\n      random2[whichroom] = secondrandom;\r\n\r\n      let winnerData: any;\r\n      let flag: boolean = false;\r\n      let resultData: any;\r\n      await axios\r\n        .get(\r\n          `http://192.168.106.175:8001/api/betting/find?fightRoom=${fightRoom}`\r\n        )\r\n        .then((res) => {\r\n          resultData = res.data;\r\n        });\r\n\r\n      if (firstrandom > secondrandom) {\r\n        await axios\r\n          .get(\r\n            `http://192.168.106.175:8001/api/winner/find?address=${room.fighter1}`\r\n          )\r\n          .then((res) => {\r\n            winnerData = res.data;\r\n          });\r\n      } else if (firstrandom < secondrandom) {\r\n        await axios\r\n          .get(\r\n            `http://192.168.106.175:8001/api/winner/find?address=${room.fighter2}`\r\n          )\r\n          .then((res) => {\r\n            winnerData = res.data;\r\n          });\r\n      } else {\r\n        flag = true;\r\n      }\r\n\r\n      await axios.post(\r\n        `http://192.168.106.175:8001/api/random/create?randomNumber1=${room.random1}&randomNumber2=${room.random2}&roomnum=${fightRoom}`\r\n      );\r\n\r\n      if (winnerData) {\r\n        await axios.post(\r\n          `http://192.168.106.175:8001/api/winner/update?address=${\r\n            winnerData.address\r\n          }&winCount=${winnerData.winCount + 1}`\r\n        );\r\n      } else {\r\n        if (!flag) {\r\n          if (firstrandom > secondrandom) {\r\n            await axios.post(\r\n              `http://192.168.106.175:8001/api/winner/create?address=${\r\n                room.fighter1\r\n              }&winCount=${1}`\r\n            );\r\n          } else if (firstrandom < secondrandom) {\r\n            await axios.post(\r\n              `http://192.168.106.175:8001/api/winner/create?address=${\r\n                room.fighter2\r\n              }&winCount=${1}`\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      await axios.post(\r\n        `http://192.168.106.175:8001/api/result/create?randomNumber1=${room.random1}&randomNumber2=${room.random2}&nftUrl1=${resultData.firstNFT}&nftUrl2=${resultData.secondNFT}&address1=${room.fighter1}&address2=${room.fighter2}&roomnum=${fightRoom}`\r\n      );\r\n      socket.emit(\"enter\");\r\n\r\n      return {\r\n        random1,\r\n        random2,\r\n      };\r\n    } catch (err: any) {\r\n      axios.delete(\r\n        `http://192.168.106.175:8001/api/betting/delete1/${whichroom}`\r\n      );\r\n      socket.emit(\"enter\");\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      return;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IWinSlice {\r\n  random1: number[];\r\n  random2: number[];\r\n}\r\n\r\nconst fightSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(EnterRoom.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(EnterRoom.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(EnterRoom.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(ClaimFight.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(ClaimFight.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.fight;\r\n\r\nexport default fightSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = fightSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (fight) => fight);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IPendingTxn {\r\n  readonly txnHash: string;\r\n  readonly text: string;\r\n  readonly type: string;\r\n}\r\n\r\nconst initialState: Array<IPendingTxn> = [];\r\n\r\nconst pendingTxnsSlice = createSlice({\r\n  name: \"pendingTransactions\",\r\n  initialState,\r\n  reducers: {\r\n    fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\r\n      state.push(action.payload);\r\n    },\r\n    clearPendingTxn(state, action: PayloadAction<string>) {\r\n      const target = state.find((x) => x.txnHash === action.payload);\r\n      if (target) {\r\n        state.splice(state.indexOf(target), 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const getStakingTypeText = (action: string) => {\r\n  return action.toLowerCase() === \"stake\"\r\n    ? \"Staking KANDY\"\r\n    : \"Unstaking SKANDY\";\r\n};\r\n\r\nexport const getWrapingTypeText = (isWrap: boolean) => {\r\n  return isWrap ? \"Wrap SKANDY\" : \"Unwrap wSKANDY\";\r\n};\r\n\r\nexport const isPendingTxn = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string\r\n) => {\r\n  return pendingTransactions.map((x) => x.type).includes(type);\r\n};\r\n\r\nexport const txnButtonText = (\r\n  pendingTransactions: IPendingTxn[],\r\n  type: string,\r\n  defaultText: string\r\n) => {\r\n  return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\r\n};\r\n\r\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\r\n\r\nexport default pendingTxnsSlice.reducer;\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { success, info } from \"./messages-slice\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport tronWeb from 'tronweb';\r\nimport { NILE_TESTNET } from \"../../constants/addresses\";\r\n\r\ninterface IapproveNFT {\r\n  tokenId: Number;\r\n}\r\ndeclare var window: any\r\n\r\nexport const approveNFT = createAsyncThunk(\r\n  \"NFT/loadMFTDetails\",\r\n  //@ts-ignore\r\n  async ({ tokenId }: IapproveNFT, { dispatch }) => {\r\n    let nftContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let enterTx;\r\n    try {\r\n      enterTx = await nftContract.approve(\r\n        NILE_TESTNET.MEOW_ADDRESS,\r\n        tokenId\r\n      ).send({ feeLimit: 100000000 });\r\n      return;\r\n    } catch (err: any) {\r\n      console.log(metamaskErrorWrap(err, dispatch));\r\n      console.log(\"there is an error while approving\");\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface ILoadNFTDetails {\r\n  tokenIds: Number[];\r\n}\r\n\r\nexport const loadNFTDetails = createAsyncThunk(\r\n  \"app/loadNFTDetails\",\r\n  //@ts-ignore\r\n  async ({ tokenIds }: ILoadNFTDetails) => {\r\n    let nftContract: any;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        nftContract = await window.tronWeb.contract().at(tronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n      }\r\n    }\r\n    let allowtmp: String[] = [];\r\n    await Promise.all(\r\n      tokenIds.map(async (tokenId, index) => {\r\n        allowtmp[index] = await nftContract.getApproved(tokenId).call();\r\n      })\r\n    );\r\n    let allows: boolean[] = [];\r\n    allowtmp.map((allow, index) => {\r\n      allows[index] = allow === tronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS);\r\n    });\r\n    return {\r\n      allowances: allows,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface INFTSlice {\r\n  allowances: boolean[];\r\n  loading: boolean;\r\n}\r\n\r\nconst nftSlice = createSlice({\r\n  name: \"nft\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadNFTDetails.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadNFTDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadNFTDetails.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.nft;\r\n\r\nexport default nftSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = nftSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (nft) => nft);\r\n","import { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../state\";\r\nimport axios from \"axios\";\r\nimport TronWeb from 'tronweb';\r\nimport { NILE_TESTNET } from \"../../constants/addresses\";\r\n\r\ninterface IloadgameDetails {\r\n  account: any;\r\n}\r\ndeclare var window: any\r\n\r\nexport const loadGameDetails = createAsyncThunk(\r\n  \"app/loadGameDetails\",\r\n  //@ts-ignore\r\n  async ({ account }: IloadgameDetails ) => {\r\n    let meowContract, nftContract, meowTokenContract;\r\n    if(window) {\r\n      if(window.tronWeb && window.tronWeb.defaultAddress.base58) {\r\n        meowContract = await window.tronWeb.contract().at(TronWeb.address.toHex(NILE_TESTNET.MEOW_ADDRESS));\r\n        nftContract = await window.tronWeb.contract().at(TronWeb.address.toHex(NILE_TESTNET.NFT_ADDRESS));\r\n        meowTokenContract = await window.tronWeb.contract().at(TronWeb.address.toHex(NILE_TESTNET.MEOWTOKEN_ADDRESS));\r\n      }\r\n    }\r\n    \r\n    let gameData: any[] = [];\r\n    let randomData: any[] = [];\r\n    let resultData: any[] = [];\r\n    let winnerData: any[] = [];\r\n    let nftids: any[] = [];\r\n    let nfturls: any[] = [];\r\n    let nfturis: any[] = [];\r\n    await axios.get(`http://192.168.106.175:8001/api/betting`).then((res) => {\r\n      gameData = res.data;\r\n    });\r\n    await axios.get(`http://192.168.106.175:8001/api/random`).then((res) => {\r\n      randomData = res.data;\r\n    });\r\n    await axios.get(`http://192.168.106.175:8001/api/result`).then((res) => {\r\n      resultData = res.data;\r\n    });\r\n    await axios.get(`http://192.168.106.175:8001/api/winner`).then((res) => {\r\n      winnerData = res.data;\r\n    });\r\n    console.log(\"get Axios\");\r\n    \r\n    const gameprice = ((await meowContract.gamePrice().call())).toString();\r\n    const widrawAmount = (await meowContract.claimAmount(account).call()) / Math.pow(10,6);\r\n    const jackpotAmount = ((await meowContract.jackpotAmount().call()) / Math.pow(10, 6)).toString();\r\n    const meowCount = (await meowTokenContract.balanceOf(account).call()).toString();\r\n    console.log('get meow count');\r\n    const contractNFTCount = await meowContract.tokenOwnerLength(account).call();\r\n    const nft_counts = await nftContract.balanceOf(account).call();\r\n    for(let i = 0; i < nft_counts; i ++) {\r\n      let tmptokenID = await nftContract.tokenOfOwnerByIndex(account, i).call();\r\n      nftids[i] = TronWeb.toDecimal(tmptokenID)\r\n    }\r\n\r\n    for(let i = 0; i < nft_counts; i ++) {\r\n      nfturls[i] = await nftContract.tokenURI(nftids[i]).call();\r\n    }\r\n\r\n    for(let i = 0; i < nft_counts; i ++) {\r\n      nfturis[i] = `https://ipfs.io/ipfs/${nfturls[i].slice(7, 53)}/${nftids[i]}.png`\r\n    }\r\n    let contractNFTs = 0;\r\n    for(let i = contractNFTCount - 1; i >= 0 ; i --) {\r\n      let tmp = await meowContract.tokenOwner(account, i).call();\r\n      if(tmp == 0) break;\r\n      contractNFTs ++;\r\n    }\r\n    console.log('get nft count');\r\n    return {\r\n      gameprice,\r\n      jackpotAmount,\r\n      gameData,\r\n      randomData,\r\n      resultData,\r\n      winnerData,\r\n      nftids,\r\n      nfturis,\r\n      widrawAmount,\r\n      meowCount,\r\n      contractNFTs,\r\n    };\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {\r\n  gameprice: string;\r\n  jackpotAmount: string;\r\n  gameData: any[];\r\n  allowflg: boolean;\r\n  currentData: any;\r\n  loading: boolean;\r\n  randomData: any[];\r\n  resultData: any[];\r\n  winnerData: any[];\r\n  nftids: any[];\r\n  nfturis: any[];\r\n  widrawAmount: number;\r\n  meowCount: string;\r\n  contractNFTs: number;\r\n}\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadGameDetails.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(loadGameDetails.fulfilled, (state, action) => {\r\n        setAll(state, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadGameDetails.rejected, (state) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.app;\r\n\r\nexport default gameSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = gameSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (app) => app);\r\n","import { Box, Typography, Button, Skeleton } from \"@mui/material\";\r\nimport { ClaimFight, EnterRoom } from \"store/slices/play-slice\";\r\nimport { approveNFT, loadNFTDetails } from \"store/slices/NFt-slice\";\r\nimport { loadGameDetails } from \"store/slices/game-slice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AppDispatch } from \"state\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport axios from \"axios\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport io from \"socket.io-client\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"400px\", sm: \"500px\", md: \"700px\", lg: \"1000px\" },\r\n  height: \"600px\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  flexWrap: \"wrap\",\r\n  backgroundColor: \"rgba(38,40,42)\",\r\n  borderRadius: 8,\r\n  overflowY: \"scroll\",\r\n};\r\n\r\nconst CurrentBattle = () => {\r\n  const { account } = useWeb3React();\r\n\r\n  const gameData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.gameData\r\n  );\r\n  const gamePrice: string = useSelector<IReduxState, string>(\r\n    (state) => state.app.gameprice\r\n  );\r\n  let firRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random1\r\n  );\r\n  let secRandomData: number[] = useSelector<IReduxState, number[]>(\r\n    (state) => state.fight.random2\r\n  );\r\n  const gameLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.app.loading\r\n  );\r\n  const allowFlg: boolean[] = useSelector<IReduxState, boolean[]>(\r\n    (state) => state.nft.allowances\r\n  );\r\n  const isLoading: boolean = useSelector<IReduxState, boolean>(\r\n    (state) => state.nft.loading\r\n  );\r\n  const nftids: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.nftids\r\n  );\r\n  const nfturis: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.nfturis\r\n  );\r\n\r\n  const Datas = [\r\n    {\r\n      roomnum: 1,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 2,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 3,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      whichfight: 0,\r\n      fightroom: 0,\r\n    },\r\n    {\r\n      roomnum: 4,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 5,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 6,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 7,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n    {\r\n      roomnum: 8,\r\n      firstNFt: \"\",\r\n      secondNFt: \"\",\r\n      firstaddress: \"\",\r\n      secondaddress: \"\",\r\n      fightroom: 0,\r\n      whichfight: 0,\r\n    },\r\n  ];\r\n\r\n  gameData &&\r\n    gameData.map((data) => {\r\n      Datas[data.roomnum - 1].firstNFt = data.firstNFT;\r\n      Datas[data.roomnum - 1].secondNFt = data.secondNFT;\r\n      Datas[data.roomnum - 1].firstaddress = data.firstaddress;\r\n      Datas[data.roomnum - 1].secondaddress = data.secondaddress;\r\n      Datas[data.roomnum - 1].fightroom = data.fightRoom;\r\n      Datas[data.roomnum - 1].whichfight = data.whichFight;\r\n    });\r\n\r\n  const [openState, setOpenState] = useState(false);\r\n  const [claimState, setClaimState] = useState(false);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [whichroom, setWhichroom] = useState(0);\r\n  const [whichfight, setWhichfight] = useState(0);\r\n  const [decide, setDecide] = useState(false);\r\n  var socket = io(\"http://192.168.106.175:8001\");\r\n\r\n  const getDate = () => {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let number =\r\n      year * Math.pow(10, 10) +\r\n      month * Math.pow(10, 8) +\r\n      day * Math.pow(10, 6) +\r\n      hour * Math.pow(10, 4) +\r\n      minute * Math.pow(10, 2) +\r\n      second;\r\n    return number;\r\n  };\r\n\r\n  function getGameData() {\r\n    dispatch(loadGameDetails({ account: account }));\r\n  }\r\n\r\n  function getApprove() {\r\n    dispatch(loadNFTDetails({ tokenIds: nftids }));\r\n  }\r\n\r\n  async function approve(id: Number) {\r\n    let approveTmp = await dispatch(\r\n      approveNFT({\r\n        tokenId: id,\r\n      })\r\n    );\r\n    if (approveTmp.meta.requestStatus === \"fulfilled\") {\r\n      getApprove();\r\n    }\r\n  }\r\n\r\n  async function onEnterRoom(index: number) {\r\n    let fightRoomnum = getDate();\r\n    let enterState = await dispatch(\r\n      EnterRoom({\r\n        tokenId: nftids[index],\r\n        fightRoom: fightRoomnum,\r\n        whichroom: whichroom + 1,\r\n        url: nfturis[index],\r\n        address: account,\r\n        gamePrice: Number(gamePrice),\r\n        socket,\r\n      })\r\n    );\r\n    if (enterState.meta.requestStatus === \"fulfilled\") {\r\n      reload();\r\n    }\r\n  }\r\n\r\n  async function onClaimFight(index: number) {\r\n    let fightState = await dispatch(\r\n      ClaimFight({\r\n        tokenId: nftids[index],\r\n        fightRoom: whichfight,\r\n        whichroom: whichroom + 1,\r\n        url: nfturis[index],\r\n        address: account,\r\n        gamePrice: Number(gamePrice),\r\n        socket,\r\n      })\r\n    );\r\n    if (fightState.meta.requestStatus === \"fulfilled\") {\r\n      reload();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getApprove();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    if (gameLoading) {\r\n      reload();\r\n    }\r\n  }, [gameLoading]);\r\n\r\n  function reload() {\r\n    socket.emit(\"enter\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"entered\", () => {\r\n      console.log('broadcast from backend');\r\n      getGameData();\r\n      getApprove();\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (secRandomData) {\r\n      setDecide(true);\r\n      setTimeout(() => {\r\n        axios.delete(\r\n          `http://192.168.106.175:8001/api/betting/delete/${secRandomData.length - 1}`\r\n        );\r\n        setDecide(false);\r\n        reload();\r\n      }, 4000);\r\n    }\r\n  }, [secRandomData]);\r\n\r\n  let isFightable = false;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        10 TRX Battle (1 Roll & 1 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas &&\r\n          Datas.map((data, index) => {\r\n            if (index > 3) return;\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  mr: { xs: 1, sm: 2 },\r\n                  ml: { xs: 1, sm: 2 },\r\n                  mb: { xs: 1, sm: 2 },\r\n                }}\r\n                key={index}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    mr: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  {data.firstNFt !== \"\" ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.firstNFt}\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setOpenState(true);\r\n                    }}\r\n                    disabled={data.firstNFt !== \"\" ? true : false}\r\n                  >\r\n                    {firRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      firRandomData[index + 1] === undefined ||\r\n                      firRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Winner\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Loser\"\r\n                      : data.secondaddress === \"\" ||\r\n                        data.secondaddress === null || data.secondaddress === undefined\r\n                      ? data.firstaddress === \"\"\r\n                        ? \"Fight\"\r\n                        : `${data.firstaddress?.slice(\r\n                            0,\r\n                            4\r\n                          )}...${data.firstaddress?.slice(-4)}`\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  {data.secondNFt !== \"\" ? (\r\n                    <Box\r\n                      component=\"img\"\r\n                      src={data.secondNFt}\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                        border: \"4px solid #F39B33\",\r\n                        borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <Button\r\n                    disabled={\r\n                      !(data.firstNFt !== \"\" || data.secondaddress !== null || data.secondaddress === undefined)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      setWhichfight(data.fightroom);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setClaimState(true);\r\n                    }}\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      my: { xs: 1, sm: 2 },\r\n                      \"& .css-2pgj13-MuiButtonBase-root-MuiButton-root.Mui-disabled\":\r\n                        { color: \"#FF1E1E\" },\r\n                    }}\r\n                  >\r\n                    {secRandomData &&\r\n                    decide &&\r\n                    !(\r\n                      secRandomData[index + 1] === undefined ||\r\n                      secRandomData[index + 1] === 0\r\n                    )\r\n                      ? firRandomData[index + 1] > secRandomData[index + 1]\r\n                        ? \"Loser\"\r\n                        : firRandomData[index + 1] == secRandomData[index + 1]\r\n                        ? \"Draw\"\r\n                        : \"Winner\"\r\n                      : data.secondaddress === '' ||\r\n                        data.secondaddress === null || data.secondaddress === undefined\r\n                      ? \"Fight\"\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n      </Box>\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 2, sm: 3, md: 4, xl: 5 },\r\n        }}\r\n      >\r\n        100 TRX Battle (10 Rolls & 10 Meow)\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {Datas &&\r\n          Datas.map((data, index) => {\r\n            if (index < 4) return;\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  mr: { xs: 2, sm: 3 },\r\n                  mb: { xs: 1, sm: 2 },\r\n                }}\r\n                key={index}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    marginRight: {\r\n                      xs: \"6px\",\r\n                      sm: \"8px\",\r\n                      md: \"12px\",\r\n                      xl: \"16px\",\r\n                    },\r\n                    mb: 1,\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setOpenState(true);\r\n                    }}\r\n                    disabled={data.firstNFt !== \"\" ? true : false}\r\n                  >\r\n                    {data.secondaddress === \"\" ||\r\n                    data.secondaddress === null || data.secondaddress === undefined\r\n                      ? data.firstaddress === \"\"\r\n                        ? \"Fight\"\r\n                        : `${data.firstaddress?.slice(\r\n                            0,\r\n                            4\r\n                          )}...${data.firstaddress?.slice(-4)}`\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n                <Box>\r\n                  <Box\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      border: \"4px solid #F39B33\",\r\n                      borderRadius: { xs: \"10px\", sm: \"15px\", md: \"20px\" },\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      border: \"2px solid white\",\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      backgroundColor: \"rgba(38,40,42,0.64)\",\r\n                      paddingX: \"0\",\r\n                      textAlign: \"center\",\r\n                      minWidth: \"60px\",\r\n                      paddingY: { xs: \"2px\", sm: \"4px\" },\r\n                      mt: { xs: 1, sm: 2 },\r\n                      color: isFightable ? \"green\" : \"#FF1E1E\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setWhichroom(index);\r\n                      setWhichfight(data.fightroom);\r\n                      getGameData();\r\n                      getApprove();\r\n                      setClaimState(true);\r\n                    }}\r\n                    disabled={\r\n                      !(data.firstNFt !== \"\" || data.secondaddress !== null || data.secondaddress === undefined)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    {data.secondaddress === \"\" ||\r\n                    data.secondaddress === null || data.secondaddress === undefined\r\n                      ? \"Fight\"\r\n                      : \"Fighting...\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n      </Box>\r\n      <Modal\r\n        open={openState}\r\n        onClose={() => {\r\n          setOpenState(false);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids &&\r\n            nftids.map((id: Number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={nfturis?.[index]}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: \"100%\",\r\n                          borderRadius: \"12px\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onEnterRoom(index);\r\n                              setOpenState(false);\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={claimState}\r\n        onClose={() => {\r\n          setClaimState(false);\r\n          setWhichfight(0);\r\n        }}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {nftids &&\r\n            nftids.map((id: Number, index) => {\r\n              return (\r\n                <Box\r\n                  sx={{ m: 2, display: \"flex\", flexDirection: \"column\" }}\r\n                  key={index}\r\n                >\r\n                  <Box sx={{ mb: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n                    {nfturis ? (\r\n                      <Box\r\n                        component=\"img\"\r\n                        src={nfturis?.[index]}\r\n                        alt=\"NFT_avatar\"\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: \"100%\",\r\n                          borderRadius: \"12px\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Skeleton\r\n                        sx={{\r\n                          width: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                          height: {\r\n                            sx: \"60px\",\r\n                            sm: \"100px\",\r\n                            md: \"150px\",\r\n                            lg: \"230px\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {isLoading ? (\r\n                    <Skeleton height=\"36px\" />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        allowFlg?.[index]\r\n                          ? () => {\r\n                              onClaimFight(index);\r\n                              setClaimState(false);\r\n                            }\r\n                          : () => approve(id)\r\n                      }\r\n                    >\r\n                      {allowFlg?.[index] ? \"Fight\" : \"Approve\"}\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              );\r\n            })}\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentBattle;\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { IReduxState } from \"../../../../store/slices/state.interface\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FinishedBattle = () => {\r\n  const resultData: any[] = useSelector<IReduxState, any[]>(\r\n    (state) => state.app.resultData\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(230,239,237, 0.1)\",\r\n        paddingX: \"6px\",\r\n        mt: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n        pb: { xs: 2, sm: 4, md: 6, xl: 8 },\r\n      }}\r\n    >\r\n      <Typography\r\n        fontFamily=\"Audiowide\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", sm: \"30px\" },\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          py: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n          mb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n        }}\r\n      >\r\n        Last 100 Finished Battles\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {resultData && resultData.map((data, index) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                mr: { xs: 2, sm: 3 },\r\n                mb: { xs: 1, sm: 2, md: 3, lg: 4 },\r\n              }}\r\n              key={index}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  marginRight: { xs: \"6px\", sm: \"8px\", md: \"12px\", xl: \"16px\" },\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber1}\r\n                </Typography>\r\n                {data.nftUrl1 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl1}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 > data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"15px\", sm: \"18px\" },\r\n                      mt: 1,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address1.slice(0, 4)}...${data.address1.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 > data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  sx={{\r\n                    color: \"white\",\r\n                    fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                    mb: 1,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.randomNumber2}\r\n                </Typography>\r\n                {data.nftUrl2 ? (\r\n                  <Box\r\n                    component=\"img\"\r\n                    sx={{ width: { xs: \"120px\", sm: \"160px\", md: \"200px\" } }}\r\n                    src={data.nftUrl2}\r\n                    alt=\"Battle Image\"\r\n                  />\r\n                ) : (\r\n                  <Skeleton\r\n                    sx={{\r\n                      width: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                      height: { xs: \"120px\", sm: \"160px\", md: \"200px\" },\r\n                    }}\r\n                  />\r\n                )}\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: data.randomNumber1 < data.randomNumber2 ? \"space-between\" : 'center',\r\n                    alignItems: \"center\",\r\n                    pt: 1,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      color: \"white\",\r\n                      fontSize: { xs: \"12px\", sm: \"18px\" },\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {`${data.address2.slice(0, 4)}...${data.address2.slice(\r\n                      -4\r\n                    )}`}\r\n                  </Typography>\r\n                  {data.randomNumber1 < data.randomNumber2 ? (\r\n                    <TaskAltIcon\r\n                      sx={{\r\n                        color: \"green\",\r\n                        fontSize: { xs: \"21px\", sm: \"24px\" },\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinishedBattle;\r\n","import { Box, Typography } from \"@mui/material\";\r\n// import ActionFeed from \"./components/ActionFeed\";\r\nimport Banner from \"./components/Banner\";\r\nimport Jackpot from \"./components/Jackpot\";\r\nimport Role from \"./components/Role\";\r\nimport Winner from \"./components/Winner\";\r\nimport CurrentBattle from \"./components/CurrentBattle\";\r\nimport FinishedBattle from \"./components/FinishedBattle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Box sx={{ backgroundColor: \"rgba(38,40,42,0.95)\" }}>\r\n      <Banner />\r\n      <Typography\r\n        variant=\"h2\"\r\n        textAlign=\"center\"\r\n        fontFamily=\"Audiowide\"\r\n        color=\"white\"\r\n        sx={{\r\n          fontSize: { xs: \"24px\", md: \"48px\", xl: \"60px\" },\r\n          mt: \"16px\",\r\n          mb: \"16px\",\r\n        }}\r\n      >\r\n        Crypto Moon Catz War!\r\n      </Typography>\r\n      <Jackpot />\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: { xs: \"column\", md: \"row\" },\r\n          justifyContent: \"space-around\",\r\n          my: { xs: 1, sm: 2 },\r\n        }}\r\n      >\r\n        <Box sx={{ width: { xs: \"100%\", md: \"13%\" } }}>\r\n          <Role />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"66%\" } }}>\r\n          <CurrentBattle />\r\n          <FinishedBattle />\r\n        </Box>\r\n        <Box sx={{ width: { xs: \"100%\", md: \"15%\" } }}>\r\n          <Winner />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ethers } from \"ethers\";\r\nimport { getAddresses, Networks } from \"../../constants\";\r\nimport { meowContractABI } from \"../../abi\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  JsonRpcProvider,\r\n  StaticJsonRpcProvider,\r\n} from \"@ethersproject/providers\";\r\nimport { RootState } from \"../../state\";\r\nimport { metamaskErrorWrap } from \"helpers/metamask-error-wrap\";\r\nimport { fetchPendingTxns, clearPendingTxn } from \"./pending-txns-slice\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { warning, success, info } from \"./messages-slice\";\r\n\r\ninterface IStackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const stackingMeow = createAsyncThunk(\r\n  \"stacking/stackingMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IStackingMeow, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []);\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n    let enterTx;\r\n    let stackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.stake(stackamount);\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\ninterface IunstackingMeow {\r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n  amount: string;\r\n}\r\n\r\nexport const unstackingMeow = createAsyncThunk(\r\n  \"claimfight/claimfightMeow\",\r\n\r\n  async ({ networkID, provider, amount }: IunstackingMeow, { dispatch }) => {\r\n    if (!provider) {\r\n      dispatch(warning({ text: messages.please_connect_wallet }));\r\n      return;\r\n    }\r\n    const addresses = getAddresses(networkID);\r\n    const provider1 = new ethers.providers.Web3Provider(window.ethereum);\r\n    await provider1.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\r\n    const signer = provider1.getSigner();\r\n    const meowContract = new ethers.Contract(\r\n      addresses.MEOW_ADDRESS,\r\n      meowContractABI,\r\n      signer\r\n    );\r\n\r\n    let enterTx;\r\n    let unstackamount = parseInt(amount);\r\n    try {\r\n      enterTx = await meowContract.unStake(unstackamount);\r\n\r\n      const text = \"EnterRoom\";\r\n      const pendingTxnType = \"Entering\";\r\n\r\n      dispatch(\r\n        fetchPendingTxns({ txnHash: enterTx.hash, text, type: pendingTxnType })\r\n      );\r\n      await enterTx.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      dispatch(info({ text: messages.your_balance_update_soon }));\r\n      dispatch(info({ text: messages.your_balance_updated }));\r\n      return;\r\n    } catch (err: any) {\r\n      return metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n      if (enterTx) {\r\n        dispatch(clearPendingTxn(enterTx.hash));\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport interface IAppSlice {}\r\n\r\nconst stakeSlice = createSlice({\r\n  name: \"fight\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n      // console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(stackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(stackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(stackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(unstackingMeow.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(unstackingMeow.rejected, (state, { error }) => {\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.stack;\r\n\r\nexport default stakeSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = stakeSlice.actions;\r\n\r\nexport const getAppState = createSelector(baseInfo, (stack) => stack);\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { AppDispatch } from \"state\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWeb3Context } from \"../../../../hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { stackingMeow, unstackingMeow } from \"store/slices/staking-slice\";\r\n\r\nconst MeowToken = () => {\r\n\tconst [stackAmount, changesStack] = useState(\"\");\r\n\tconst [unstackAmount, changeUnstack] = useState(\"\");\r\n\tconst dispatch = useDispatch<AppDispatch>();\r\n\tconst { connect, provider, hasCachedProvider, chainID, connected } = useWeb3Context();\r\n\tconst [walletChecked, setWalletChecked] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (hasCachedProvider()) {\r\n\t\t\tconnect().then(() => {\r\n\t\t\t\tsetWalletChecked(true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetWalletChecked(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tasync function onStack() {\r\n\t\tawait dispatch(stackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: stackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\tasync function onUnstack() {\r\n\t\tawait dispatch(unstackingMeow({\r\n\t\t\tnetworkID: chainID,\r\n\t\t\tprovider,\r\n\t\t\tamount: unstackAmount,\r\n\t\t}));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tsx={{\r\n\t\t\t\twidth: { xs: \"320px\", sm: '540px', md: '640px' },\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\r\n\t\t\t\tpb: { xs: 1, sm: 2, md: 3, xl: 4 },\r\n\t\t\t\tpx: 2\r\n\t\t\t}}>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t\tcolor: '#58C4E4', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40' },\r\n\t\t\t\t\t\tpy: 1, px: { xs: 1, sm: 3 },\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\r\n\t\t\t\t\t\tmb: 1,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tMeow Token\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: { xs: '12px', sm: '16px' }, color: 'white' }}>\r\n\t\t\t\t\tEarn Meow each battle! Win or lose you mine one meow token.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography fontFamily=\"Audiowide\" sx={{\r\n\t\t\t\t\tcolor: '#6B81FF',\r\n\t\t\t\t\tfontSize: { xs: '14px', sm: '18px' },\r\n\t\t\t\t\tpy: { xs: 1 },\r\n\t\t\t\t\tpl: { xs: 2, sm: 4, md: 6, xl: 8 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\t24 Mined of 100,000,000 MOEW\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tEvery time a war chest is opened, users with staked Meow tokens split 40% of that Jackpot!\r\n\t\t\t\t\tPassive Inclome!\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{\r\n\t\t\t\tdisplay: 'flex', justifyContent: 'space-between', flexWrap: 'wrap',\r\n\t\t\t\talignItems: 'flex-start',\r\n\t\t\t\tpy: { xs: 1, sm: 2 }, px: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64'\r\n\t\t\t}}>\r\n\t\t\t\t{/* <Box>\r\n\t\t\t\t\t<Button sx={{border: '1px solid #F39B33', borderRadius: '24px', \r\n\t\t\t\t\t\tpaddingY: {xs: '4px', sm: '6px'}, paddingX: {xs: '8px', sm: '16px'}, \r\n\t\t\t\t\t\tfontSize: {xs: '12px', sm: '16px'}, color: '#F39B33', backgroundColor: '#393D32',\r\n\t\t\t\t\t\t'&: hover': {backgroundColor: '#393D32', opacity: 0.9}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tConnect\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, mt: 1}}>\r\n\t\t\t\t\t\tAvailable Meow: 2\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box> */}\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\t\t\tbackgroundColor: '#BADA55', fontFamily: 'Audiowide',\r\n\t\t\t\t\t\t\t'&: hover': { backgroundColor: '#BADA55', opacity: 0.9 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={onStack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStake Meow\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\t\tvalue={stackAmount}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tchangesStack((e.target.value));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' }, mt: 1 }}>\r\n\t\t\t\t\t\tStaked Meow: 10\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tpaddingY: { xs: '4px', sm: '6px' }, paddingX: { xs: '8px', sm: '16px' },\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', fontFamily: 'Audiowide',\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onUnstack}\r\n\t\t\t\t>\r\n\t\t\t\t\tUnstake Meow\r\n\t\t\t\t</Button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Required\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tsx={{ color: 'white', width: '100px', mt: 2 }}\r\n\t\t\t\t\tvalue={unstackAmount}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tchangeUnstack((e.target.value));\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ p: 1, backgroundColor: '#393D32' }}>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tTotal Staked Meow in contract: 20\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ color: 'white', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\t40% of current Jackpot: 1,259 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ py: { xs: 1, sm: 2 }, backgroundColor: '#6A6E64', paddingX: '6px' }}>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tYou share if Jackpot is triggered: 50% (504 TRX)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Button sx={{\r\n\t\t\t\t\tfontSize: { xs: '12px', sm: '16px' }, color: 'black',\r\n\t\t\t\t\tbackgroundColor: 'white', paddingY: { xs: '4px', sm: '6px' },\r\n\t\t\t\t\tpx: { xs: 3, sm: 5 }, ml: { xs: 2, sm: 4 }, my: 1,\r\n\t\t\t\t\t'&: hover': { backgroundColor: 'white', opacity: 0.9 }\r\n\t\t\t\t}}>\r\n\t\t\t\t\tClaim\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Typography sx={{ color: '#BADA55', fontSize: { xs: '12px', sm: '16px' } }}>\r\n\t\t\t\t\tUnclaimed Earnings: 0 TRX\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MeowToken;\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\nconst ChestInfo = () => {\r\n  return (\r\n    <Box\r\n\t\t\tsx={{\t\t\r\n\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '640px'},\r\n\t\t\t\tmt: {xs: 4, sm: 6, md: 8, xl: 10},\r\n\t\t\t\tmarginX: 'auto'\r\n\t\t\t}}          \r\n    >\r\n\t\t\t<Box sx={{\r\n\t\t\t\tbackgroundColor: '#393D32',\t\r\n\t\t\t\tpb: {xs: 1, sm: 2, md: 3, xl: 4},\r\n\t\t\t\tpx: 2\t\t\t\t\r\n\t\t\t}}>\r\n\t\t\t\t<Typography \r\n\t\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\t\tsx=\r\n\t\t\t\t\t\t{{ \r\n\t\t\t\t\t\t\tcolor: 'white', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3},\t\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tmx: 'auto',\t\r\n\t\t\t\t\t\t\tmb: 1,            \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tWar Chest\r\n\t\t\t\t</Typography>  \r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', py: 1}}>\r\n\t\t\t\t\tBattle players for NFTs and a chance at opening the War Chest Jackpot!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 2}}>\r\n\t\t\t\t\tEach battle 2 users put up 1 Crypto Moon Catz NFT and 10 TRX each.\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: 'white', pt: 1}}>\r\n\t\t\t\t\tUsers are the given a random nuber (1-100,000) Highest number wins!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: {xs: '12px', sm: '16px'}, color: '#BADA55', pt: 2}}>\r\n\t\t\t\t\tWinner receives both NFT's and 10 TRX + (1 Meow token)\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser receives (1 Meow token)\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\tLoser 8 TRX is sent to the War Chest Jackpot until 77,777 is rolled!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#FF1313', fontSize: {xs: '12px', sm: '16px', pt: 1}}}>\r\n\t\t\t\t\t2 TRX sent to team account\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{py: {xs: 1, sm: 2}, backgroundColor: '#6A6E64', px: 2}}>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '14px', sm: '18px'}}}>\r\n\t\t\t\t\tWar Chest Jackpot distribution:\r\n\t\t\t\t</Typography>\t\t\t\t\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t50% goes to who rolled 77,777\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t10% goes to other user in that battle\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{color: '#F39B33', fontSize: {xs: '12px', sm: '16px'}, tp: 1}}>\r\n\t\t\t\t\t40% goes to all users that have Meow tokens staked\r\n\t\t\t\t</Typography>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n  );\r\n};\r\n\r\nexport default ChestInfo;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport MeowToken from \"./components/MeowToken\";\r\nimport ChestInfo from \"./components/ChestInfo\";\r\n\r\nconst Stake = () => {\r\n  return (\r\n    <Box sx={{backgroundColor: \"#989E90\", py: {xs: 2, sm: 4, md: 6, xl: 8}\t}}>\r\n      <Typography \r\n\t\t\t\tfontFamily=\"Audiowide\"\r\n\t\t\t\tsx=\r\n\t\t\t\t\t{{ \r\n\t\t\t\t\t\tcolor: '#F39B33', fontSize: { xs: \"20px\", sm: \"28px\", md: '36px', xl: '40'}, \r\n\t\t\t\t\t\tpy: 1, px: {xs: 1, sm: 3}, backgroundColor: \"#393D32\",\t\t\t\t\t\t\r\n\t\t\t\t\t\twidth: {xs: \"320px\", sm: '540px', md: '800px', xl: '1000px'},\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\tmx: 'auto',\t\r\n            mb: 2                     \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tWar Chest Jackpot: 2,518 Tron\r\n\t\t\t</Typography>   \r\n      <MeowToken />\r\n      <ChestInfo />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal } from './actions';\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>;\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number };\r\n  readonly popupList: PopupList;\r\n  readonly openModal: ApplicationModal | null;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  openModal: null,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload;\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber;\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\r\n      }\r\n    })\r\n    .addCase(setOpenModal, (state, action) => {\r\n      state.openModal = action.payload;\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs,\r\n        },\r\n      ]);\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach((p) => {\r\n        if (p.key === key) {\r\n          p.show = false;\r\n        }\r\n      });\r\n    }),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SerializedToken {\r\n  chainId: number;\r\n  address: string;\r\n  decimals: number;\r\n  symbol?: string;\r\n  name?: string;\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken;\r\n  token1: SerializedToken;\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode');\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode');\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode');\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n);\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline');\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken');\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken');\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair');\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair',\r\n);\r\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning');\r\n","import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { updateVersion } from '../global/actions';\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  toggleURLWarning,\r\n} from './actions';\r\n\r\nconst currentTimestamp = () => new Date().getTime();\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number;\r\n\r\n  userDarkMode: boolean | null; // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean; // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean;\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number;\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number;\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken;\r\n    };\r\n  };\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair;\r\n    };\r\n  };\r\n\r\n  timestamp: number;\r\n  URLWarningVisible: boolean;\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: true,\r\n  matchesDarkMode: true,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {};\r\n      delete state.tokens[chainId][address];\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId;\r\n        state.pairs[chainId] = state.pairs[chainId] || {};\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\r\n      }\r\n      state.timestamp = currentTimestamp();\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible;\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n  hash: string;\r\n  approval?: { tokenAddress: string; spender: string };\r\n  summary?: string;\r\n  claim?: { recipient: string };\r\n  receipt?: SerializableTransactionReceipt;\r\n  lastCheckedBlockNumber?: number;\r\n  addedTime: number;\r\n  confirmedTime?: number;\r\n  from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails;\r\n  };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.');\r\n      }\r\n      const txs = transactions[chainId] ?? {};\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() };\r\n      transactions[chainId] = txs;\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return;\r\n      transactions[chainId] = {};\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber;\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash];\r\n      if (!tx) {\r\n        return;\r\n      }\r\n      tx.receipt = receipt;\r\n      tx.confirmedTime = now();\r\n    }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number;\r\n      };\r\n    };\r\n  };\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null;\r\n        blockNumber?: number;\r\n        fetchingBlockNumber?: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {});\r\n      listeners[chainId] = listeners[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {};\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1;\r\n      });\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {});\r\n\r\n        if (!listeners[chainId]) return;\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call);\r\n          if (!listeners[chainId][callKey]) return;\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return;\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch];\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--;\r\n          }\r\n        });\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          };\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return;\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call);\r\n        const current = state.callResults[chainId][callKey];\r\n        if (!current) return; // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber;\r\n          current.data = null;\r\n          current.blockNumber = fetchingBlockNumber;\r\n        }\r\n      });\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {};\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey];\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return;\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        };\r\n      });\r\n    }),\r\n);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nimport application from \"./application/reducer\";\r\nimport { updateVersion } from \"./global/actions\";\r\nimport user from \"./user/reducer\";\r\nimport transactions from \"./transactions/reducer\";\r\nimport multicall from \"./multicall/reducer\";\r\n\r\nimport appReducer from \"../store/slices/game-slice\";\r\nimport fightReducer from \"../store/slices/play-slice\";\r\nimport stackReducer from \"../store/slices/staking-slice\";\r\nimport nftReducer from \"../store/slices/NFt-slice\";\r\n  \r\nconst PERSISTED_KEYS: string[] = [\"user\", \"transactions\", \"lists\"];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    multicall,\r\n    app: appReducer,\r\n    fight: fightReducer,\r\n    stack: stackReducer,\r\n    nft: nftReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n});\r\n\r\nstore.dispatch(updateVersion());\r\n\r\nexport default store;\r\n\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Header from \"components/Header\";\r\nimport Home from \"pages/Home\";\r\nimport Stake from \"pages/Stake\";\r\nimport { Provider } from \"react-redux\";\r\nimport store, { AppDispatch } from \"./state\";\r\nimport { loadGameDetails } from \"./store/slices/game-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useWalletModalToggle } from \"state/application/hooks\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { active, account, connector, activate, error } = useWeb3React();\r\n  const toggleWalletModal = useWalletModalToggle();\r\n\r\n  const loadData = useCallback(() => {\r\n    dispatch(loadGameDetails({ account: account }));\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      loadData();\r\n    }\r\n  }, [active]);\r\n  useEffect(() => {\r\n    if (!active) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [active]);\r\n\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/stake\" component={Stake} />\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import PropTypes from \"prop-types\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport {\r\n  ThemeProvider as MUIThemeProvider,\r\n  createTheme,\r\n  StyledEngineProvider,\r\n} from \"@mui/material/styles\";\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function ThemeProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n      common: {\r\n        black: \"#16151a\",\r\n      },\r\n      primary: {\r\n        light: \"#62ceec\",\r\n        main: \"#6164ff\",\r\n        dark: \"#2847EE\",\r\n      },\r\n      secondary: {\r\n        light: \"#f59b2f\",\r\n        main: \"#ff7523\",\r\n        dark: \"#3f1d3f\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider);\r\n  library.pollingInterval = 15000;\r\n  return library;\r\n}\r\n","import { useCallback, useState } from 'react';\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document;\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\r\n  // const listener = useCallback(() => {\r\n  //   setFocused(isWindowVisible());\r\n  // }, [setFocused]);\r\n\r\n  // useEffect(() => {\r\n  //   if (!VISIBILITY_STATE_SUPPORTED) return undefined;\r\n\r\n  //   document.addEventListener('visibilitychange', listener);\r\n  //   return () => {\r\n  //     document.removeEventListener('visibilitychange', listener);\r\n  //   };\r\n  // }, [listener]);\r\n\r\n  return focused;\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\r\nimport { updateBlockNumber } from './actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React();\r\n  const dispatch = useDispatch();\r\n\r\n  const windowVisible = useIsWindowVisible();\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  });\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((state) => {\r\n        if (chainId === state.chainId) {\r\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\r\n          if (blockNumber - state.blockNumber <= 10) {\r\n            return { chainId, blockNumber: state.blockNumber };\r\n          }\r\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\r\n        }\r\n        return state;\r\n      });\r\n    },\r\n    [chainId, setState],\r\n  );\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined;\r\n\r\n    setState({ chainId, blockNumber: null });\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error));\r\n\r\n    library.on('block', blockNumberCallback);\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback);\r\n    };\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\r\n\r\n  const debouncedState = useDebounce(state, 100);\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }));\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\r\n\r\n  return null;\r\n}\r\n","function wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)));\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled');\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false;\r\n  let rejectCancelled: (error: Error) => void;\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject;\r\n    while (true) {\r\n      let result: T;\r\n      try {\r\n        result = await fn();\r\n        if (!completed) {\r\n          resolve(result);\r\n          completed = true;\r\n        }\r\n        break;\r\n      } catch (error) {\r\n        if (completed) {\r\n          break;\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error);\r\n          completed = true;\r\n          break;\r\n        }\r\n        n--;\r\n      }\r\n      await waitRandom(minWait, maxWait);\r\n    }\r\n  });\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return;\r\n      completed = true;\r\n      rejectCancelled(new CancelledError());\r\n    },\r\n  };\r\n}\r\n","import { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useMulticallContract } from '../../hooks/useContract';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport chunkArray from '../../utils/chunkArray';\r\nimport { CancelledError, retry, RetryableError } from '../../utils/retry';\r\nimport { useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions';\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 50;\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber);\r\n\r\n  let resultsBlockNumber, returnData;\r\n  try {\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData]),\r\n    );\r\n  } catch (error) {\r\n    console.debug('Failed to fetch chunk inside retry', error);\r\n    throw error;\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`);\r\n    throw new RetryableError('Fetched for old block number');\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() };\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {};\r\n  const listeners = allListeners[chainId];\r\n  if (!listeners) return {};\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey];\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key);\r\n        if (blocksPerFetch <= 0) return false;\r\n        return keyListeners[blocksPerFetch] > 0;\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current));\r\n      }, Infinity);\r\n    return memo;\r\n  }, {});\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param latestBlockNumber the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): string[] {\r\n  if (!chainId || !latestBlockNumber) return [];\r\n  const results = callResults[chainId];\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys);\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey];\r\n\r\n    const data = callResults[chainId][callKey];\r\n    // no data, must fetch\r\n    if (!data) return true;\r\n\r\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1);\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false;\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber;\r\n  });\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const state = useSelector<AppState, AppState['multicall']>((state) => state.multicall);\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100);\r\n  const latestBlockNumber = useBlockNumber();\r\n  const { chainId } = useActiveWeb3React();\r\n  const multicallContract = useMulticallContract();\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>();\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId);\r\n  }, [debouncedListeners, chainId]);\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber);\r\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber]);\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!latestBlockNumber || !chainId || !multicallContract) return;\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys);\r\n    if (outdatedCallKeys.length === 0) return;\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key));\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE);\r\n\r\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\r\n      cancellations.current?.cancellations?.forEach((c) => c());\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: latestBlockNumber,\r\n      }),\r\n    );\r\n\r\n    cancellations.current = {\r\n      blockNumber: latestBlockNumber,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\r\n          n: 2,\r\n          minWait: 2500,\r\n          maxWait: 7500,\r\n        });\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber };\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls\r\n              .slice(0, index)\r\n              .reduce<number>((memo, curr) => memo + curr.length, 0);\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length;\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null;\r\n                    return memo;\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            );\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber);\r\n              return;\r\n            }\r\n            // console.error('Failed to fetch multicall chunk', chunk, chainId, error);\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: latestBlockNumber,\r\n              }),\r\n            );\r\n          });\r\n        return cancel;\r\n      }),\r\n    };\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber]);\r\n\r\n  return null;\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\r\n  if (items.length <= maxChunkSize) return [items];\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize);\r\n  const chunkSize = Math.ceil(items.length / numChunks);\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize));\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { checkedTransaction, finalizeTransaction } from './actions';\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: unknown; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false;\r\n  if (!tx.lastCheckedBlockNumber) return true;\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\r\n  if (blocksSinceCheck < 1) return false;\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9;\r\n  } else if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2;\r\n  } else {\r\n    // otherwise every block\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { chainId, library } = useActiveWeb3React();\r\n\r\n  const lastBlockNumber = useBlockNumber();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  const transactions = chainId ? state[chainId] ?? {} : {};\r\n\r\n  // show popup on confirm\r\n  const addPopup = useAddPopup();\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return;\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              );\r\n\r\n              addPopup(\r\n                {\r\n                  txn: {\r\n                    hash,\r\n                    success: receipt.status === 1,\r\n                    summary: transactions[hash]?.summary,\r\n                  },\r\n                },\r\n                hash,\r\n              );\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }));\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error);\r\n          });\r\n      });\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\r\n\r\n  return null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../index';\r\nimport { updateMatchesDarkMode } from './actions';\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  // keep dark mode in sync with the system\r\n  useEffect(() => {\r\n    const darkHandler = (match: MediaQueryListEvent) => {\r\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }));\r\n    };\r\n\r\n    const match = window?.matchMedia('(prefers-color-scheme: dark)');\r\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }));\r\n\r\n    if (match?.addListener) {\r\n      match?.addListener(darkHandler);\r\n    } else if (match?.addEventListener) {\r\n      match?.addEventListener('change', darkHandler);\r\n    }\r\n\r\n    return () => {\r\n      if (match?.removeListener) {\r\n        match?.removeListener(darkHandler);\r\n      } else if (match?.removeEventListener) {\r\n        match?.removeEventListener('change', darkHandler);\r\n      }\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return null;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"assets/styles/index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./state\";\r\nimport ThemeProvider from \"./theme\";\r\nimport getLibrary from \"./utils/getLibrary\";\r\nimport ApplicationUpdater from \"./state/application/updater\";\r\nimport MulticallUpdater from \"./state/multicall/updater\";\r\nimport TransactionUpdater from \"./state/transactions/updater\";\r\nimport UserUpdater from \"./state/user/updater\";\r\nimport { NetworkContextName } from \"./constants\";\r\nimport { Web3ContextProvider } from \"./hooks\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <UserUpdater />\r\n      <ApplicationUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <Web3ReactProvider getLibrary={getLibrary}>\r\n    <Web3ProviderNetwork getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeProvider>\r\n          <HashRouter>\r\n            <Updaters />\r\n            <Web3ContextProvider>\r\n              <App />\r\n            </Web3ContextProvider>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </Web3ProviderNetwork>\r\n  </Web3ReactProvider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}